[{"id": 1000051, "frontend_id": "\u9762\u8bd5\u9898 17.26", "title": "Sparse Similarity", "title_cn": "\u7a00\u758f\u76f8\u4f3c\u5ea6", "content": "<p>The similarity of two documents (each with distinct words) is defined to be the size of the intersection divided by the size of the union. For example, if the documents consist of integers, the similarity of {1, 5, 3} and {1, 7, 2, 3} is 0.4, because the intersection has size 2 and the union has size 5.&nbsp;We have a long list of documents (with distinct values and each with an associated ID) where the similarity is believed to be &quot;sparse&quot;. That is, any two arbitrarily selected documents are very likely to have similarity 0. Design an algorithm that returns a list of pairs of document IDs and the associated similarity.</p>\r\n\r\n<p>Input is a 2D array&nbsp;<code>docs</code>, where&nbsp;<code>docs[i]</code>&nbsp;is the document with id&nbsp;<code>i</code>. Return an array of strings, where each string represents a pair of documents with similarity greater than 0. The string should be formatted as&nbsp; <code>{id1},{id2}: {similarity}</code>, where <code>id1</code>&nbsp;is the smaller id in the two documents, and <code>similarity</code> is the similarity rounded to four decimal places. You can return the array in any order.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> \r\n<code>[\r\n&nbsp; [14, 15, 100, 9, 3],\r\n&nbsp; [32, 1, 9, 3, 5],\r\n&nbsp; [15, 29, 2, 6, 8, 7],\r\n&nbsp; [7, 10]\r\n]</code>\r\n<strong>Output:</strong>\r\n[\r\n&nbsp; &quot;0,1: 0.2500&quot;,\r\n&nbsp; &quot;0,2: 0.1000&quot;,\r\n&nbsp; &quot;2,3: 0.1429&quot;\r\n]</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>docs.length &lt;= 500</code></li>\r\n\t<li><code>docs[i].length &lt;= 500</code></li>\r\n\t<li>The number of document pairs with similarity greater than 0 will not exceed 1000.</li>\r\n</ul>\r\n", "content_cn": "<p>\u4e24\u4e2a(\u5177\u6709\u4e0d\u540c\u5355\u8bcd\u7684)\u6587\u6863\u7684\u4ea4\u96c6(intersection)\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u9664\u4ee5\u5e76\u96c6(union)\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u5c31\u662f\u8fd9\u4e24\u4e2a\u6587\u6863\u7684\u76f8\u4f3c\u5ea6\u3002\u4f8b\u5982\uff0c{1, 5, 3} \u548c {1, 7, 2, 3} \u7684\u76f8\u4f3c\u5ea6\u662f 0.4\uff0c\u5176\u4e2d\uff0c\u4ea4\u96c6\u7684\u5143\u7d20\u6709 2 \u4e2a\uff0c\u5e76\u96c6\u7684\u5143\u7d20\u6709 5 \u4e2a\u3002\u7ed9\u5b9a\u4e00\u7cfb\u5217\u7684\u957f\u7bc7\u6587\u6863\uff0c\u6bcf\u4e2a\u6587\u6863\u5143\u7d20\u5404\u4e0d\u76f8\u540c\uff0c\u5e76\u4e0e\u4e00\u4e2a ID \u76f8\u5173\u8054\u3002\u5b83\u4eec\u7684\u76f8\u4f3c\u5ea6\u975e\u5e38&ldquo;\u7a00\u758f&rdquo;\uff0c\u4e5f\u5c31\u662f\u8bf4\u4efb\u9009 2 \u4e2a\u6587\u6863\uff0c\u76f8\u4f3c\u5ea6\u90fd\u5f88\u63a5\u8fd1 0\u3002\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u8fd4\u56de\u6bcf\u5bf9\u6587\u6863\u7684 ID \u53ca\u5176\u76f8\u4f3c\u5ea6\u3002\u53ea\u9700\u8f93\u51fa\u76f8\u4f3c\u5ea6\u5927\u4e8e 0 \u7684\u7ec4\u5408\u3002\u8bf7\u5ffd\u7565\u7a7a\u6587\u6863\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u53ef\u4ee5\u5047\u5b9a\u6bcf\u4e2a\u6587\u6863\u7531\u4e00\u4e2a\u542b\u6709\u4e0d\u540c\u6574\u6570\u7684\u6570\u7ec4\u8868\u793a\u3002</p>\n\n<p>\u8f93\u5165\u4e3a\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 <code>docs</code>\uff0c<code>docs[i]</code>&nbsp;\u8868\u793a&nbsp;id \u4e3a <code>i</code> \u7684\u6587\u6863\u3002\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u6bcf\u5bf9\u76f8\u4f3c\u5ea6\u5927\u4e8e 0 \u7684\u6587\u6863\uff0c\u5176\u683c\u5f0f\u4e3a <code>{id1},{id2}: {similarity}</code>\uff0c\u5176\u4e2d <code>id1</code> \u4e3a\u4e24\u4e2a\u6587\u6863\u4e2d\u8f83\u5c0f\u7684 id\uff0c<code>similarity</code> \u4e3a\u76f8\u4f3c\u5ea6\uff0c\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e 4 \u4f4d\u3002\u4ee5\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u6570\u7ec4\u5747\u53ef\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \n<code>[\n&nbsp; [14, 15, 100, 9, 3],\n&nbsp; [32, 1, 9, 3, 5],\n&nbsp; [15, 29, 2, 6, 8, 7],\n&nbsp; [7, 10]\n]</code>\n<strong>\u8f93\u51fa:</strong>\n[\n&nbsp; &quot;0,1: 0.2500&quot;,\n&nbsp; &quot;0,2: 0.1000&quot;,\n&nbsp; &quot;2,3: 0.1429&quot;\n]</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>docs.length &lt;= 500</code></li>\n\t<li><code>docs[i].length &lt;= 500</code></li>\n\t<li>\u76f8\u4f3c\u5ea6\u5927\u4e8e 0 \u7684\u6587\u6863\u5bf9\u6570\u4e0d\u4f1a\u8d85\u8fc7 1000</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/sparse-similarity-lcci", "path": "/lcci/17.26.Sparse%20Similarity/README_EN.md", "path_cn": "/lcci/17.26.Sparse%20Similarity/README.md", "tags": ["Hash Table"], "tags_cn": ["\u54c8\u5e0c\u8868"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 1000050, "frontend_id": "\u9762\u8bd5\u9898 16.22", "title": "Langtons Ant", "title_cn": "\u5170\u987f\u8682\u8681", "content": "<p>An ant is sitting on an infinite grid of white and black squares. It initially faces right. All squares are white initially.</p>\r\n\r\n<p>At each step, it does the following:</p>\r\n\r\n<p>(1) At a white square, flip the color of the square, turn 90 degrees right (clockwise), and move forward one unit.</p>\r\n\r\n<p>(2) At a black square, flip the color of the square, turn 90 degrees left (counter-clockwise), and move forward one unit.</p>\r\n\r\n<p>Write a program to simulate the first K moves that the ant makes and print the final board as a grid.</p>\r\n\r\n<p>The grid should be represented as an array of strings, where each element represents one row in the grid. The black square is represented as <code>&#39;X&#39;</code>, and the white square is represented as <code>&#39;_&#39;</code>, the square which is occupied by the ant is represented as <code>&#39;L&#39;</code>, <code>&#39;U&#39;</code>, <code>&#39;R&#39;</code>, <code>&#39;D&#39;</code>, which means the left, up, right and down orientations respectively. You only need to return the minimum matrix that is able to contain all squares that are passed through by the ant.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 0\r\n<strong>Output: </strong>[&quot;R&quot;]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 2\r\n<strong>Output:\r\n</strong>[\r\n&nbsp; &quot;_X&quot;,\r\n&nbsp; &quot;LX&quot;\r\n]\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 5\r\n<strong>Output:\r\n</strong>[\r\n&nbsp; &quot;_U&quot;,\r\n&nbsp; &quot;X_&quot;,\r\n&nbsp; &quot;XX&quot;\r\n]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>K &lt;= 100000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u4e00\u53ea\u8682\u8681\u5750\u5728\u7531\u767d\u8272\u548c\u9ed1\u8272\u65b9\u683c\u6784\u6210\u7684\u65e0\u9650\u7f51\u683c\u4e0a\u3002\u5f00\u59cb\u65f6\uff0c\u7f51\u683c\u5168\u767d\uff0c\u8682\u8681\u9762\u5411\u53f3\u4fa7\u3002\u6bcf\u884c\u8d70\u4e00\u6b65\uff0c\u8682\u8681\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002</p>\n\n<p>(1) \u5982\u679c\u5728\u767d\u8272\u65b9\u683c\u4e0a\uff0c\u5219\u7ffb\u8f6c\u65b9\u683c\u7684\u989c\u8272\uff0c\u5411\u53f3(\u987a\u65f6\u9488)\u8f6c 90 \u5ea6\uff0c\u5e76\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\u3002<br>\n(2) \u5982\u679c\u5728\u9ed1\u8272\u65b9\u683c\u4e0a\uff0c\u5219\u7ffb\u8f6c\u65b9\u683c\u7684\u989c\u8272\uff0c\u5411\u5de6(\u9006\u65f6\u9488\u65b9\u5411)\u8f6c 90 \u5ea6\uff0c\u5e76\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\u3002</p>\n\n<p>\u7f16\u5199\u7a0b\u5e8f\u6765\u6a21\u62df\u8682\u8681\u6267\u884c\u7684\u524d K \u4e2a\u52a8\u4f5c\uff0c\u5e76\u8fd4\u56de\u6700\u7ec8\u7684\u7f51\u683c\u3002</p>\n\n<p>\u7f51\u683c\u7531\u6570\u7ec4\u8868\u793a\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u7f51\u683c\u4e2d\u7684\u4e00\u884c\uff0c\u9ed1\u8272\u65b9\u683c\u7531&nbsp;<code>&#39;X&#39;</code>&nbsp;\u8868\u793a\uff0c\u767d\u8272\u65b9\u683c\u7531&nbsp;<code>&#39;_&#39;</code>&nbsp;\u8868\u793a\uff0c\u8682\u8681\u6240\u5728\u7684\u4f4d\u7f6e\u7531&nbsp;<code>&#39;L&#39;</code>, <code>&#39;U&#39;</code>, <code>&#39;R&#39;</code>, <code>&#39;D&#39;</code>&nbsp;\u8868\u793a\uff0c\u5206\u522b\u8868\u793a\u8682\u8681&nbsp;\u5de6\u3001\u4e0a\u3001\u53f3\u3001\u4e0b \u7684\u671d\u5411\u3002\u53ea\u9700\u8981\u8fd4\u56de\u80fd\u591f\u5305\u542b\u8682\u8681\u8d70\u8fc7\u7684\u6240\u6709\u65b9\u683c\u7684\u6700\u5c0f\u77e9\u5f62\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 0\n<strong>\u8f93\u51fa: </strong>[&quot;R&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 2\n<strong>\u8f93\u51fa:\n</strong>[\n&nbsp; &quot;_X&quot;,\n&nbsp; &quot;LX&quot;\n]\n</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 5\n<strong>\u8f93\u51fa:\n</strong>[\n&nbsp; &quot;_U&quot;,\n&nbsp; &quot;X_&quot;,\n&nbsp; &quot;XX&quot;\n]\n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li><code>K &lt;= 100000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/langtons-ant-lcci", "path": "/lcci/16.22.Langtons%20Ant/README_EN.md", "path_cn": "/lcci/16.22.Langtons%20Ant/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000049, "frontend_id": "\u9762\u8bd5\u9898 17.25", "title": "Word Rectangle", "title_cn": "\u5355\u8bcd\u77e9\u9635", "content": "<p>Given a list of millions of words, design an algorithm to create the largest possible rectangle of letters such that every row forms a word (reading left to right) and every column forms a word (reading top to bottom). The words need not be chosen consecutively from the list but all rows must be the same length and all columns must be the same height.</p>\r\n\r\n<p>If there are more than one answer, return any one of them. A word can be used more than once.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>[&quot;this&quot;, &quot;real&quot;, &quot;hard&quot;, &quot;trh&quot;, &quot;hea&quot;, &quot;iar&quot;, &quot;sld&quot;]</code>\r\n<strong>Output:\r\n</strong><code>[\r\n&nbsp;  &quot;this&quot;,\r\n&nbsp;  &quot;real&quot;,\r\n&nbsp;  &quot;hard&quot;</code>\r\n]</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>[&quot;aa&quot;]</code>\r\n<strong>Output: </strong>[&quot;aa&quot;,&quot;aa&quot;]</pre>\r\n\r\n<p><strong>Notes: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>words.length &lt;= 1000</code></li>\r\n\t<li><code>words[i].length &lt;= 100</code></li>\r\n\t<li>It&#39;s guaranteed that&nbsp;all the words are randomly generated.</li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4efd\u5355\u8bcd\u7684\u6e05\u5355\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u521b\u5efa\u7531\u5b57\u6bcd\u7ec4\u6210\u7684\u9762\u79ef\u6700\u5927\u7684\u77e9\u5f62\uff0c\u5176\u4e2d\u6bcf\u4e00\u884c\u7ec4\u6210\u4e00\u4e2a\u5355\u8bcd(\u81ea\u5de6\u5411\u53f3)\uff0c\u6bcf\u4e00\u5217\u4e5f\u7ec4\u6210\u4e00\u4e2a\u5355\u8bcd(\u81ea\u4e0a\u800c\u4e0b)\u3002\u4e0d\u8981\u6c42\u8fd9\u4e9b\u5355\u8bcd\u5728\u6e05\u5355\u91cc\u8fde\u7eed\u51fa\u73b0\uff0c\u4f46\u8981\u6c42\u6240\u6709\u884c\u7b49\u957f\uff0c\u6240\u6709\u5217\u7b49\u9ad8\u3002</p>\n\n<p>\u5982\u679c\u6709\u591a\u4e2a\u9762\u79ef\u6700\u5927\u7684\u77e9\u5f62\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u5747\u53ef\u3002\u4e00\u4e2a\u5355\u8bcd\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;this&quot;, &quot;real&quot;, &quot;hard&quot;, &quot;trh&quot;, &quot;hea&quot;, &quot;iar&quot;, &quot;sld&quot;]</code>\n<strong>\u8f93\u51fa:\n</strong><code>[\n&nbsp;  &quot;this&quot;,\n&nbsp;  &quot;real&quot;,\n&nbsp;  &quot;hard&quot;</code>\n]</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;aa&quot;]</code>\n<strong>\u8f93\u51fa: </strong>[&quot;aa&quot;,&quot;aa&quot;]</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li><code>words.length &lt;= 1000</code></li>\n\t<li><code>words[i].length &lt;= 100</code></li>\n\t<li>\u6570\u636e\u4fdd\u8bc1\u5355\u8bcd\u8db3\u591f\u968f\u673a</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/word-rectangle-lcci", "path": "/lcci/17.25.Word%20Rectangle/README_EN.md", "path_cn": "/lcci/17.25.Word%20Rectangle/README.md", "tags": [], "tags_cn": [], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 1000048, "frontend_id": "\u9762\u8bd5\u9898 16.21", "title": "Sum Swap", "title_cn": "\u4ea4\u6362\u548c", "content": "<p>Given two arrays of integers, find a pair of values (one value from each array) that you can swap to give the two arrays the same sum.</p>\r\n\r\n<p>Return an array, where the first element is the element in the first array that will be swapped, and the second element is another one in the second array. If there are more than one answers, return any one of them. If there is no answer, return an empty array.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> array1 = [4, 1, 2, 1, 1, 2], array2 = [3, 6, 3, 3]\r\n<strong>Output:</strong> [1, 3]\r\n</pre>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> array1 = <code>[1, 2, 3], array2 = [4, 5, 6]</code>\r\n<strong>Output: </strong>[]</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= array1.length, array2.length &lt;= 100000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u8bf7\u4ea4\u6362\u4e00\u5bf9\u6570\u503c\uff08\u6bcf\u4e2a\u6570\u7ec4\u4e2d\u53d6\u4e00\u4e2a\u6570\u503c\uff09\uff0c\u4f7f\u5f97\u4e24\u4e2a\u6570\u7ec4\u6240\u6709\u5143\u7d20\u7684\u548c\u76f8\u7b49\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u8981\u4ea4\u6362\u7684\u5143\u7d20\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u4e2d\u8981\u4ea4\u6362\u7684\u5143\u7d20\u3002\u82e5\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u8fd4\u56de\u4efb\u610f\u4e00\u4e2a\u5747\u53ef\u3002\u82e5\u65e0\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u503c\uff0c\u8fd4\u56de\u7a7a\u6570\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> array1 = [4, 1, 2, 1, 1, 2], array2 = [3, 6, 3, 3]\n<strong>\u8f93\u51fa:</strong> [1, 3]\n</pre>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> array1 = <code>[1, 2, 3], array2 = [4, 5, 6]</code>\n<strong>\u8f93\u51fa: </strong>[]</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= array1.length, array2.length &lt;= 100000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/sum-swap-lcci", "path": "/lcci/16.21.Sum%20Swap/README_EN.md", "path_cn": "/lcci/16.21.Sum%20Swap/README.md", "tags": ["Sort", "Array"], "tags_cn": ["\u6392\u5e8f", "\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000047, "frontend_id": "\u9762\u8bd5\u9898 16.20", "title": "T9", "title_cn": "T9\u952e\u76d8", "content": "<p>On old cell phones, users typed on a numeric keypad and the phone would provide a list of words that matched these numbers. Each digit mapped to a set of 0&nbsp;- 4 letters. Implement an algo&shy;rithm to return a list of matching words, given a sequence of digits. You are provided a list of valid words. The mapping is shown in the diagram below:</p>\r\n\r\n<p><img src=\"https://assets.leetcode.cn/aliyun-lc-upload/original_images/17_telephone_keypad.png\" style=\"width: 200px;\" /></p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> num = &quot;8733&quot;, words = [&quot;tree&quot;, &quot;used&quot;]\r\n<strong>Output:</strong> [&quot;tree&quot;, &quot;used&quot;]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> num = &quot;2&quot;, words = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]\r\n<strong>Output:</strong> [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]</pre>\r\n\r\n<p>Note:</p>\r\n\r\n<ul>\r\n\t<li><code>num.length &lt;= 1000</code></li>\r\n\t<li><code>words.length &lt;= 500</code></li>\r\n\t<li><code>words[i].length == num.length</code></li>\r\n\t<li><code>There are no number 0 and 1 in num</code>.</li>\r\n</ul>\r\n", "content_cn": "<p>\u5728\u8001\u5f0f\u624b\u673a\u4e0a\uff0c\u7528\u6237\u901a\u8fc7\u6570\u5b57\u952e\u76d8\u8f93\u5165\uff0c\u624b\u673a\u5c06\u63d0\u4f9b\u4e0e\u8fd9\u4e9b\u6570\u5b57\u76f8\u5339\u914d\u7684\u5355\u8bcd\u5217\u8868\u3002\u6bcf\u4e2a\u6570\u5b57\u6620\u5c04\u52300\u81f34\u4e2a\u5b57\u6bcd\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57\u5e8f\u5217\uff0c\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u6765\u8fd4\u56de\u5339\u914d\u5355\u8bcd\u7684\u5217\u8868\u3002\u4f60\u4f1a\u5f97\u5230\u4e00\u5f20\u542b\u6709\u6709\u6548\u5355\u8bcd\u7684\u5217\u8868\u3002\u6620\u5c04\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p>\n\n<p><img src=\"https://assets.leetcode.cn/aliyun-lc-upload/original_images/17_telephone_keypad.png\" style=\"width: 200px;\"></p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> num = &quot;8733&quot;, words = [&quot;tree&quot;, &quot;used&quot;]\n<strong>\u8f93\u51fa:</strong> [&quot;tree&quot;, &quot;used&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> num = &quot;2&quot;, words = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]\n<strong>\u8f93\u51fa:</strong> [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]</pre>\n\n<p>\u63d0\u793a\uff1a</p>\n\n<ul>\n\t<li><code>num.length &lt;= 1000</code></li>\n\t<li><code>words.length &lt;= 500</code></li>\n\t<li><code>words[i].length == num.length</code></li>\n\t<li><code>num</code>\u4e2d\u4e0d\u4f1a\u51fa\u73b0 0, 1 \u8fd9\u4e24\u4e2a\u6570\u5b57</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/t9-lcci", "path": "/lcci/16.20.T9/README_EN.md", "path_cn": "/lcci/16.20.T9/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000046, "frontend_id": "\u9762\u8bd5\u9898 17.24", "title": "Max Submatrix", "title_cn": "\u6700\u5927\u5b50\u77e9\u9635", "content": "<p>Given an NxN matrix of positive and negative integers, write code to find the submatrix with the largest possible sum.</p>\r\n\r\n<p>Return an array&nbsp;<code>[r1, c1, r2, c2]</code>, where&nbsp;<code>r1</code>, <code>c1</code> are the row number and the column number of the submatrix&#39;s upper left corner respectively, and&nbsp;<code>r2</code>, <code>c2</code> are the row number of and the column number of lower right corner. If there are more than one answers, return any one of them.</p>\r\n\r\n<p><b>Note:&nbsp;</b>This problem is slightly different from the original one in the book.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong><code>[\r\n&nbsp;  [-1,<strong>0</strong>],\r\n&nbsp;  [0,-1]\r\n]</code>\r\n<strong>Output: </strong>[0,1,0,1]</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= matrix.length, matrix[0].length &lt;= 200</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u548c\u8d1f\u6574\u6570\u7ec4\u6210\u7684 N &times; M&nbsp;\u77e9\u9635\uff0c\u7f16\u5199\u4ee3\u7801\u627e\u51fa\u5143\u7d20\u603b\u548c\u6700\u5927\u7684\u5b50\u77e9\u9635\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4 <code>[r1, c1, r2, c2]</code>\uff0c\u5176\u4e2d <code>r1</code>, <code>c1</code> \u5206\u522b\u4ee3\u8868\u5b50\u77e9\u9635\u5de6\u4e0a\u89d2\u7684\u884c\u53f7\u548c\u5217\u53f7\uff0c<code>r2</code>, <code>c2</code> \u5206\u522b\u4ee3\u8868\u53f3\u4e0b\u89d2\u7684\u884c\u53f7\u548c\u5217\u53f7\u3002\u82e5\u6709\u591a\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u77e9\u9635\uff0c\u8fd4\u56de\u4efb\u610f\u4e00\u4e2a\u5747\u53ef\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u672c\u9898\u76f8\u5bf9\u4e66\u4e0a\u539f\u9898\u7a0d\u4f5c\u6539\u52a8</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:\n</strong><code>[\n&nbsp;  [-1,<strong>0</strong>],\n&nbsp;  [0,-1]\n]</code>\n<strong>\u8f93\u51fa: </strong>[0,1,0,1]\n<strong>\u89e3\u91ca: </strong>\u8f93\u5165\u4e2d\u6807\u7c97\u7684\u5143\u7d20\u5373\u4e3a\u8f93\u51fa\u6240\u8868\u793a\u7684\u77e9\u9635</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= matrix.length, matrix[0].length &lt;= 200</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/max-submatrix-lcci", "path": "/lcci/17.24.Max%20Submatrix/README_EN.md", "path_cn": "/lcci/17.24.Max%20Submatrix/README.md", "tags": ["Dynamic Programming"], "tags_cn": ["\u52a8\u6001\u89c4\u5212"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 1000045, "frontend_id": "\u9762\u8bd5\u9898 17.23", "title": "Max Black Square", "title_cn": "\u6700\u5927\u9ed1\u65b9\u9635", "content": "<p>Imagine you have a square matrix, where each cell (pixel) is either black or white Design an algorithm to find the maximum subsquare such that all four borders are filled with black pixels.</p>\r\n\r\n<p>Return an array&nbsp;<code>[r, c, size]</code>, where&nbsp;<code>r</code>,&nbsp;<code>c</code>&nbsp;are the row number and the column number of the subsquare&#39;s upper left corner respectively, and <code>size</code>&nbsp;is the side length of the subsquare. If there are more than one answers, return the one that has smallest <code>r</code>. If there are more than one answers that have the same <code>r</code>, return the one that has smallest <code>c</code>. If there&#39;s no answer, return an empty array.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong>[\r\n&nbsp;  [1,0,1],\r\n&nbsp;  [<strong>0,0</strong>,1],\r\n&nbsp;  [<strong>0,0</strong>,1]\r\n]\r\n<strong>Output: </strong>[1,0,2]\r\n<strong>Explanation:</strong> 0 represents black, and 1 represents white, bold elements in the input is the answer.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong>[\r\n&nbsp;  [<strong>0</strong>,1,1],\r\n&nbsp;  [1,0,1],\r\n&nbsp;  [1,1,0]\r\n]\r\n<strong>Output: </strong>[0,0,1]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>matrix.length == matrix[0].length &lt;= 200</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u65b9\u9635\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u5143(\u50cf\u7d20)\u975e\u9ed1\u5373\u767d\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u627e\u51fa 4 \u6761\u8fb9\u7686\u4e3a\u9ed1\u8272\u50cf\u7d20\u7684\u6700\u5927\u5b50\u65b9\u9635\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4 <code>[r, c, size]</code> \uff0c\u5176\u4e2d&nbsp;<code>r</code>,&nbsp;<code>c</code>&nbsp;\u5206\u522b\u4ee3\u8868\u5b50\u65b9\u9635\u5de6\u4e0a\u89d2\u7684\u884c\u53f7\u548c\u5217\u53f7\uff0c<code>size</code> \u662f\u5b50\u65b9\u9635\u7684\u8fb9\u957f\u3002\u82e5\u6709\u591a\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u65b9\u9635\uff0c\u8fd4\u56de <code>r</code> \u6700\u5c0f\u7684\uff0c\u82e5 <code>r</code> \u76f8\u540c\uff0c\u8fd4\u56de <code>c</code> \u6700\u5c0f\u7684\u5b50\u65b9\u9635\u3002\u82e5\u65e0\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u65b9\u9635\uff0c\u8fd4\u56de\u7a7a\u6570\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:\n</strong>[\n&nbsp;  [1,0,1],\n&nbsp;  [<strong>0,0</strong>,1],\n&nbsp;  [<strong>0,0</strong>,1]\n]\n<strong>\u8f93\u51fa: </strong>[1,0,2]\n<strong>\u89e3\u91ca: </strong>\u8f93\u5165\u4e2d 0 \u4ee3\u8868\u9ed1\u8272\uff0c1 \u4ee3\u8868\u767d\u8272\uff0c\u6807\u7c97\u7684\u5143\u7d20\u5373\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u5b50\u65b9\u9635\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:\n</strong>[\n&nbsp;  [<strong>0</strong>,1,1],\n&nbsp;  [1,0,1],\n&nbsp;  [1,1,0]\n]\n<strong>\u8f93\u51fa: </strong>[0,0,1]\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>matrix.length == matrix[0].length &lt;= 200</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/max-black-square-lcci", "path": "/lcci/17.23.Max%20Black%20Square/README_EN.md", "path_cn": "/lcci/17.23.Max%20Black%20Square/README.md", "tags": ["Dynamic Programming"], "tags_cn": ["\u52a8\u6001\u89c4\u5212"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000044, "frontend_id": "\u9762\u8bd5\u9898 17.19", "title": "Missing Two", "title_cn": "\u6d88\u5931\u7684\u4e24\u4e2a\u6570\u5b57", "content": "<p>You are given an array with all the numbers from 1 to N appearing exactly once, except for two number that is missing. How can you find the missing number in O(N) time and 0(1) space?</p>\r\n\r\n<p>You can return the missing numbers in any order.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>[1]</code>\r\n<strong>Output: </strong>[2,3]</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>[2,3]</code>\r\n<strong>Output: </strong>[1,4]</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>nums.length &lt;=&nbsp;30000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5305\u542b\u4ece 1 \u5230 N \u6240\u6709\u7684\u6574\u6570\uff0c\u4f46\u5176\u4e2d\u7f3a\u4e86\u4e24\u4e2a\u6570\u5b57\u3002\u4f60\u80fd\u5728 O(N) \u65f6\u95f4\u5185\u53ea\u7528 O(1) \u7684\u7a7a\u95f4\u627e\u5230\u5b83\u4eec\u5417\uff1f</p>\n\n<p>\u4ee5\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u8fd9\u4e24\u4e2a\u6570\u5b57\u5747\u53ef\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[1]</code>\n<strong>\u8f93\u51fa: </strong>[2,3]</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[2,3]</code>\n<strong>\u8f93\u51fa: </strong>[1,4]</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>nums.length &lt;=&nbsp;30000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/missing-two-lcci", "path": "/lcci/17.19.Missing%20Two/README_EN.md", "path_cn": "/lcci/17.19.Missing%20Two/README.md", "tags": ["Array", "Math"], "tags_cn": ["\u6570\u7ec4", "\u6570\u5b66"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 1000043, "frontend_id": "\u9762\u8bd5\u9898 17.18", "title": "Shortest Supersequence", "title_cn": "\u6700\u77ed\u8d85\u4e32", "content": "<p>You are given two arrays, one shorter (with all distinct elements) and one longer. Find the shortest subarray in the longer array that contains all the elements in the shorter array. The items can appear in any order.</p>\r\n\r\n<p>Return the indexes of the leftmost and the rightmost elements of the array. If there are more than one answer, return the one that has the smallest left index. If there is no answer, return an empty array.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nbig = <code>[7,5,9,0,2,1,3,<strong>5,7,9,1</strong>,1,5,8,8,9,7]\r\nsmall = [1,5,9]</code>\r\n<strong>Output: </strong>[7,10]</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nbig = <code>[1,2,3]\r\nsmall = [4]</code>\r\n<strong>Output: </strong>[]</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>big.length&nbsp;&lt;= 100000</code></li>\r\n\t<li><code>1 &lt;= small.length&nbsp;&lt;= 100000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u5047\u8bbe\u4f60\u6709\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u957f\u4e00\u4e2a\u77ed\uff0c\u77ed\u7684\u5143\u7d20\u5747\u4e0d\u76f8\u540c\u3002\u627e\u5230\u957f\u6570\u7ec4\u4e2d\u5305\u542b\u77ed\u6570\u7ec4\u6240\u6709\u7684\u5143\u7d20\u7684\u6700\u77ed\u5b50\u6570\u7ec4\uff0c\u5176\u51fa\u73b0\u987a\u5e8f\u65e0\u5173\u7d27\u8981\u3002</p>\n\n<p>\u8fd4\u56de\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff0c\u5982\u6709\u591a\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u5de6\u7aef\u70b9\u6700\u5c0f\u7684\u4e00\u4e2a\u3002\u82e5\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u7a7a\u6570\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nbig = <code>[7,5,9,0,2,1,3,<strong>5,7,9,1</strong>,1,5,8,8,9,7]\nsmall = [1,5,9]</code>\n<strong>\u8f93\u51fa: </strong>[7,10]</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nbig = <code>[1,2,3]\nsmall = [4]</code>\n<strong>\u8f93\u51fa: </strong>[]</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>big.length&nbsp;&lt;= 100000</code></li>\n\t<li><code>1 &lt;= small.length&nbsp;&lt;= 100000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/shortest-supersequence-lcci", "path": "/lcci/17.18.Shortest%20Supersequence/README_EN.md", "path_cn": "/lcci/17.18.Shortest%20Supersequence/README.md", "tags": ["Sliding Window"], "tags_cn": [], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000042, "frontend_id": "\u9762\u8bd5\u9898 16.24", "title": "Pairs With Sum", "title_cn": "\u6570\u5bf9\u548c", "content": "<p>Design an algorithm to find all pairs of integers within an array which sum to a specified value.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [5,6,5], target = 11\r\n<strong>Output: </strong>[[5,6]]</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [5,6,5,6], target = 11\r\n<strong>Output: </strong>[[5,6],[5,6]]</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>nums.length &lt;= 100000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u4e24\u6570\u4e4b\u548c\u4e3a\u6307\u5b9a\u503c\u7684\u6240\u6709\u6574\u6570\u5bf9\u3002\u4e00\u4e2a\u6570\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u6570\u5bf9\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [5,6,5], target = 11\n<strong>\u8f93\u51fa: </strong>[[5,6]]</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> nums = [5,6,5,6], target = 11\n<strong>\u8f93\u51fa: </strong>[[5,6],[5,6]]</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>nums.length &lt;= 100000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/pairs-with-sum-lcci", "path": "/lcci/16.24.Pairs%20With%20Sum/README_EN.md", "path_cn": "/lcci/16.24.Pairs%20With%20Sum/README.md", "tags": ["Array", "Hash Table"], "tags_cn": ["\u6570\u7ec4", "\u54c8\u5e0c\u8868"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000041, "frontend_id": "\u9762\u8bd5\u9898 10.10", "title": "Rank from Stream", "title_cn": "\u6570\u5b57\u6d41\u7684\u79e9", "content": "<p>Imagine you are reading in a stream of integers. Periodically, you wish to be able to look up the rank of a number <code>x</code> (the number of values less than or equal to <code>x</code>). lmplement the data structures and algorithms to support these operations. That is, implement the method <code>track (int x)</code>, which is called when each number is generated, and the method <code>getRankOfNumber(int x)</code>, which returns the number of values less than or equal to <code>x</code>.</p>\r\n\r\n<p><b>Note:&nbsp;</b>This problem is slightly different from the original one in the book.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\n[&quot;StreamRank&quot;, &quot;getRankOfNumber&quot;, &quot;track&quot;, &quot;getRankOfNumber&quot;]\r\n[[], [1], [0], [0]]\r\n<strong>Output:\r\n</strong>[null,0,null,1]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>x &lt;= 50000</code></li>\r\n\t<li>The number of calls of both&nbsp;<code>track</code>&nbsp;and&nbsp;<code>getRankOfNumber</code>&nbsp;methods are less than or equal to 2000.</li>\r\n</ul>\r\n", "content_cn": "<p>\u5047\u8bbe\u4f60\u6b63\u5728\u8bfb\u53d6\u4e00\u4e32\u6574\u6570\u3002\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f60\u5e0c\u671b\u80fd\u627e\u51fa\u6570\u5b57 x \u7684\u79e9(\u5c0f\u4e8e\u6216\u7b49\u4e8e x \u7684\u503c\u7684\u4e2a\u6570)\u3002\u8bf7\u5b9e\u73b0\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a</p>\n\n<p>\u5b9e\u73b0 <code>track(int x)</code>&nbsp;\u65b9\u6cd5\uff0c\u6bcf\u8bfb\u5165\u4e00\u4e2a\u6570\u5b57\u90fd\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5\uff1b</p>\n\n<p>\u5b9e\u73b0 <code>getRankOfNumber(int x)</code> \u65b9\u6cd5\uff0c\u8fd4\u56de\u5c0f\u4e8e\u6216\u7b49\u4e8e x \u7684\u503c\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u672c\u9898\u76f8\u5bf9\u539f\u9898\u7a0d\u4f5c\u6539\u52a8</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\n[&quot;StreamRank&quot;, &quot;getRankOfNumber&quot;, &quot;track&quot;, &quot;getRankOfNumber&quot;]\n[[], [1], [0], [0]]\n<strong>\u8f93\u51fa:\n</strong>[null,0,null,1]\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>x &lt;= 50000</code></li>\n\t<li><code>track</code>&nbsp;\u548c&nbsp;<code>getRankOfNumber</code> \u65b9\u6cd5\u7684\u8c03\u7528\u6b21\u6570\u5747\u4e0d\u8d85\u8fc7 2000 \u6b21</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/rank-from-stream-lcci", "path": "/lcci/10.10.Rank%20from%20Stream/README_EN.md", "path_cn": "/lcci/10.10.Rank%20from%20Stream/README.md", "tags": [], "tags_cn": [], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000040, "frontend_id": "\u9762\u8bd5\u9898 10.02", "title": "Group Anagrams", "title_cn": "\u53d8\u4f4d\u8bcd\u7ec4", "content": "<p>Write a method to sort an array of strings so that all the anagrams are in the same group.</p>\r\n\r\n<p><b>Note:&nbsp;</b>This problem is slightly different from the original one the book.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>[&quot;eat&quot;, &quot;tea&quot;, &quot;tan&quot;, &quot;ate&quot;, &quot;nat&quot;, &quot;bat&quot;]</code>,\r\n<strong>Output:</strong>\r\n[\r\n  [&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;],\r\n  [&quot;nat&quot;,&quot;tan&quot;],\r\n  [&quot;bat&quot;]\r\n]</pre>\r\n\r\n<p><strong>Notes: </strong></p>\r\n\r\n<ul>\r\n\t<li>All inputs will be in lowercase.</li>\r\n\t<li>The order of your output does not&nbsp;matter.</li>\r\n</ul>\r\n", "content_cn": "<p>\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\uff0c\u5bf9\u5b57\u7b26\u4e32\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u5c06\u6240\u6709\u53d8\u4f4d\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u53d8\u4f4d\u8bcd\u662f\u6307\u5b57\u6bcd\u76f8\u540c\uff0c\u4f46\u6392\u5217\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u672c\u9898\u76f8\u5bf9\u539f\u9898\u7a0d\u4f5c\u4fee\u6539</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>[&quot;eat&quot;, &quot;tea&quot;, &quot;tan&quot;, &quot;ate&quot;, &quot;nat&quot;, &quot;bat&quot;]</code>,\n<strong>\u8f93\u51fa:</strong>\n[\n  [&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;],\n  [&quot;nat&quot;,&quot;tan&quot;],\n  [&quot;bat&quot;]\n]</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u6240\u6709\u8f93\u5165\u5747\u4e3a\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n\t<li>\u4e0d\u8003\u8651\u7b54\u6848\u8f93\u51fa\u7684\u987a\u5e8f\u3002</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/group-anagrams-lcci", "path": "/lcci/10.02.Group%20Anagrams/README_EN.md", "path_cn": "/lcci/10.02.Group%20Anagrams/README.md", "tags": ["Hash Table", "String"], "tags_cn": ["\u54c8\u5e0c\u8868", "\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000039, "frontend_id": "\u9762\u8bd5\u9898 17.11", "title": "Find Closest", "title_cn": "\u5355\u8bcd\u8ddd\u79bb", "content": "<p>You have a large text file containing words. Given any two words, find the shortest distance (in terms of number of words) between them in the file. If the operation will be repeated many times for the same file (but different pairs of words), can you optimize your solution?</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>words = [&quot;I&quot;,&quot;am&quot;,&quot;a&quot;,&quot;student&quot;,&quot;from&quot;,&quot;a&quot;,&quot;university&quot;,&quot;in&quot;,&quot;a&quot;,&quot;city&quot;], word1 = &quot;a&quot;, word2 = &quot;student&quot;\r\n<strong>Output: </strong>1</pre>\r\n\r\n<p>Note:</p>\r\n\r\n<ul>\r\n\t<li><code>words.length &lt;= 100000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u6709\u4e2a\u5185\u542b\u5355\u8bcd\u7684\u8d85\u5927\u6587\u672c\u6587\u4ef6\uff0c\u7ed9\u5b9a\u4efb\u610f\u4e24\u4e2a\u5355\u8bcd\uff0c\u627e\u51fa\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u8fd9\u4e24\u4e2a\u5355\u8bcd\u7684\u6700\u77ed\u8ddd\u79bb(\u76f8\u9694\u5355\u8bcd\u6570)\u3002\u5982\u679c\u5bfb\u627e\u8fc7\u7a0b\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u4f1a\u91cd\u590d\u591a\u6b21\uff0c\u800c\u6bcf\u6b21\u5bfb\u627e\u7684\u5355\u8bcd\u4e0d\u540c\uff0c\u4f60\u80fd\u5bf9\u6b64\u4f18\u5316\u5417?</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>words = [&quot;I&quot;,&quot;am&quot;,&quot;a&quot;,&quot;student&quot;,&quot;from&quot;,&quot;a&quot;,&quot;university&quot;,&quot;in&quot;,&quot;a&quot;,&quot;city&quot;], word1 = &quot;a&quot;, word2 = &quot;student&quot;\n<strong>\u8f93\u51fa\uff1a</strong>1</pre>\n\n<p>\u63d0\u793a\uff1a</p>\n\n<ul>\n\t<li><code>words.length &lt;= 100000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/find-closest-lcci", "path": "/lcci/17.11.Find%20Closest/README_EN.md", "path_cn": "/lcci/17.11.Find%20Closest/README.md", "tags": ["Two Pointers", "String"], "tags_cn": ["\u53cc\u6307\u9488", "\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000038, "frontend_id": "\u9762\u8bd5\u9898 17.10", "title": "Find Majority Element", "title_cn": "\u4e3b\u8981\u5143\u7d20", "content": "<p>A majority element is an element that makes up more than half of the items in an array. Given a positive integers array, find the majority element. If there is no majority element, return -1. Do this in O(N) time and O(1) space.</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[1,2,5,9,5,9,5,5,5]\r\n<strong>Output: </strong>5</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[3,2]\r\n<strong>Output: </strong>-1</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 3: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[2,2,1,1,1,2,2]\r\n<strong>Output: </strong>2\r\n</pre>\r\n", "content_cn": "<p>\u5982\u679c\u6570\u7ec4\u4e2d\u591a\u4e00\u534a\u7684\u6570\u90fd\u662f\u540c\u4e00\u4e2a\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e3b\u8981\u5143\u7d20\u3002\u7ed9\u5b9a\u4e00\u4e2a<strong>\u6574\u6570</strong>\u6570\u7ec4\uff0c\u627e\u5230\u5b83\u7684\u4e3b\u8981\u5143\u7d20\u3002\u82e5\u6ca1\u6709\uff0c\u8fd4\u56de-1\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,5,9,5,9,5,5,5]\n<strong>\u8f93\u51fa\uff1a</strong>5</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,2]\n<strong>\u8f93\u51fa\uff1a</strong>-1</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[2,2,1,1,1,2,2]\n<strong>\u8f93\u51fa\uff1a</strong>2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8bf4\u660e\uff1a</strong><br>\n\u4f60\u6709\u529e\u6cd5\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(1) \u5185\u5b8c\u6210\u5417\uff1f</p>\n", "url": "", "url_cn": "https://leetcode.cn/problems/find-majority-element-lcci", "path": "/lcci/17.10.Find%20Majority%20Element/README_EN.md", "path_cn": "/lcci/17.10.Find%20Majority%20Element/README.md", "tags": ["Bit Manipulation", "Array", "Divide and Conquer"], "tags_cn": ["\u4f4d\u8fd0\u7b97", "\u6570\u7ec4", "\u5206\u6cbb\u7b97\u6cd5"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 1000037, "frontend_id": "\u9762\u8bd5\u9898 17.09", "title": "Get Kth Magic Number", "title_cn": "\u7b2c k \u4e2a\u6570", "content": "<p>Design an algorithm to find the kth number such that the only prime factors are 3, 5, and 7. Note that 3, 5, and 7 do not have to be factors, but it should not have any other prime factors. For example, the first several multiples would be (in order) 1, 3, 5, 7, 9, 15, 21.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>k = 5\r\n\r\n<strong>Output: </strong>9\r\n</pre>\r\n", "content_cn": "<p>\u6709\u4e9b\u6570\u7684\u7d20\u56e0\u5b50\u53ea\u6709 3\uff0c5\uff0c7\uff0c\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u627e\u51fa\u7b2c k \u4e2a\u6570\u3002\u6ce8\u610f\uff0c\u4e0d\u662f\u5fc5\u987b\u6709\u8fd9\u4e9b\u7d20\u56e0\u5b50\uff0c\u800c\u662f\u5fc5\u987b\u4e0d\u5305\u542b\u5176\u4ed6\u7684\u7d20\u56e0\u5b50\u3002\u4f8b\u5982\uff0c\u524d\u51e0\u4e2a\u6570\u6309\u987a\u5e8f\u5e94\u8be5\u662f 1\uff0c3\uff0c5\uff0c7\uff0c9\uff0c15\uff0c21\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>k = 5\n\n<strong>\u8f93\u51fa: </strong>9\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/get-kth-magic-number-lcci", "path": "/lcci/17.09.Get%20Kth%20Magic%20Number/README_EN.md", "path_cn": "/lcci/17.09.Get%20Kth%20Magic%20Number/README.md", "tags": ["Heap", "Queue", "Math"], "tags_cn": ["\u5806", "\u961f\u5217", "\u6570\u5b66"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000036, "frontend_id": "\u9762\u8bd5\u9898 17.08", "title": "Circus Tower", "title_cn": "\u9a6c\u620f\u56e2\u4eba\u5854", "content": "<p>A circus is designing a tower routine consisting of people standing atop one anoth&shy;er&#39;s shoulders. For practical and aesthetic reasons, each person must be both shorter and lighter than the person below him or her. Given the heights and weights of each person in the circus, write a method to compute the largest possible number of people in such a tower.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>height = [65,70,56,75,60,68] weight = [100,150,90,190,95,110]\r\n<strong>Output: </strong>6\r\n<strong>Explanation: </strong>The longest tower is length 6 and includes from top to bottom: (56,90), (60,95), (65,100), (68,110), (70,150), (75,190)</pre>\r\n\r\n<p>Note:</p>\r\n\r\n<ul>\r\n\t<li><code>height.length == weight.length &lt;= 10000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u6709\u4e2a\u9a6c\u620f\u56e2\u6b63\u5728\u8bbe\u8ba1\u53e0\u7f57\u6c49\u7684\u8868\u6f14\u8282\u76ee\uff0c\u4e00\u4e2a\u4eba\u8981\u7ad9\u5728\u53e6\u4e00\u4eba\u7684\u80a9\u8180\u4e0a\u3002\u51fa\u4e8e\u5b9e\u9645\u548c\u7f8e\u89c2\u7684\u8003\u8651\uff0c\u5728\u4e0a\u9762\u7684\u4eba\u8981\u6bd4\u4e0b\u9762\u7684\u4eba\u77ee\u4e00\u70b9\u4e14\u8f7b\u4e00\u70b9\u3002\u5df2\u77e5\u9a6c\u620f\u56e2\u6bcf\u4e2a\u4eba\u7684\u8eab\u9ad8\u548c\u4f53\u91cd\uff0c\u8bf7\u7f16\u5199\u4ee3\u7801\u8ba1\u7b97\u53e0\u7f57\u6c49\u6700\u591a\u80fd\u53e0\u51e0\u4e2a\u4eba\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>height = [65,70,56,75,60,68] weight = [100,150,90,190,95,110]\n<strong>\u8f93\u51fa\uff1a</strong>6\n<strong>\u89e3\u91ca\uff1a</strong>\u4ece\u4e0a\u5f80\u4e0b\u6570\uff0c\u53e0\u7f57\u6c49\u6700\u591a\u80fd\u53e0 6 \u5c42\uff1a(56,90), (60,95), (65,100), (68,110), (70,150), (75,190)</pre>\n\n<p>\u63d0\u793a\uff1a</p>\n\n<ul>\n\t<li><code>height.length == weight.length &lt;= 10000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/circus-tower-lcci", "path": "/lcci/17.08.Circus%20Tower/README_EN.md", "path_cn": "/lcci/17.08.Circus%20Tower/README.md", "tags": ["Sort", "Binary Search", "Dynamic Programming"], "tags_cn": ["\u6392\u5e8f", "\u4e8c\u5206\u67e5\u627e", "\u52a8\u6001\u89c4\u5212"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000035, "frontend_id": "\u9762\u8bd5\u9898 17.07", "title": "Baby Names", "title_cn": "\u5a74\u513f\u540d\u5b57", "content": "<p>Each year, the government releases a list of the 10000 most common baby names and their frequencies (the number of babies with that name). The only problem with this is that some names have multiple spellings. For example,&quot;John&quot; and &#39;&#39;Jon&quot; are essentially the same name but would be listed separately in the list. Given two lists, one of names/frequencies and the other of pairs of equivalent names, write an algorithm to print a new list of the true frequency of each name. Note that if John and Jon are synonyms, and Jon and Johnny are synonyms, then John and Johnny are synonyms. (It is both transitive and symmetric.) In the final list, choose the name that are <strong>lexicographically smallest</strong> as the &quot;real&quot; name.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>names = [&quot;John(15)&quot;,&quot;Jon(12)&quot;,&quot;Chris(13)&quot;,&quot;Kris(4)&quot;,&quot;Christopher(19)&quot;], synonyms = [&quot;(Jon,John)&quot;,&quot;(John,Johnny)&quot;,&quot;(Chris,Kris)&quot;,&quot;(Chris,Christopher)&quot;]\r\n<strong>Output: </strong>[&quot;John(27)&quot;,&quot;Chris(36)&quot;]</pre>\r\n\r\n<p>Note:</p>\r\n\r\n<ul>\r\n\t<li><code>names.length &lt;= 100000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u6bcf\u5e74\uff0c\u653f\u5e9c\u90fd\u4f1a\u516c\u5e03\u4e00\u4e07\u4e2a\u6700\u5e38\u89c1\u7684\u5a74\u513f\u540d\u5b57\u548c\u5b83\u4eec\u51fa\u73b0\u7684\u9891\u7387\uff0c\u4e5f\u5c31\u662f\u540c\u540d\u5a74\u513f\u7684\u6570\u91cf\u3002\u6709\u4e9b\u540d\u5b57\u6709\u591a\u79cd\u62fc\u6cd5\uff0c\u4f8b\u5982\uff0cJohn \u548c Jon \u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u540d\u5b57\uff0c\u4f46\u88ab\u5f53\u6210\u4e86\u4e24\u4e2a\u540d\u5b57\u516c\u5e03\u51fa\u6765\u3002\u7ed9\u5b9a\u4e24\u4e2a\u5217\u8868\uff0c\u4e00\u4e2a\u662f\u540d\u5b57\u53ca\u5bf9\u5e94\u7684\u9891\u7387\uff0c\u53e6\u4e00\u4e2a\u662f\u672c\u8d28\u76f8\u540c\u7684\u540d\u5b57\u5bf9\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6253\u5370\u51fa\u6bcf\u4e2a\u771f\u5b9e\u540d\u5b57\u7684\u5b9e\u9645\u9891\u7387\u3002\u6ce8\u610f\uff0c\u5982\u679c John \u548c Jon \u662f\u76f8\u540c\u7684\uff0c\u5e76\u4e14 Jon \u548c Johnny \u76f8\u540c\uff0c\u5219 John \u4e0e Johnny \u4e5f\u76f8\u540c\uff0c\u5373\u5b83\u4eec\u6709\u4f20\u9012\u548c\u5bf9\u79f0\u6027\u3002</p>\n\n<p>\u5728\u7ed3\u679c\u5217\u8868\u4e2d\uff0c\u9009\u62e9<strong>\u5b57\u5178\u5e8f\u6700\u5c0f</strong>\u7684\u540d\u5b57\u4f5c\u4e3a\u771f\u5b9e\u540d\u5b57\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>names = [&quot;John(15)&quot;,&quot;Jon(12)&quot;,&quot;Chris(13)&quot;,&quot;Kris(4)&quot;,&quot;Christopher(19)&quot;], synonyms = [&quot;(Jon,John)&quot;,&quot;(John,Johnny)&quot;,&quot;(Chris,Kris)&quot;,&quot;(Chris,Christopher)&quot;]\n<strong>\u8f93\u51fa\uff1a</strong>[&quot;John(27)&quot;,&quot;Chris(36)&quot;]</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>names.length &lt;= 100000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/baby-names-lcci", "path": "/lcci/17.07.Baby%20Names/README_EN.md", "path_cn": "/lcci/17.07.Baby%20Names/README.md", "tags": ["Depth-first Search", "Breadth-first Search", "Union Find"], "tags_cn": ["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22", "\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22", "\u5e76\u67e5\u96c6"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000034, "frontend_id": "\u9762\u8bd5\u9898 17.06", "title": "Number Of 2s In Range", "title_cn": "2\u51fa\u73b0\u7684\u6b21\u6570", "content": "<p>Write a method to count the number of 2s that appear in all the numbers between 0&nbsp;and n (inclusive).</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>25\r\n<strong>Output: </strong>9\r\n<strong>Explanation: </strong>(2, 12, 20, 21, 22, 23, 24, 25)(Note that 22 counts for two 2s.)</pre>\r\n\r\n<p>Note:</p>\r\n\r\n<ul>\r\n\t<li><code>n &lt;= 10^9</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8ba1\u7b97\u4ece 0 \u5230 n (\u542b n) \u4e2d\u6570\u5b57 2 \u51fa\u73b0\u7684\u6b21\u6570\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>25\n<strong>\u8f93\u51fa: </strong>9\n<strong>\u89e3\u91ca: </strong>(2, 12, 20, 21, 22, 23, 24, 25)(\u6ce8\u610f 22 \u5e94\u8be5\u7b97\u4f5c\u4e24\u6b21)</pre>\n\n<p>\u63d0\u793a\uff1a</p>\n\n<ul>\n\t<li><code>n &lt;= 10^9</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/number-of-2s-in-range-lcci", "path": "/lcci/17.06.Number%20Of%202s%20In%20Range/README_EN.md", "path_cn": "/lcci/17.06.Number%20Of%202s%20In%20Range/README.md", "tags": ["Math", "Dynamic Programming"], "tags_cn": ["\u6570\u5b66", "\u52a8\u6001\u89c4\u5212"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000033, "frontend_id": "\u9762\u8bd5\u9898 17.05", "title": "Find Longest Subarray", "title_cn": " \u5b57\u6bcd\u4e0e\u6570\u5b57", "content": "<p>Given an array filled with letters and numbers, find the longest subarray with an equal number of letters and numbers.</p>\r\n\r\n<p>Return the subarray. If there are more than one answer, return the one which has the smallest&nbsp;index of its left endpoint. If there is no answer, return an empty arrary.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[&quot;A&quot;,&quot;1&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;E&quot;,&quot;5&quot;,&quot;F&quot;,&quot;G&quot;,&quot;6&quot;,&quot;7&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;,&quot;K&quot;,&quot;L&quot;,&quot;M&quot;]\r\n\r\n<strong>Output: </strong>[&quot;A&quot;,&quot;1&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;E&quot;,&quot;5&quot;,&quot;F&quot;,&quot;G&quot;,&quot;6&quot;,&quot;7&quot;]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[&quot;A&quot;,&quot;A&quot;]\r\n\r\n<strong>Output: </strong>[]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>array.length &lt;= 100000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u653e\u6709\u5b57\u7b26\u548c\u6570\u5b57\u7684\u6570\u7ec4\uff0c\u627e\u5230\u6700\u957f\u7684\u5b50\u6570\u7ec4\uff0c\u4e14\u5305\u542b\u7684\u5b57\u7b26\u548c\u6570\u5b57\u7684\u4e2a\u6570\u76f8\u540c\u3002</p>\n\n<p>\u8fd4\u56de\u8be5\u5b50\u6570\u7ec4\uff0c\u82e5\u5b58\u5728\u591a\u4e2a\u6700\u957f\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u5de6\u7aef\u70b9\u6700\u5c0f\u7684\u3002\u82e5\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u6570\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[&quot;A&quot;,&quot;1&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;E&quot;,&quot;5&quot;,&quot;F&quot;,&quot;G&quot;,&quot;6&quot;,&quot;7&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;,&quot;K&quot;,&quot;L&quot;,&quot;M&quot;]\n\n<strong>\u8f93\u51fa: </strong>[&quot;A&quot;,&quot;1&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;E&quot;,&quot;5&quot;,&quot;F&quot;,&quot;G&quot;,&quot;6&quot;,&quot;7&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[&quot;A&quot;,&quot;A&quot;]\n\n<strong>\u8f93\u51fa: </strong>[]\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>array.length &lt;= 100000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/find-longest-subarray-lcci", "path": "/lcci/17.05.Find%20Longest%20Subarray/README_EN.md", "path_cn": "/lcci/17.05.Find%20Longest%20Subarray/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000032, "frontend_id": "\u9762\u8bd5\u9898 17.04", "title": "Missing Number", "title_cn": "\u6d88\u5931\u7684\u6570\u5b57", "content": "<p>An array&nbsp;contains all the integers from 0 to n, except for one number which is missing.&nbsp; Write code to find the missing integer. Can you do it in O(n) time?</p>\r\n\r\n<p><strong>Note: </strong>This problem is slightly different from the original one the book.</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[3,0,1]\r\n<strong>Output: </strong>2</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[9,6,4,2,3,5,7,0,1]\r\n<strong>Output: </strong>8\r\n</pre>\r\n", "content_cn": "<p>\u6570\u7ec4<code>nums</code>\u5305\u542b\u4ece<code>0</code>\u5230<code>n</code>\u7684\u6240\u6709\u6574\u6570\uff0c\u4f46\u5176\u4e2d\u7f3a\u4e86\u4e00\u4e2a\u3002\u8bf7\u7f16\u5199\u4ee3\u7801\u627e\u51fa\u90a3\u4e2a\u7f3a\u5931\u7684\u6574\u6570\u3002\u4f60\u6709\u529e\u6cd5\u5728O(n)\u65f6\u95f4\u5185\u5b8c\u6210\u5417\uff1f</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u672c\u9898\u76f8\u5bf9\u4e66\u4e0a\u539f\u9898\u7a0d\u4f5c\u6539\u52a8</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[3,0,1]\n<strong>\u8f93\u51fa\uff1a</strong>2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[9,6,4,2,3,5,7,0,1]\n<strong>\u8f93\u51fa\uff1a</strong>8\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/missing-number-lcci", "path": "/lcci/17.04.Missing%20Number/README_EN.md", "path_cn": "/lcci/17.04.Missing%20Number/README.md", "tags": ["Bit Manipulation", "Array", "Math"], "tags_cn": ["\u4f4d\u8fd0\u7b97", "\u6570\u7ec4", "\u6570\u5b66"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 1000031, "frontend_id": "\u9762\u8bd5\u9898 08.14", "title": "Boolean Evaluation", "title_cn": "\u5e03\u5c14\u8fd0\u7b97", "content": "<p>Given a boolean expression consisting of the symbols <code>0</code> (false), <code>1</code> (true), <code>&amp;</code> (AND), <code>|</code> (OR), and <code>^</code>&nbsp;(XOR), and a desired boolean result value result, implement a function to count the number of ways of parenthesizing the expression such that it evaluates to result.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>s = &quot;1^0|0|1&quot;, result = 0\r\n\r\n<strong>Output: </strong>2\r\n<strong>Explanation:</strong>&nbsp;Two possible parenthesizing ways are:\r\n1^(0|(0|1))\r\n1^((0|0)|1)\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>s = &quot;0&amp;0&amp;0&amp;1^1|0&quot;, result = 1\r\n\r\n<strong>Output: </strong>10</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li>There are no more than&nbsp;19 operators in <code>s</code>.</li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e03\u5c14\u8868\u8fbe\u5f0f\u548c\u4e00\u4e2a\u671f\u671b\u7684\u5e03\u5c14\u7ed3\u679c result\uff0c\u5e03\u5c14\u8868\u8fbe\u5f0f\u7531 <code>0</code> (false)\u3001<code>1</code> (true)\u3001<code>&amp;</code> (AND)\u3001 <code>|</code> (OR) \u548c <code>^</code> (XOR) \u7b26\u53f7\u7ec4\u6210\u3002\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u7b97\u51fa\u6709\u51e0\u79cd\u53ef\u4f7f\u8be5\u8868\u8fbe\u5f0f\u5f97\u51fa result \u503c\u7684\u62ec\u53f7\u65b9\u6cd5\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>s = &quot;1^0|0|1&quot;, result = 0\n\n<strong>\u8f93\u51fa: </strong>2\n<strong>\u89e3\u91ca:</strong>&nbsp;\u4e24\u79cd\u53ef\u80fd\u7684\u62ec\u53f7\u65b9\u6cd5\u662f\n1^(0|(0|1))\n1^((0|0)|1)\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>s = &quot;0&amp;0&amp;0&amp;1^1|0&quot;, result = 1\n\n<strong>\u8f93\u51fa: </strong>10</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u8fd0\u7b97\u7b26\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 19 \u4e2a</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/boolean-evaluation-lcci", "path": "/lcci/08.14.Boolean%20Evaluation/README_EN.md", "path_cn": "/lcci/08.14.Boolean%20Evaluation/README.md", "tags": ["Stack", "String"], "tags_cn": ["\u6808", "\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000030, "frontend_id": "\u9762\u8bd5\u9898 17.22", "title": "Word Transformer", "title_cn": "\u5355\u8bcd\u8f6c\u6362", "content": "<p>Given two words of equal length that are in a dictionary, write a method to transform one word into another word by changing only one letter at a time. The new word you get in each step must be in the dictionary.</p>\r\n\r\n<p>Write code to return a possible transforming sequence. If there are more that one sequence, any one is ok.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nbeginWord = &quot;hit&quot;,\r\nendWord = &quot;cog&quot;,\r\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\r\n\r\n<strong>Output:</strong>\r\n[&quot;hit&quot;,&quot;hot&quot;,&quot;dot&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nbeginWord = &quot;hit&quot;\r\nendWord = &quot;cog&quot;\r\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\r\n\r\n<strong>Output: </strong>[]\r\n\r\n<strong>Explanation:</strong>&nbsp;<em>endWord</em> &quot;cog&quot; is not in the dictionary, so there&#39;s no possible transforming sequence.</pre>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u5b57\u5178\u4e2d\u7684\u4e24\u4e2a\u8bcd\uff0c\u957f\u5ea6\u76f8\u7b49\u3002\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u628a\u4e00\u4e2a\u8bcd\u8f6c\u6362\u6210\u53e6\u4e00\u4e2a\u8bcd\uff0c \u4f46\u662f\u4e00\u6b21\u53ea\u80fd\u6539\u53d8\u4e00\u4e2a\u5b57\u7b26\u3002\u6bcf\u4e00\u6b65\u5f97\u5230\u7684\u65b0\u8bcd\u90fd\u5fc5\u987b\u80fd\u5728\u5b57\u5178\u4e2d\u627e\u5230\u3002</p>\n\n<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8fd4\u56de\u4e00\u4e2a\u53ef\u80fd\u7684\u8f6c\u6362\u5e8f\u5217\u3002\u5982\u6709\u591a\u4e2a\u53ef\u80fd\u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u4f60\u53ef\u4ee5\u8fd4\u56de\u4efb\u4f55\u4e00\u4e2a\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nbeginWord = &quot;hit&quot;,\nendWord = &quot;cog&quot;,\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n\n<strong>\u8f93\u51fa:</strong>\n[&quot;hit&quot;,&quot;hot&quot;,&quot;dot&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nbeginWord = &quot;hit&quot;\nendWord = &quot;cog&quot;\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\n\n<strong>\u8f93\u51fa: </strong>[]\n\n<strong>\u89e3\u91ca:</strong>&nbsp;<em>endWord</em> &quot;cog&quot; \u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u7b26\u5408\u8981\u6c42\u7684\u8f6c\u6362\u5e8f\u5217\u3002</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/word-transformer-lcci", "path": "/lcci/17.22.Word%20Transformer/README_EN.md", "path_cn": "/lcci/17.22.Word%20Transformer/README.md", "tags": ["Depth-first Search", "Breadth-first Search", "Array", "String"], "tags_cn": ["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22", "\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22", "\u6570\u7ec4", "\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000029, "frontend_id": "\u9762\u8bd5\u9898 17.21", "title": "Volume of Histogram", "title_cn": "\u76f4\u65b9\u56fe\u7684\u6c34\u91cf", "content": "<p>Imagine a histogram (bar graph). Design an algorithm to compute the volume of water it could hold if someone poured water across the top. You can assume that each histogram bar has width 1.</p>\r\n\r\n<p><img src=\"https://assets.leetcode.cn/aliyun-lc-upload/uploads/2018/10/22/rainwatertrap.png\" style=\"height: 161px; width: 412px;\" /></p>\r\n\r\n<p><small>The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of water (blue section) are being trapped. Thanks <strong>Marcos</strong> for contributing this image!</small></p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [0,1,0,2,1,0,1,3,2,1,2,1]\r\n<strong>Output:</strong> 6</pre>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u76f4\u65b9\u56fe(\u4e5f\u79f0\u67f1\u72b6\u56fe)\uff0c\u5047\u8bbe\u6709\u4eba\u4ece\u4e0a\u9762\u6e90\u6e90\u4e0d\u65ad\u5730\u5012\u6c34\uff0c\u6700\u540e\u76f4\u65b9\u56fe\u80fd\u5b58\u591a\u5c11\u6c34\u91cf?\u76f4\u65b9\u56fe\u7684\u5bbd\u5ea6\u4e3a 1\u3002</p>\n\n<p><img src=\"https://assets.leetcode.cn/aliyun-lc-upload/uploads/2018/10/22/rainwatertrap.png\" style=\"height: 161px; width: 412px;\"></p>\n\n<p><small>\u4e0a\u9762\u662f\u7531\u6570\u7ec4 [0,1,0,2,1,0,1,3,2,1,2,1] \u8868\u793a\u7684\u76f4\u65b9\u56fe\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u63a5 6 \u4e2a\u5355\u4f4d\u7684\u6c34\uff08\u84dd\u8272\u90e8\u5206\u8868\u793a\u6c34\uff09\u3002&nbsp;<strong>\u611f\u8c22 Marcos</strong> \u8d21\u732e\u6b64\u56fe\u3002</small></p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> [0,1,0,2,1,0,1,3,2,1,2,1]\n<strong>\u8f93\u51fa:</strong> 6</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/volume-of-histogram-lcci", "path": "/lcci/17.21.Volume%20of%20Histogram/README_EN.md", "path_cn": "/lcci/17.21.Volume%20of%20Histogram/README.md", "tags": ["Stack", "Array", "Two Pointers"], "tags_cn": ["\u6808", "\u6570\u7ec4", "\u53cc\u6307\u9488"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 1000028, "frontend_id": "\u9762\u8bd5\u9898 17.20", "title": "Continuous Median", "title_cn": "\u8fde\u7eed\u4e2d\u503c", "content": "<p>Numbers are randomly generated and passed to a method. Write a program to find and maintain the median value as new values are generated.</p>\r\n\r\n<p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\r\n\r\n<p>For example,</p>\r\n\r\n<p>[2,3,4], the median is&nbsp;3</p>\r\n\r\n<p>[2,3], the median is (2 + 3) / 2 = 2.5</p>\r\n\r\n<p>Design a data structure that supports the following two operations:</p>\r\n\r\n<ul>\r\n\t<li>void addNum(int num) - Add a integer number from the data stream to the data structure.</li>\r\n\t<li>double findMedian() - Return the median of all elements so far.</li>\r\n</ul>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\naddNum(1)\r\naddNum(2)\r\nfindMedian() -&gt; 1.5\r\naddNum(3) \r\nfindMedian() -&gt; 2\r\n</pre>\r\n", "content_cn": "<p>\u968f\u673a\u4ea7\u751f\u6570\u5b57\u5e76\u4f20\u9012\u7ed9\u4e00\u4e2a\u65b9\u6cd5\u3002\u4f60\u80fd\u5426\u5b8c\u6210\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5728\u6bcf\u6b21\u4ea7\u751f\u65b0\u503c\u65f6\uff0c\u5bfb\u627e\u5f53\u524d\u6240\u6709\u503c\u7684\u4e2d\u95f4\u503c\uff08\u4e2d\u4f4d\u6570\uff09\u5e76\u4fdd\u5b58\u3002</p>\n\n<p>\u4e2d\u4f4d\u6570\u662f\u6709\u5e8f\u5217\u8868\u4e2d\u95f4\u7684\u6570\u3002\u5982\u679c\u5217\u8868\u957f\u5ea6\u662f\u5076\u6570\uff0c\u4e2d\u4f4d\u6570\u5219\u662f\u4e2d\u95f4\u4e24\u4e2a\u6570\u7684\u5e73\u5747\u503c\u3002</p>\n\n<p>\u4f8b\u5982\uff0c</p>\n\n<p>[2,3,4]&nbsp;\u7684\u4e2d\u4f4d\u6570\u662f 3</p>\n\n<p>[2,3] \u7684\u4e2d\u4f4d\u6570\u662f (2 + 3) / 2 = 2.5</p>\n\n<p>\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\uff1a</p>\n\n<ul>\n\t<li>void addNum(int num) - \u4ece\u6570\u636e\u6d41\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6574\u6570\u5230\u6570\u636e\u7ed3\u6784\u4e2d\u3002</li>\n\t<li>double findMedian() - \u8fd4\u56de\u76ee\u524d\u6240\u6709\u5143\u7d20\u7684\u4e2d\u4f4d\u6570\u3002</li>\n</ul>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>addNum(1)\naddNum(2)\nfindMedian() -&gt; 1.5\naddNum(3) \nfindMedian() -&gt; 2\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/continuous-median-lcci", "path": "/lcci/17.20.Continuous%20Median/README_EN.md", "path_cn": "/lcci/17.20.Continuous%20Median/README.md", "tags": ["Heap"], "tags_cn": ["\u5806"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 1000027, "frontend_id": "\u9762\u8bd5\u9898 16.26", "title": "Calculator", "title_cn": "\u8ba1\u7b97\u5668", "content": "<p>Given an arithmetic equation consisting of positive integers, +, -, * and / (no paren&shy;theses), compute the result.</p>\r\n\r\n<p>The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.</p>\r\n\r\n<p><strong>Example&nbsp;1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;3+2*2&quot;\r\n<strong>Output:</strong> 7\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> &quot; 3/2 &quot;\r\n<strong>Output:</strong> 1</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> &quot; 3+5 / 2 &quot;\r\n<strong>Output:</strong> 5\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>You may assume that the given expression is always valid.</li>\r\n\t<li>Do not use the eval built-in library function.</li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u6b63\u6574\u6570\u3001\u52a0(+)\u3001\u51cf(-)\u3001\u4e58(*)\u3001\u9664(/)\u7684\u7b97\u6570\u8868\u8fbe\u5f0f(\u62ec\u53f7\u9664\u5916)\uff0c\u8ba1\u7b97\u5176\u7ed3\u679c\u3002</p>\n\n<p>\u8868\u8fbe\u5f0f\u4ec5\u5305\u542b\u975e\u8d1f\u6574\u6570\uff0c<code>+</code>\uff0c <code>-</code> \uff0c<code>*</code>\uff0c<code>/</code> \u56db\u79cd\u8fd0\u7b97\u7b26\u548c\u7a7a\u683c&nbsp;<code>&nbsp;</code>\u3002 \u6574\u6570\u9664\u6cd5\u4ec5\u4fdd\u7559\u6574\u6570\u90e8\u5206\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>&quot;3+2*2&quot;\n<strong>\u8f93\u51fa:</strong> 7\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot; 3/2 &quot;\n<strong>\u8f93\u51fa:</strong> 1</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> &quot; 3+5 / 2 &quot;\n<strong>\u8f93\u51fa:</strong> 5\n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u90fd\u662f\u6709\u6548\u7684\u3002</li>\n\t<li>\u8bf7<strong>\u4e0d\u8981</strong>\u4f7f\u7528\u5185\u7f6e\u7684\u5e93\u51fd\u6570 <code>eval</code>\u3002</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/calculator-lcci", "path": "/lcci/16.26.Calculator/README_EN.md", "path_cn": "/lcci/16.26.Calculator/README.md", "tags": ["String"], "tags_cn": ["\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000026, "frontend_id": "\u9762\u8bd5\u9898 16.25", "title": "LRU Cache", "title_cn": "LRU\u7f13\u5b58", "content": "<p>Design and build a &quot;least recently used&quot; cache, which evicts the least recently used item. The cache should map from keys to values (allowing you to insert and retrieve a value associ&shy;ated with a particular key) and be initialized with a max size. When it is full, it should evict the least recently used item.</p>\r\n\r\n<p>You should implement following operations:&nbsp;&nbsp;<code>get</code>&nbsp;and <code>put</code>.</p>\r\n\r\n<p>Get a value by key:&nbsp;<code>get(key)</code> - If key is in the cache, return the value, otherwise return -1.<br />\r\nWrite a key-value pair to the cache:&nbsp;<code>put(key, value)</code> - If the key is not in the cache, then write its value to the cache. Evict the least recently used item before writing if necessary.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nLRUCache cache = new LRUCache( 2 /* capacity */ );\r\n\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\ncache.get(1);       // returns 1\r\ncache.put(3, 3);    // evicts key 2\r\ncache.get(2);       // returns -1 (not found)\r\ncache.put(4, 4);    // evicts key 1\r\ncache.get(1);       // returns -1 (not found)\r\ncache.get(3);       // returns 3\r\ncache.get(4);       // returns 4\r\n</pre>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u548c\u6784\u5efa\u4e00\u4e2a&ldquo;\u6700\u8fd1\u6700\u5c11\u4f7f\u7528&rdquo;\u7f13\u5b58\uff0c\u8be5\u7f13\u5b58\u4f1a\u5220\u9664\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u9879\u76ee\u3002\u7f13\u5b58\u5e94\u8be5\u4ece\u952e\u6620\u5c04\u5230\u503c(\u5141\u8bb8\u4f60\u63d2\u5165\u548c\u68c0\u7d22\u7279\u5b9a\u952e\u5bf9\u5e94\u7684\u503c)\uff0c\u5e76\u5728\u521d\u59cb\u5316\u65f6\u6307\u5b9a\u6700\u5927\u5bb9\u91cf\u3002\u5f53\u7f13\u5b58\u88ab\u586b\u6ee1\u65f6\uff0c\u5b83\u5e94\u8be5\u5220\u9664\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u9879\u76ee\u3002</p>\n\n<p>\u5b83\u5e94\u8be5\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u83b7\u53d6\u6570\u636e <code>get</code> \u548c \u5199\u5165\u6570\u636e <code>put</code> \u3002</p>\n\n<p>\u83b7\u53d6\u6570\u636e <code>get(key)</code> - \u5982\u679c\u5bc6\u94a5 (key) \u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5219\u83b7\u53d6\u5bc6\u94a5\u7684\u503c\uff08\u603b\u662f\u6b63\u6570\uff09\uff0c\u5426\u5219\u8fd4\u56de -1\u3002<br>\n\u5199\u5165\u6570\u636e <code>put(key, value)</code> - \u5982\u679c\u5bc6\u94a5\u4e0d\u5b58\u5728\uff0c\u5219\u5199\u5165\u5176\u6570\u636e\u503c\u3002\u5f53\u7f13\u5b58\u5bb9\u91cf\u8fbe\u5230\u4e0a\u9650\u65f6\uff0c\u5b83\u5e94\u8be5\u5728\u5199\u5165\u65b0\u6570\u636e\u4e4b\u524d\u5220\u9664\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\u503c\uff0c\u4ece\u800c\u4e3a\u65b0\u7684\u6570\u636e\u503c\u7559\u51fa\u7a7a\u95f4\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre>LRUCache cache = new LRUCache( 2 /* \u7f13\u5b58\u5bb9\u91cf */ );\n\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1);       // \u8fd4\u56de  1\ncache.put(3, 3);    // \u8be5\u64cd\u4f5c\u4f1a\u4f7f\u5f97\u5bc6\u94a5 2 \u4f5c\u5e9f\ncache.get(2);       // \u8fd4\u56de -1 (\u672a\u627e\u5230)\ncache.put(4, 4);    // \u8be5\u64cd\u4f5c\u4f1a\u4f7f\u5f97\u5bc6\u94a5 1 \u4f5c\u5e9f\ncache.get(1);       // \u8fd4\u56de -1 (\u672a\u627e\u5230)\ncache.get(3);       // \u8fd4\u56de  3\ncache.get(4);       // \u8fd4\u56de  4\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/lru-cache-lcci", "path": "/lcci/16.25.LRU%20Cache/README_EN.md", "path_cn": "/lcci/16.25.LRU%20Cache/README.md", "tags": ["Design"], "tags_cn": ["\u8bbe\u8ba1"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000025, "frontend_id": "\u9762\u8bd5\u9898 17.01", "title": "Add Without Plus", "title_cn": "\u4e0d\u7528\u52a0\u53f7\u7684\u52a0\u6cd5", "content": "<p>Write a function that adds two numbers. You should not use + or any arithmetic operators.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> a = 1, b = 1\r\n<strong>Output:</strong> 2</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>a</code>&nbsp;and&nbsp;<code>b</code>&nbsp;may be 0 or negative.</li>\r\n\t<li>The result fits in 32-bit integer.</li>\r\n</ul>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u628a\u4e24\u4e2a\u6570\u5b57\u76f8\u52a0\u3002\u4e0d\u5f97\u4f7f\u7528 + \u6216\u8005\u5176\u4ed6\u7b97\u672f\u8fd0\u7b97\u7b26\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> a = 1, b = 1\n<strong>\u8f93\u51fa:</strong> 2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>a</code>,&nbsp;<code>b</code>&nbsp;\u5747\u53ef\u80fd\u662f\u8d1f\u6570\u6216 0</li>\n\t<li>\u7ed3\u679c\u4e0d\u4f1a\u6ea2\u51fa 32 \u4f4d\u6574\u6570</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/add-without-plus-lcci", "path": "/lcci/17.01.Add%20Without%20Plus/README_EN.md", "path_cn": "/lcci/17.01.Add%20Without%20Plus/README.md", "tags": ["Bit Manipulation"], "tags_cn": ["\u4f4d\u8fd0\u7b97"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 1000024, "frontend_id": "\u9762\u8bd5\u9898 17.17", "title": "Multi Search", "title_cn": "\u591a\u6b21\u641c\u7d22", "content": "<p>Given a string band an array of smaller strings T, design a method to search b for each small string in T. Output&nbsp;<code>positions</code> of all strings in&nbsp;<code>smalls</code>&nbsp;that appear in <code>big</code>,&nbsp;where <code>positions[i]</code> is all positions of <code>smalls[i]</code>.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\nbig = &quot;mississippi&quot;\r\nsmalls = [&quot;is&quot;,&quot;ppi&quot;,&quot;hi&quot;,&quot;sis&quot;,&quot;i&quot;,&quot;ssippi&quot;]\r\n<strong>Output: </strong> [[1,4],[8],[],[3],[1,4,7,10],[5]]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= len(big) &lt;= 1000</code></li>\r\n\t<li><code>0 &lt;= len(smalls[i]) &lt;= 1000</code></li>\r\n\t<li>The total number of characters in&nbsp;<code>smalls</code>&nbsp;will not exceed 100000.</li>\r\n\t<li>No duplicated strings in&nbsp;<code>smalls</code>.</li>\r\n\t<li>All characters are lowercase letters.</li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u8f83\u957f\u5b57\u7b26\u4e32<code>big</code>\u548c\u4e00\u4e2a\u5305\u542b\u8f83\u77ed\u5b57\u7b26\u4e32\u7684\u6570\u7ec4<code>smalls</code>\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6839\u636e<code>smalls</code>\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8f83\u77ed\u5b57\u7b26\u4e32\uff0c\u5bf9<code>big</code>\u8fdb\u884c\u641c\u7d22\u3002\u8f93\u51fa<code>smalls</code>\u4e2d\u7684\u5b57\u7b26\u4e32\u5728<code>big</code>\u91cc\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e<code>positions</code>\uff0c\u5176\u4e2d<code>positions[i]</code>\u4e3a<code>smalls[i]</code>\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\nbig = &quot;mississippi&quot;\nsmalls = [&quot;is&quot;,&quot;ppi&quot;,&quot;hi&quot;,&quot;sis&quot;,&quot;i&quot;,&quot;ssippi&quot;]\n<strong>\u8f93\u51fa\uff1a</strong> [[1,4],[8],[],[3],[1,4,7,10],[5]]\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= len(big) &lt;= 1000</code></li>\n\t<li><code>0 &lt;= len(smalls[i]) &lt;= 1000</code></li>\n\t<li><code>smalls</code>\u7684\u603b\u5b57\u7b26\u6570\u4e0d\u4f1a\u8d85\u8fc7 100000\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u8ba4\u4e3a<code>smalls</code>\u4e2d\u6ca1\u6709\u91cd\u590d\u5b57\u7b26\u4e32\u3002</li>\n\t<li>\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u5747\u4e3a\u82f1\u6587\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/multi-search-lcci", "path": "/lcci/17.17.Multi%20Search/README_EN.md", "path_cn": "/lcci/17.17.Multi%20Search/README.md", "tags": ["Trie", "String"], "tags_cn": ["\u5b57\u5178\u6811", "\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000023, "frontend_id": "\u9762\u8bd5\u9898 17.16", "title": "The Masseuse", "title_cn": "\u6309\u6469\u5e08", "content": "<p>A popular masseuse receives a sequence of back-to-back appointment requests and is debating which ones to accept. She needs a break between appointments and therefore she cannot accept any adjacent requests. Given a sequence of back-to-back appoint&shy; ment requests, find the optimal (highest total booked minutes) set the masseuse can honor. Return the number of minutes.</p>\r\n\r\n<p><b>Note:&nbsp;</b>This problem is slightly different from the original one in the book.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> [1,2,3,1]\r\n<strong>Output: </strong> 4\r\n<strong>Explanation: </strong> Accept request 1 and 3, total minutes = 1 + 3 = 4\r\n</pre>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> [2,7,9,3,1]\r\n<strong>Output: </strong> 12\r\n<strong>Explanation: </strong> Accept request 1, 3 and 5, total minutes = 2 + 9 + 1 = 12\r\n</pre>\r\n\r\n<p><strong>Example 3: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> [2,1,4,5,3,1,1,3]\r\n<strong>Output: </strong> 12\r\n<strong>Explanation: </strong> Accept request 1, 3, 5 and 8, total minutes = 2 + 4 + 3 + 3 = 12\r\n</pre>\r\n", "content_cn": "<p>\u4e00\u4e2a\u6709\u540d\u7684\u6309\u6469\u5e08\u4f1a\u6536\u5230\u6e90\u6e90\u4e0d\u65ad\u7684\u9884\u7ea6\u8bf7\u6c42\uff0c\u6bcf\u4e2a\u9884\u7ea6\u90fd\u53ef\u4ee5\u9009\u62e9\u63a5\u6216\u4e0d\u63a5\u3002\u5728\u6bcf\u6b21\u9884\u7ea6\u670d\u52a1\u4e4b\u95f4\u8981\u6709\u4f11\u606f\u65f6\u95f4\uff0c\u56e0\u6b64\u5979\u4e0d\u80fd\u63a5\u53d7\u76f8\u90bb\u7684\u9884\u7ea6\u3002\u7ed9\u5b9a\u4e00\u4e2a\u9884\u7ea6\u8bf7\u6c42\u5e8f\u5217\uff0c\u66ff\u6309\u6469\u5e08\u627e\u5230\u6700\u4f18\u7684\u9884\u7ea6\u96c6\u5408\uff08\u603b\u9884\u7ea6\u65f6\u95f4\u6700\u957f\uff09\uff0c\u8fd4\u56de\u603b\u7684\u5206\u949f\u6570\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u672c\u9898\u76f8\u5bf9\u539f\u9898\u7a0d\u4f5c\u6539\u52a8</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> [1,2,3,1]\n<strong>\u8f93\u51fa\uff1a</strong> 4\n<strong>\u89e3\u91ca\uff1a</strong> \u9009\u62e9 1 \u53f7\u9884\u7ea6\u548c 3 \u53f7\u9884\u7ea6\uff0c\u603b\u65f6\u957f = 1 + 3 = 4\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> [2,7,9,3,1]\n<strong>\u8f93\u51fa\uff1a</strong> 12\n<strong>\u89e3\u91ca\uff1a</strong> \u9009\u62e9 1 \u53f7\u9884\u7ea6\u3001 3 \u53f7\u9884\u7ea6\u548c 5 \u53f7\u9884\u7ea6\uff0c\u603b\u65f6\u957f = 2 + 9 + 1 = 12\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> [2,1,4,5,3,1,1,3]\n<strong>\u8f93\u51fa\uff1a</strong> 12\n<strong>\u89e3\u91ca\uff1a</strong> \u9009\u62e9 1 \u53f7\u9884\u7ea6\u3001 3 \u53f7\u9884\u7ea6\u3001 5 \u53f7\u9884\u7ea6\u548c 8 \u53f7\u9884\u7ea6\uff0c\u603b\u65f6\u957f = 2 + 4 + 3 + 3 = 12\u3002\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/the-masseuse-lcci", "path": "/lcci/17.16.The%20Masseuse/README_EN.md", "path_cn": "/lcci/17.16.The%20Masseuse/README.md", "tags": ["Dynamic Programming"], "tags_cn": ["\u52a8\u6001\u89c4\u5212"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 1000022, "frontend_id": "\u9762\u8bd5\u9898 17.15", "title": "Longest Word", "title_cn": "\u6700\u957f\u5355\u8bcd", "content": "<p>Given a list of words, write a program to find the longest word made of other words in the list. If there are more than one answer, return the one that has smallest lexicographic order. If no answer, return an empty string.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> [&quot;cat&quot;,&quot;banana&quot;,&quot;dog&quot;,&quot;nana&quot;,&quot;walk&quot;,&quot;walker&quot;,&quot;dogwalker&quot;]\r\n<strong>Output: </strong> &quot;dogwalker&quot;\r\n<strong>Explanation: </strong> &quot;dogwalker&quot; can be made of &quot;dog&quot; and &quot;walker&quot;.\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= len(words) &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= len(words[i]) &lt;= 100</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u7ec4\u5355\u8bcd<code>words</code>\uff0c\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u627e\u51fa\u5176\u4e2d\u7684\u6700\u957f\u5355\u8bcd\uff0c\u4e14\u8be5\u5355\u8bcd\u7531\u8fd9\u7ec4\u5355\u8bcd\u4e2d\u7684\u5176\u4ed6\u5355\u8bcd\u7ec4\u5408\u800c\u6210\u3002\u82e5\u6709\u591a\u4e2a\u957f\u5ea6\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u8fd4\u56de\u5176\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u9879\uff0c\u82e5\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u5355\u8bcd\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong> [\"cat\",\"banana\",\"dog\",\"nana\",\"walk\",\"walker\",\"dogwalker\"]\n<strong>\u8f93\u51fa\uff1a</strong> \"dogwalker\"\n<strong>\u89e3\u91ca\uff1a</strong> \"dogwalker\"\u53ef\u7531\"dog\"\u548c\"walker\"\u7ec4\u6210\u3002\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>0 <= len(words) <= 100</code></li>\n<li><code>1 <= len(words[i]) <= 100</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/longest-word-lcci", "path": "/lcci/17.15.Longest%20Word/README_EN.md", "path_cn": "/lcci/17.15.Longest%20Word/README.md", "tags": ["String"], "tags_cn": ["\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000021, "frontend_id": "\u9762\u8bd5\u9898 17.14", "title": "Smallest K", "title_cn": "\u6700\u5c0fK\u4e2a\u6570", "content": "<p>Design an algorithm to find the smallest K numbers in an array.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> arr = [1,3,5,7,2,4,6,8], k = 4\r\n<strong>Output: </strong> [1,2,3,4]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= len(arr) &lt;= 100000</code></li>\r\n\t<li><code>0 &lt;= k &lt;= min(100000, len(arr))</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u6700\u5c0f\u7684k\u4e2a\u6570\u3002\u4ee5\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u8fd9k\u4e2a\u6570\u5747\u53ef\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> arr = [1,3,5,7,2,4,6,8], k = 4\n<strong>\u8f93\u51fa\uff1a</strong> [1,2,3,4]\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= len(arr) &lt;= 100000</code></li>\n\t<li><code>0 &lt;= k &lt;= min(100000, len(arr))</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/smallest-k-lcci", "path": "/lcci/17.14.Smallest%20K/README_EN.md", "path_cn": "/lcci/17.14.Smallest%20K/README.md", "tags": ["Heap", "Sort", "Divide and Conquer"], "tags_cn": ["\u5806", "\u6392\u5e8f", "\u5206\u6cbb\u7b97\u6cd5"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000020, "frontend_id": "\u9762\u8bd5\u9898 17.13", "title": "Re-Space", "title_cn": "\u6062\u590d\u7a7a\u683c", "content": "<p>Oh, no! You have accidentally removed all spaces, punctuation, and capitalization in a lengthy document. A sentence like &quot;I reset the computer. It still didn&#39;t boot!&quot; became &quot;iresetthecomputeritstilldidntboot&#39;&#39;. You&#39;ll deal with the punctuation and capi&shy;talization later; right now you need to re-insert the spaces. Most of the words are in a dictionary but a few are not. Given a dictionary (a list of strings) and the document (a string), design an algorithm to unconcatenate the document in a way that minimizes the number of unrecognized characters. Return the number of unrecognized characters.</p>\r\n\r\n<p><strong>Note: </strong>This&nbsp;problem is slightly different from the original one in the book.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\ndictionary = [&quot;looked&quot;,&quot;just&quot;,&quot;like&quot;,&quot;her&quot;,&quot;brother&quot;]\r\nsentence = &quot;jesslookedjustliketimherbrother&quot;\r\n<strong>Output: </strong> 7\r\n<strong>Explanation: </strong> After unconcatenating, we got &quot;<strong>jess</strong> looked just like <strong>tim</strong> her brother&quot;, which containing 7 unrecognized characters.\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= len(sentence) &lt;= 1000</code></li>\r\n\t<li><code><font face=\"sans-serif, Arial, Verdana, Trebuchet MS\">The total number of characters in&nbsp;</font>dictionary</code>&nbsp;is less than or equal to 150000.</li>\r\n\t<li>There are only lowercase letters in&nbsp;<code>dictionary</code>&nbsp;and&nbsp;<code>sentence</code>.</li>\r\n</ul>\r\n", "content_cn": "<p>\u54e6\uff0c\u4e0d\uff01\u4f60\u4e0d\u5c0f\u5fc3\u628a\u4e00\u4e2a\u957f\u7bc7\u6587\u7ae0\u4e2d\u7684\u7a7a\u683c\u3001\u6807\u70b9\u90fd\u5220\u6389\u4e86\uff0c\u5e76\u4e14\u5927\u5199\u4e5f\u5f04\u6210\u4e86\u5c0f\u5199\u3002\u50cf\u53e5\u5b50<code>&quot;I reset the computer. It still didn&rsquo;t boot!&quot;</code>\u5df2\u7ecf\u53d8\u6210\u4e86<code>&quot;iresetthecomputeritstilldidntboot&quot;</code>\u3002\u5728\u5904\u7406\u6807\u70b9\u7b26\u53f7\u548c\u5927\u5c0f\u5199\u4e4b\u524d\uff0c\u4f60\u5f97\u5148\u628a\u5b83\u65ad\u6210\u8bcd\u8bed\u3002\u5f53\u7136\u4e86\uff0c\u4f60\u6709\u4e00\u672c\u539a\u539a\u7684\u8bcd\u5178<code>dictionary</code>\uff0c\u4e0d\u8fc7\uff0c\u6709\u4e9b\u8bcd\u6ca1\u5728\u8bcd\u5178\u91cc\u3002\u5047\u8bbe\u6587\u7ae0\u7528<code>sentence</code>\u8868\u793a\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u628a\u6587\u7ae0\u65ad\u5f00\uff0c\u8981\u6c42\u672a\u8bc6\u522b\u7684\u5b57\u7b26\u6700\u5c11\uff0c\u8fd4\u56de\u672a\u8bc6\u522b\u7684\u5b57\u7b26\u6570\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u672c\u9898\u76f8\u5bf9\u539f\u9898\u7a0d\u4f5c\u6539\u52a8\uff0c\u53ea\u9700\u8fd4\u56de\u672a\u8bc6\u522b\u7684\u5b57\u7b26\u6570</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\ndictionary = [&quot;looked&quot;,&quot;just&quot;,&quot;like&quot;,&quot;her&quot;,&quot;brother&quot;]\nsentence = &quot;jesslookedjustliketimherbrother&quot;\n<strong>\u8f93\u51fa\uff1a</strong> 7\n<strong>\u89e3\u91ca\uff1a</strong> \u65ad\u53e5\u540e\u4e3a&quot;<strong>jess</strong> looked just like <strong>tim</strong> her brother&quot;\uff0c\u51717\u4e2a\u672a\u8bc6\u522b\u5b57\u7b26\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= len(sentence) &lt;= 1000</code></li>\n\t<li><code>dictionary</code>\u4e2d\u603b\u5b57\u7b26\u6570\u4e0d\u8d85\u8fc7 150000\u3002</li>\n\t<li>\u4f60\u53ef\u4ee5\u8ba4\u4e3a<code>dictionary</code>\u548c<code>sentence</code>\u4e2d\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/re-space-lcci", "path": "/lcci/17.13.Re-Space/README_EN.md", "path_cn": "/lcci/17.13.Re-Space/README.md", "tags": ["Memoization", "String"], "tags_cn": ["\u8bb0\u5fc6\u5316", "\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000019, "frontend_id": "\u9762\u8bd5\u9898 17.12", "title": "BiNode", "title_cn": "BiNode", "content": "<p>The data structure&nbsp;<code>TreeNode</code>&nbsp;is used for binary tree, but it can also used to represent a single linked list (where left is null, and right is the next node in the list). Implement a method to convert a binary search tree (implemented with <code>TreeNode</code>) into a single&nbsp;linked list. The values should be kept in order and the operation should be performed in place (that is, on the original data structure).</p>\r\n\r\n<p>Return the head node of the linked list after converting.</p>\r\n\r\n<p><b>Note:&nbsp;</b>This problem is slightly different from the original one in the book.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> [4,2,5,1,3,null,6,0]\r\n<strong>Output: </strong> [0,null,1,null,2,null,3,null,4,null,5,null,6]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li>The number of nodes will not exceed&nbsp;100000.</li>\r\n</ul>\r\n", "content_cn": "<p>\u4e8c\u53c9\u6811\u6570\u636e\u7ed3\u6784<code>TreeNode</code>\u53ef\u7528\u6765\u8868\u793a\u5355\u5411\u94fe\u8868\uff08\u5176\u4e2d<code>left</code>\u7f6e\u7a7a\uff0c<code>right</code>\u4e3a\u4e0b\u4e00\u4e2a\u94fe\u8868\u8282\u70b9\uff09\u3002\u5b9e\u73b0\u4e00\u4e2a\u65b9\u6cd5\uff0c\u628a\u4e8c\u53c9\u641c\u7d22\u6811\u8f6c\u6362\u4e3a\u5355\u5411\u94fe\u8868\uff0c\u8981\u6c42\u503c\u7684\u987a\u5e8f\u4fdd\u6301\u4e0d\u53d8\uff0c\u8f6c\u6362\u64cd\u4f5c\u5e94\u662f\u539f\u5740\u7684\uff0c\u4e5f\u5c31\u662f\u5728\u539f\u59cb\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u4e0a\u76f4\u63a5\u4fee\u6539\u3002</p>\n\n<p>\u8fd4\u56de\u8f6c\u6362\u540e\u7684\u5355\u5411\u94fe\u8868\u7684\u5934\u8282\u70b9\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u672c\u9898\u76f8\u5bf9\u539f\u9898\u7a0d\u4f5c\u6539\u52a8</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> [4,2,5,1,3,null,6,0]\n<strong>\u8f93\u51fa\uff1a</strong> [0,null,1,null,2,null,3,null,4,null,5,null,6]\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li>\u8282\u70b9\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7 100000\u3002</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/binode-lcci", "path": "/lcci/17.12.BiNode/README_EN.md", "path_cn": "/lcci/17.12.BiNode/README.md", "tags": ["Tree", "Binary Search Tree", "Recursion"], "tags_cn": ["\u6811", "\u4e8c\u53c9\u641c\u7d22\u6811", "\u9012\u5f52"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 1000018, "frontend_id": "\u9762\u8bd5\u9898 16.08", "title": "English Int", "title_cn": "\u6574\u6570\u7684\u82f1\u8bed\u8868\u793a", "content": "<p>Given any integer, print an English phrase that describes the integer (e.g., &quot;One Thousand Two Hundred Thirty Four&quot;).</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 123\r\n<strong>Output:</strong> &quot;One Hundred Twenty Three&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 12345\r\n<strong>Output:</strong> &quot;Twelve Thousand Three Hundred Forty Five&quot;</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 1234567\r\n<strong>Output:</strong> &quot;One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven&quot;</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 1234567891\r\n<strong>Output:</strong> &quot;One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One&quot;</pre>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u6253\u5370\u8be5\u6574\u6570\u7684\u82f1\u6587\u63cf\u8ff0\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 123\n<strong>\u8f93\u51fa:</strong> &quot;One Hundred Twenty Three&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 12345\n<strong>\u8f93\u51fa:</strong> &quot;Twelve Thousand Three Hundred Forty Five&quot;</pre>\n\n<p><strong>\u793a\u4f8b 3:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1234567\n<strong>\u8f93\u51fa:</strong> &quot;One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven&quot;</pre>\n\n<p><strong>\u793a\u4f8b 4:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 1234567891\n<strong>\u8f93\u51fa:</strong> &quot;One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One&quot;</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/english-int-lcci", "path": "/lcci/16.08.English%20Int/README_EN.md", "path_cn": "/lcci/16.08.English%20Int/README.md", "tags": ["Math", "String"], "tags_cn": ["\u6570\u5b66", "\u5b57\u7b26\u4e32"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 1000017, "frontend_id": "\u9762\u8bd5\u9898 16.05", "title": "Factorial Zeros", "title_cn": "\u9636\u4e58\u5c3e\u6570", "content": "<p>Write an algorithm which computes the number of trailing zeros in n factorial.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 3\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong>&nbsp;3! = 6, no trailing zero.</pre>\r\n\r\n<p><strong>Example&nbsp;2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> 5\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong>&nbsp;5! = 120, one trailing zero.</pre>\r\n\r\n<p><b>Note:&nbsp;</b>Your solution should be in logarithmic time complexity.</p>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u7b97\u51fa n \u9636\u4e58\u6709\u591a\u5c11\u4e2a\u5c3e\u968f\u96f6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 3\n<strong>\u8f93\u51fa:</strong> 0\n<strong>\u89e3\u91ca:</strong>&nbsp;3! = 6, \u5c3e\u6570\u4e2d\u6ca1\u6709\u96f6\u3002</pre>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> 5\n<strong>\u8f93\u51fa:</strong> 1\n<strong>\u89e3\u91ca:</strong>&nbsp;5! = 120, \u5c3e\u6570\u4e2d\u6709 1 \u4e2a\u96f6.</pre>\n\n<p><strong>\u8bf4\u660e: </strong>\u4f60\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u4e3a&nbsp;<em>O</em>(log&nbsp;<em>n</em>)<em>&nbsp;</em>\u3002</p>\n", "url": "", "url_cn": "https://leetcode.cn/problems/factorial-zeros-lcci", "path": "/lcci/16.05.Factorial%20Zeros/README_EN.md", "path_cn": "/lcci/16.05.Factorial%20Zeros/README.md", "tags": ["Math"], "tags_cn": ["\u6570\u5b66"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 1000016, "frontend_id": "\u9762\u8bd5\u9898 10.09", "title": "Sorted Matrix Search", "title_cn": "\u6392\u5e8f\u77e9\u9635\u67e5\u627e", "content": "<p>Given an M x N matrix in which each row and each column is sorted in ascending order, write a method to find an element.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<p>Given matrix:</p>\r\n\r\n<pre>\r\n[\r\n  [1,   4,  7, 11, 15],\r\n  [2,   5,  8, 12, 19],\r\n  [3,   6,  9, 16, 22],\r\n  [10, 13, 14, 17, 24],\r\n  [18, 21, 23, 26, 30]\r\n]\r\n</pre>\r\n\r\n<p>Given target&nbsp;=&nbsp;5,&nbsp;return&nbsp;<code>true.</code></p>\r\n\r\n<p>Given target&nbsp;=&nbsp;20, return&nbsp;<code>false.</code></p>\r\n", "content_cn": "<p>\u7ed9\u5b9aM&times;N\u77e9\u9635\uff0c\u6bcf\u4e00\u884c\u3001\u6bcf\u4e00\u5217\u90fd\u6309\u5347\u5e8f\u6392\u5217\uff0c\u8bf7\u7f16\u5199\u4ee3\u7801\u627e\u51fa\u67d0\u5143\u7d20\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<p>\u73b0\u6709\u77e9\u9635 matrix \u5982\u4e0b\uff1a</p>\n\n<pre>[\n  [1,   4,  7, 11, 15],\n  [2,   5,  8, 12, 19],\n  [3,   6,  9, 16, 22],\n  [10, 13, 14, 17, 24],\n  [18, 21, 23, 26, 30]\n]\n</pre>\n\n<p>\u7ed9\u5b9a target&nbsp;=&nbsp;<code>5</code>\uff0c\u8fd4\u56de&nbsp;<code>true</code>\u3002</p>\n\n<p>\u7ed9\u5b9a&nbsp;target&nbsp;=&nbsp;<code>20</code>\uff0c\u8fd4\u56de&nbsp;<code>false</code>\u3002</p>\n", "url": "", "url_cn": "https://leetcode.cn/problems/sorted-matrix-search-lcci", "path": "/lcci/10.09.Sorted%20Matrix%20Search/README_EN.md", "path_cn": "/lcci/10.09.Sorted%20Matrix%20Search/README.md", "tags": ["Two Pointers", "Binary Search", "Divide and Conquer"], "tags_cn": ["\u53cc\u6307\u9488", "\u4e8c\u5206\u67e5\u627e", "\u5206\u6cbb\u7b97\u6cd5"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000015, "frontend_id": "\u9762\u8bd5\u9898 08.06", "title": "Hanota", "title_cn": "\u6c49\u8bfa\u5854\u95ee\u9898", "content": "<p>In the classic problem of the Towers of Hanoi, you have 3 towers and N disks of different sizes which can slide onto any tower. The puzzle starts with disks sorted in ascending order of size from top to bottom (i.e., each disk sits on top of an even larger one). You have the following constraints:</p>\r\n\r\n<p>(1) Only one disk can be moved at a time.<br />\r\n(2) A disk is slid off the top of one tower onto another tower.<br />\r\n(3) A disk cannot be placed on top of a smaller disk.</p>\r\n\r\n<p>Write a program to move the disks from the first tower to the last using stacks.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: A = [2, 1, 0], B = [], C = []\r\n<strong> Output</strong>: C = [2, 1, 0]\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: A = [1, 0], B = [], C = []\r\n<strong> Output</strong>: C = [1, 0]\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>A.length &lt;= 14</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u5728\u7ecf\u5178\u6c49\u8bfa\u5854\u95ee\u9898\u4e2d\uff0c\u6709 3 \u6839\u67f1\u5b50\u53ca N \u4e2a\u4e0d\u540c\u5927\u5c0f\u7684\u7a7f\u5b54\u5706\u76d8\uff0c\u76d8\u5b50\u53ef\u4ee5\u6ed1\u5165\u4efb\u610f\u4e00\u6839\u67f1\u5b50\u3002\u4e00\u5f00\u59cb\uff0c\u6240\u6709\u76d8\u5b50\u81ea\u4e0a\u800c\u4e0b\u6309\u5347\u5e8f\u4f9d\u6b21\u5957\u5728\u7b2c\u4e00\u6839\u67f1\u5b50\u4e0a(\u5373\u6bcf\u4e00\u4e2a\u76d8\u5b50\u53ea\u80fd\u653e\u5728\u66f4\u5927\u7684\u76d8\u5b50\u4e0a\u9762)\u3002\u79fb\u52a8\u5706\u76d8\u65f6\u53d7\u5230\u4ee5\u4e0b\u9650\u5236:<br>\n(1) \u6bcf\u6b21\u53ea\u80fd\u79fb\u52a8\u4e00\u4e2a\u76d8\u5b50;<br>\n(2) \u76d8\u5b50\u53ea\u80fd\u4ece\u67f1\u5b50\u9876\u7aef\u6ed1\u51fa\u79fb\u5230\u4e0b\u4e00\u6839\u67f1\u5b50;<br>\n(3) \u76d8\u5b50\u53ea\u80fd\u53e0\u5728\u6bd4\u5b83\u5927\u7684\u76d8\u5b50\u4e0a\u3002</p>\n\n<p>\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u7528\u6808\u5c06\u6240\u6709\u76d8\u5b50\u4ece\u7b2c\u4e00\u6839\u67f1\u5b50\u79fb\u5230\u6700\u540e\u4e00\u6839\u67f1\u5b50\u3002</p>\n\n<p>\u4f60\u9700\u8981\u539f\u5730\u4fee\u6539\u6808\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1aA = [2, 1, 0], B = [], C = []\n<strong> \u8f93\u51fa</strong>\uff1aC = [2, 1, 0]\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1aA = [1, 0], B = [], C = []\n<strong> \u8f93\u51fa</strong>\uff1aC = [1, 0]\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>A\u4e2d\u76d8\u5b50\u7684\u6570\u76ee\u4e0d\u5927\u4e8e14\u4e2a\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/hanota-lcci", "path": "/lcci/08.06.Hanota/README_EN.md", "path_cn": "/lcci/08.06.Hanota/README.md", "tags": ["Recursion"], "tags_cn": ["\u9012\u5f52"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 1000013, "frontend_id": "\u9762\u8bd5\u9898 10.11", "title": "Peaks and Valleys", "title_cn": "\u5cf0\u4e0e\u8c37", "content": "<p>In an array of integers, a &quot;peak&quot; is an element which is greater than or equal to the adjacent integers and a &quot;valley&quot; is an element which is less than or equal to the adjacent inte&shy;gers. For example, in the array {5, 8, 6, 2, 3, 4, 6}, {8, 6} are peaks and {5, 2} are valleys. Given an array of integers, sort the array into an alternating sequence of peaks and valleys.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[5, 3, 1, 2, 3]\r\n<strong>Output:</strong>&nbsp;[5, 1, 3, 2, 3]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>nums.length &lt;= 10000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u5728\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c&ldquo;\u5cf0&rdquo;\u662f\u5927\u4e8e\u6216\u7b49\u4e8e\u76f8\u90bb\u6574\u6570\u7684\u5143\u7d20\uff0c\u76f8\u5e94\u5730\uff0c&ldquo;\u8c37&rdquo;\u662f\u5c0f\u4e8e\u6216\u7b49\u4e8e\u76f8\u90bb\u6574\u6570\u7684\u5143\u7d20\u3002\u4f8b\u5982\uff0c\u5728\u6570\u7ec4{5, 8, 6, 2, 3, 4, 6}\u4e2d\uff0c{8, 6}\u662f\u5cf0\uff0c {5, 2}\u662f\u8c37\u3002\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5c06\u8be5\u6570\u7ec4\u6309\u5cf0\u4e0e\u8c37\u7684\u4ea4\u66ff\u987a\u5e8f\u6392\u5e8f\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165: </strong>[5, 3, 1, 2, 3]\n<strong>\u8f93\u51fa:</strong>&nbsp;[5, 1, 3, 2, 3]\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>nums.length &lt;= 10000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/peaks-and-valleys-lcci", "path": "/lcci/10.11.Peaks%20and%20Valleys/README_EN.md", "path_cn": "/lcci/10.11.Peaks%20and%20Valleys/README.md", "tags": [], "tags_cn": [], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000012, "frontend_id": "\u9762\u8bd5\u9898 10.01", "title": "Sorted Merge", "title_cn": "\u5408\u5e76\u6392\u5e8f\u7684\u6570\u7ec4", "content": "<p>You are given two sorted arrays, A and B, where A has a large enough buffer at the end to hold B. Write a method to merge B into A in sorted order.</p>\r\n\r\n<p>Initially the number of elements in A and B are&nbsp;<em>m</em>&nbsp;and&nbsp;<em>n</em> respectively.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\nA = [1,2,3,0,0,0], m = 3\r\nB = [2,5,6],       n = 3\r\n\r\n<strong>Output:</strong>&nbsp;[1,2,2,3,5,6]</pre>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e24\u4e2a\u6392\u5e8f\u540e\u7684\u6570\u7ec4 A \u548c B\uff0c\u5176\u4e2d A \u7684\u672b\u7aef\u6709\u8db3\u591f\u7684\u7f13\u51b2\u7a7a\u95f4\u5bb9\u7eb3 B\u3002 \u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5c06 B \u5408\u5e76\u5165 A \u5e76\u6392\u5e8f\u3002</p>\n\n<p>\u521d\u59cb\u5316&nbsp;A \u548c B \u7684\u5143\u7d20\u6570\u91cf\u5206\u522b\u4e3a&nbsp;<em>m</em> \u548c <em>n</em>\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong>\nA = [1,2,3,0,0,0], m = 3\nB = [2,5,6],       n = 3\n\n<strong>\u8f93\u51fa:</strong>&nbsp;[1,2,2,3,5,6]</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ul>\n\t<li><code>A.length == n + m</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/sorted-merge-lcci", "path": "/lcci/10.01.Sorted%20Merge/README_EN.md", "path_cn": "/lcci/10.01.Sorted%20Merge/README.md", "tags": ["Array", "Two Pointers"], "tags_cn": ["\u6570\u7ec4", "\u53cc\u6307\u9488"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 1000011, "frontend_id": "\u9762\u8bd5\u9898 08.02", "title": "Robot in a Grid", "title_cn": "\u8ff7\u8def\u7684\u673a\u5668\u4eba", "content": "<p>Imagine a robot sitting on the upper left corner of grid with r rows and c columns. The robot can only move in two directions, right and down, but certain cells are &quot;off limits&quot; such that the robot cannot step on them. Design an algorithm to find a path for the robot from the top left to the bottom right.</p>\r\n\r\n<p><img src=\"https://assets.leetcode.cn/aliyun-lc-upload/uploads/2018/10/22/robot_maze.png\" style=\"height: 183px; width: 400px;\" /></p>\r\n\r\n<p>&quot;off limits&quot; and empty grid are represented by&nbsp;<code>1</code> and&nbsp;<code>0</code>&nbsp;respectively.</p>\r\n\r\n<p>Return a valid path, consisting of row number and column number of grids in the path.</p>\r\n\r\n<p><strong>Example&nbsp;1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:\r\n</strong>[\r\n&nbsp; [<strong>0</strong>,<strong>0</strong>,<strong>0</strong>],\r\n&nbsp; [0,1,<strong>0</strong>],\r\n&nbsp; [0,0,<strong>0</strong>]\r\n]\r\n<strong>Output:</strong> [[0,0],[0,1],[0,2],[1,2],[2,2]]</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>r,&nbsp;c &lt;= 100</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u8bbe\u60f3\u6709\u4e2a\u673a\u5668\u4eba\u5750\u5728\u4e00\u4e2a\u7f51\u683c\u7684\u5de6\u4e0a\u89d2\uff0c\u7f51\u683c r \u884c c \u5217\u3002\u673a\u5668\u4eba\u53ea\u80fd\u5411\u4e0b\u6216\u5411\u53f3\u79fb\u52a8\uff0c\u4f46\u4e0d\u80fd\u8d70\u5230\u4e00\u4e9b\u88ab\u7981\u6b62\u7684\u7f51\u683c\uff08\u6709\u969c\u788d\u7269\uff09\u3002\u8bbe\u8ba1\u4e00\u79cd\u7b97\u6cd5\uff0c\u5bfb\u627e\u673a\u5668\u4eba\u4ece\u5de6\u4e0a\u89d2\u79fb\u52a8\u5230\u53f3\u4e0b\u89d2\u7684\u8def\u5f84\u3002</p>\n\n<p><img src=\"https://assets.leetcode.cn/aliyun-lc-upload/uploads/2018/10/22/robot_maze.png\" style=\"height: 183px; width: 400px;\"></p>\n\n<p>\u7f51\u683c\u4e2d\u7684\u969c\u788d\u7269\u548c\u7a7a\u4f4d\u7f6e\u5206\u522b\u7528 <code>1</code> \u548c <code>0</code> \u6765\u8868\u793a\u3002</p>\n\n<p>\u8fd4\u56de\u4e00\u6761\u53ef\u884c\u7684\u8def\u5f84\uff0c\u8def\u5f84\u7531\u7ecf\u8fc7\u7684\u7f51\u683c\u7684\u884c\u53f7\u548c\u5217\u53f7\u7ec4\u6210\u3002\u5de6\u4e0a\u89d2\u4e3a 0 \u884c 0 \u5217\u3002</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:\n</strong>[\n&nbsp; [<strong>0</strong>,<strong>0</strong>,<strong>0</strong>],\n&nbsp; [0,1,<strong>0</strong>],\n&nbsp; [0,0,<strong>0</strong>]\n]\n<strong>\u8f93\u51fa:</strong> [[0,0],[0,1],[0,2],[1,2],[2,2]]\n<strong>\u89e3\u91ca: \n</strong>\u8f93\u5165\u4e2d\u6807\u7c97\u7684\u4f4d\u7f6e\u5373\u4e3a\u8f93\u51fa\u8868\u793a\u7684\u8def\u5f84\uff0c\u5373\n0\u884c0\u5217\uff08\u5de6\u4e0a\u89d2\uff09 -&gt; 0\u884c1\u5217 -&gt; 0\u884c2\u5217 -&gt; 1\u884c2\u5217 -&gt; 2\u884c2\u5217\uff08\u53f3\u4e0b\u89d2\uff09</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong><em>r</em>&nbsp;\u548c <em>c </em>\u7684\u503c\u5747\u4e0d\u8d85\u8fc7 100\u3002</p>\n", "url": "", "url_cn": "https://leetcode.cn/problems/robot-in-a-grid-lcci", "path": "/lcci/08.02.Robot%20in%20a%20Grid/README_EN.md", "path_cn": "/lcci/08.02.Robot%20in%20a%20Grid/README.md", "tags": ["Dynamic Programming"], "tags_cn": ["\u52a8\u6001\u89c4\u5212"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000010, "frontend_id": "\u9762\u8bd5\u9898 04.09", "title": "BST Sequences", "title_cn": "\u4e8c\u53c9\u641c\u7d22\u6811\u5e8f\u5217", "content": "<p>A binary search tree was created by traversing through an array from left to right and inserting each element. Given a binary search tree with distinct elements, print all possible arrays that could have led to this tree.</p>\r\n\r\n<p><strong>Example:</strong><br />\r\nGiven the following tree:</p>\r\n\r\n<pre>\r\n        2\r\n       / \\\r\n      1   3\r\n</pre>\r\n\r\n<p>Output:</p>\r\n\r\n<pre>\r\n[\r\n   [2,1,3],\r\n   [2,3,1]\r\n]\r\n</pre>\r\n", "content_cn": "<p>\u4ece\u5de6\u5411\u53f3\u904d\u5386\u4e00\u4e2a\u6570\u7ec4\uff0c\u901a\u8fc7\u4e0d\u65ad\u5c06\u5176\u4e2d\u7684\u5143\u7d20\u63d2\u5165\u6811\u4e2d\u53ef\u4ee5\u9010\u6b65\u5730\u751f\u6210\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u3002\u7ed9\u5b9a\u4e00\u4e2a\u7531\u4e0d\u540c\u8282\u70b9\u7ec4\u6210\u7684\u4e8c\u53c9\u6811\uff0c\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u751f\u6210\u6b64\u6811\u7684\u6570\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong><br>\n\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u6811</p>\n\n<pre>        2\n       / \\\n      1   3\n</pre>\n\n<p>\u8fd4\u56de:</p>\n\n<pre>[\n   [2,1,3],\n   [2,3,1]\n]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/bst-sequences-lcci", "path": "/lcci/04.09.BST%20Sequences/README_EN.md", "path_cn": "/lcci/04.09.BST%20Sequences/README.md", "tags": ["Tree", "Dynamic Programming"], "tags_cn": ["\u6811", "\u52a8\u6001\u89c4\u5212"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 1000009, "frontend_id": "\u9762\u8bd5\u9898 04.12", "title": "Paths with Sum", "title_cn": "\u6c42\u548c\u8def\u5f84", "content": "<p>You are given a binary tree in which each node contains an integer value (which might be positive or negative). Design an algorithm to count the number of paths that sum to a given value. The path does not need to start or end at the root or a leaf, but it must go downwards (traveling only from parent nodes to child nodes).</p>\r\n\r\n<p><strong>Example:</strong><br />\r\nGiven the following tree and &nbsp;<code>sum = 22,</code></p>\r\n\r\n<pre>\r\n              5\r\n             / \\\r\n            4   8\r\n           /   / \\\r\n          11  13  4\r\n         /  \\    / \\\r\n        7    2  5   1\r\n</pre>\r\n\r\n<p>Output:</p>\r\n\r\n<pre>\r\n3\r\n<strong>Explanation: </strong>Paths that have sum 22 are: [5,4,11,2], [5,8,4,5], [4,11,7]</pre>\r\n\r\n<p>Note:</p>\r\n\r\n<ul>\r\n\t<li><code>node number &lt;= 10000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u542b\u6709\u4e00\u4e2a\u6574\u6570\u6570\u503c(\u8be5\u503c\u6216\u6b63\u6216\u8d1f)\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u6253\u5370\u8282\u70b9\u6570\u503c\u603b\u548c\u7b49\u4e8e\u67d0\u4e2a\u7ed9\u5b9a\u503c\u7684\u6240\u6709\u8def\u5f84\u7684\u6570\u91cf\u3002\u6ce8\u610f\uff0c\u8def\u5f84\u4e0d\u4e00\u5b9a\u975e\u5f97\u4ece\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u6216\u53f6\u8282\u70b9\u5f00\u59cb\u6216\u7ed3\u675f\uff0c\u4f46\u662f\u5176\u65b9\u5411\u5fc5\u987b\u5411\u4e0b(\u53ea\u80fd\u4ece\u7236\u8282\u70b9\u6307\u5411\u5b50\u8282\u70b9\u65b9\u5411)\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong><br>\n\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u6811\uff0c\u4ee5\u53ca\u76ee\u6807\u548c&nbsp;<code>sum = 22</code>\uff0c</p>\n\n<pre>              5\n             / \\\n            4   8\n           /   / \\\n          11  13  4\n         /  \\    / \\\n        7    2  5   1\n</pre>\n\n<p>\u8fd4\u56de:</p>\n\n<pre>3\n<strong>\u89e3\u91ca\uff1a</strong>\u548c\u4e3a 22&nbsp;\u7684\u8def\u5f84\u6709\uff1a[5,4,11,2], [5,8,4,5], [4,11,7]</pre>\n\n<p>\u63d0\u793a\uff1a</p>\n\n<ul>\n\t<li><code>\u8282\u70b9\u603b\u6570 &lt;= 10000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/paths-with-sum-lcci", "path": "/lcci/04.12.Paths%20with%20Sum/README_EN.md", "path_cn": "/lcci/04.12.Paths%20with%20Sum/README.md", "tags": ["Tree", "Depth-first Search"], "tags_cn": ["\u6811", "\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000008, "frontend_id": "\u9762\u8bd5\u9898 02.04", "title": "Partition List", "title_cn": "\u5206\u5272\u94fe\u8868", "content": "<p>Write code to partition a linked list around a value x, such that all nodes less than x come before all nodes greater than or equal to x. If x is contained within the list, the values of x only need to be after the elements less than x (see below). The partition element x can appear anywhere in the &quot;right partition&quot;; it does not need to appear between the left and right partitions.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> head = 3-&gt;5-&gt;8-&gt;5-&gt;10-&gt;2-&gt;1, <em>x</em> = 5\r\n<strong>Output:</strong> 3-&gt;1-&gt;2-&gt;10-&gt;5-&gt;5-&gt;8\r\n</pre>\r\n", "content_cn": "<p>\u7f16\u5199\u7a0b\u5e8f\u4ee5 x \u4e3a\u57fa\u51c6\u5206\u5272\u94fe\u8868\uff0c\u4f7f\u5f97\u6240\u6709\u5c0f\u4e8e x \u7684\u8282\u70b9\u6392\u5728\u5927\u4e8e\u6216\u7b49\u4e8e x \u7684\u8282\u70b9\u4e4b\u524d\u3002\u5982\u679c\u94fe\u8868\u4e2d\u5305\u542b x\uff0cx \u53ea\u9700\u51fa\u73b0\u5728\u5c0f\u4e8e x \u7684\u5143\u7d20\u4e4b\u540e(\u5982\u4e0b\u6240\u793a)\u3002\u5206\u5272\u5143\u7d20 x \u53ea\u9700\u5904\u4e8e&ldquo;\u53f3\u534a\u90e8\u5206&rdquo;\u5373\u53ef\uff0c\u5176\u4e0d\u9700\u8981\u88ab\u7f6e\u4e8e\u5de6\u53f3\u4e24\u90e8\u5206\u4e4b\u95f4\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> head = 3-&gt;5-&gt;8-&gt;5-&gt;10-&gt;2-&gt;1, <em>x</em> = 5\n<strong>\u8f93\u51fa:</strong> 3-&gt;1-&gt;2-&gt;10-&gt;5-&gt;5-&gt;8\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/partition-list-lcci", "path": "/lcci/02.04.Partition%20List/README_EN.md", "path_cn": "/lcci/02.04.Partition%20List/README.md", "tags": ["Linked List", "Two Pointers"], "tags_cn": ["\u94fe\u8868", "\u53cc\u6307\u9488"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000007, "frontend_id": "\u9762\u8bd5\u9898 02.02", "title": "Kth Node From End of List", "title_cn": "\u8fd4\u56de\u5012\u6570\u7b2c k \u4e2a\u8282\u70b9", "content": "<p>Implement an algorithm to find the kth to last element of a singly linked list.&nbsp;Return the value of the element.</p>\r\n\r\n<p><strong>Note: </strong>This problem is slightly different from the original one in the book.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> 1-&gt;2-&gt;3-&gt;4-&gt;5 \u548c <em>k</em> = 2\r\n<strong>Output:  </strong>4</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<p>k is always valid.</p>\r\n", "content_cn": "<p>\u5b9e\u73b0\u4e00\u79cd\u7b97\u6cd5\uff0c\u627e\u51fa\u5355\u5411\u94fe\u8868\u4e2d\u5012\u6570\u7b2c k \u4e2a\u8282\u70b9\u3002\u8fd4\u56de\u8be5\u8282\u70b9\u7684\u503c\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u672c\u9898\u76f8\u5bf9\u539f\u9898\u7a0d\u4f5c\u6539\u52a8</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5 \u548c <em>k</em> = 2\n<strong>\u8f93\u51fa\uff1a </strong>4</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u7ed9\u5b9a\u7684 <em>k</em>&nbsp;\u4fdd\u8bc1\u662f\u6709\u6548\u7684\u3002</p>\n", "url": "", "url_cn": "https://leetcode.cn/problems/kth-node-from-end-of-list-lcci", "path": "/lcci/02.02.Kth%20Node%20From%20End%20of%20List/README_EN.md", "path_cn": "/lcci/02.02.Kth%20Node%20From%20End%20of%20List/README.md", "tags": ["Linked List", "Two Pointers"], "tags_cn": ["\u94fe\u8868", "\u53cc\u6307\u9488"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 1000006, "frontend_id": "\u9762\u8bd5\u9898 01.05", "title": "One Away", "title_cn": "\u4e00\u6b21\u7f16\u8f91", "content": "<p>There are three types of edits that can be performed on strings: insert a character, remove a character, or replace a character. Given two strings, write a function to check if they are one edit (or zero edits) away.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example&nbsp;1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> \r\nfirst = &quot;pale&quot;\r\nsecond = &quot;ple&quot;\r\n<strong>Output:</strong> True\r\n</pre>\r\n\r\n<p><strong>Example&nbsp;2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> \r\nfirst = &quot;pales&quot;\r\nsecond = &quot;pal&quot;\r\n<strong>Output:</strong> False\r\n</pre>\r\n", "content_cn": "<p>\u5b57\u7b26\u4e32\u6709\u4e09\u79cd\u7f16\u8f91\u64cd\u4f5c:\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u3001\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u6216\u8005\u66ff\u6362\u4e00\u4e2a\u5b57\u7b26\u3002 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5224\u5b9a\u5b83\u4eec\u662f\u5426\u53ea\u9700\u8981\u4e00\u6b21(\u6216\u8005\u96f6\u6b21)\u7f16\u8f91\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \nfirst = &quot;pale&quot;\nsecond = &quot;ple&quot;\n<strong>\u8f93\u51fa:</strong> True</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b&nbsp;2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> \nfirst = &quot;pales&quot;\nsecond = &quot;pal&quot;\n<strong>\u8f93\u51fa:</strong> False\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/one-away-lcci", "path": "/lcci/01.05.One%20Away/README_EN.md", "path_cn": "/lcci/01.05.One%20Away/README.md", "tags": ["String", "Dynamic Programming"], "tags_cn": ["\u5b57\u7b26\u4e32", "\u52a8\u6001\u89c4\u5212"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000005, "frontend_id": "\u9762\u8bd5\u9898 16.19", "title": "Pond Sizes", "title_cn": "\u6c34\u57df\u5927\u5c0f", "content": "<p>You have an integer matrix representing a plot of land, where the value at that loca&shy;tion represents the height above sea level. A value of zero indicates water. A pond is a region of water connected vertically, horizontally, or diagonally. The size of the pond is the total number of connected water cells. Write a method to compute the sizes of all ponds in the matrix.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\n[\r\n  [0,2,1,0],\r\n  [0,1,0,1],\r\n  [1,1,0,1],\r\n  [0,1,0,1]\r\n]\r\n<strong>Output: </strong> [1,2,4]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt; len(land) &lt;= 1000</code></li>\r\n\t<li><code>0 &lt; len(land[i]) &lt;= 1000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u4f60\u6709\u4e00\u4e2a\u7528\u4e8e\u8868\u793a\u4e00\u7247\u571f\u5730\u7684\u6574\u6570\u77e9\u9635<code>land</code>\uff0c\u8be5\u77e9\u9635\u4e2d\u6bcf\u4e2a\u70b9\u7684\u503c\u4ee3\u8868\u5bf9\u5e94\u5730\u70b9\u7684\u6d77\u62d4\u9ad8\u5ea6\u3002\u82e5\u503c\u4e3a0\u5219\u8868\u793a\u6c34\u57df\u3002\u7531\u5782\u76f4\u3001\u6c34\u5e73\u6216\u5bf9\u89d2\u8fde\u63a5\u7684\u6c34\u57df\u4e3a\u6c60\u5858\u3002\u6c60\u5858\u7684\u5927\u5c0f\u662f\u6307\u76f8\u8fde\u63a5\u7684\u6c34\u57df\u7684\u4e2a\u6570\u3002\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u8ba1\u7b97\u77e9\u9635\u4e2d\u6240\u6709\u6c60\u5858\u7684\u5927\u5c0f\uff0c\u8fd4\u56de\u503c\u9700\u8981\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong>\n[\n  [0,2,1,0],\n  [0,1,0,1],\n  [1,1,0,1],\n  [0,1,0,1]\n]\n<strong>\u8f93\u51fa\uff1a</strong> [1,2,4]\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>0 < len(land) <= 1000</code></li>\n<li><code>0 < len(land[i]) <= 1000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/pond-sizes-lcci", "path": "/lcci/16.19.Pond%20Sizes/README_EN.md", "path_cn": "/lcci/16.19.Pond%20Sizes/README.md", "tags": ["Depth-first Search", "Breadth-first Search"], "tags_cn": ["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22", "\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000004, "frontend_id": "\u9762\u8bd5\u9898 16.18", "title": "Pattern Matching", "title_cn": "\u6a21\u5f0f\u5339\u914d", "content": "<p>You are given two strings, pattern and value. The pattern string consists of just the letters a and b, describing a pattern within a string. For example, the string catcatgocatgo matches the pattern aabab (where cat is a and go is b). It also matches patterns like a, ab, and b. Write a method to determine if value matches pattern. a and b cannot be the same string.</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> pattern = &quot;abba&quot;, value = &quot;dogcatcatdog&quot;\r\n<strong>Output: </strong> true\r\n</pre>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> pattern = &quot;abba&quot;, value = &quot;dogcatcatfish&quot;\r\n<strong>Output: </strong> false\r\n</pre>\r\n\r\n<p><strong>Example 3: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> pattern = &quot;aaaa&quot;, value = &quot;dogcatcatdog&quot;\r\n<strong>Output: </strong> false\r\n</pre>\r\n\r\n<p><strong>Example 4: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> pattern = &quot;abba&quot;, value = &quot;dogdogdogdog&quot;\r\n<strong>Output: </strong> true\r\n<strong>Explanation: </strong> &quot;a&quot;=&quot;dogdog&quot;,b=&quot;&quot;\uff0cvice versa.\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= len(pattern) &lt;= 1000</code></li>\r\n\t<li><code>0 &lt;= len(value) &lt;= 1000</code></li>\r\n\t<li><code>pattern</code>&nbsp;only contains&nbsp;<code>&quot;a&quot;</code>&nbsp;and&nbsp;<code>&quot;b&quot;</code>,&nbsp;<code>value</code> only contains lowercase letters.</li>\r\n</ul>\r\n", "content_cn": "<p>\u4f60\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5373<code>pattern</code>\u548c<code>value</code>\u3002 <code>pattern</code>\u5b57\u7b26\u4e32\u7531\u5b57\u6bcd<code>\"a\"</code>\u548c<code>\"b\"</code>\u7ec4\u6210\uff0c\u7528\u4e8e\u63cf\u8ff0\u5b57\u7b26\u4e32\u4e2d\u7684\u6a21\u5f0f\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32<code>\"catcatgocatgo\"</code>\u5339\u914d\u6a21\u5f0f<code>\"aabab\"</code>\uff08\u5176\u4e2d<code>\"cat\"</code>\u662f<code>\"a\"</code>\uff0c<code>\"go\"</code>\u662f<code>\"b\"</code>\uff09\uff0c\u8be5\u5b57\u7b26\u4e32\u4e5f\u5339\u914d\u50cf<code>\"a\"</code>\u3001<code>\"ab\"</code>\u548c<code>\"b\"</code>\u8fd9\u6837\u7684\u6a21\u5f0f\u3002\u4f46\u9700\u6ce8\u610f<code>\"a\"</code>\u548c<code>\"b\"</code>\u4e0d\u80fd\u540c\u65f6\u8868\u793a\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u3002\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\u5224\u65ad<code>value</code>\u5b57\u7b26\u4e32\u662f\u5426\u5339\u914d<code>pattern</code>\u5b57\u7b26\u4e32\u3002</p>\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong> pattern = \"abba\", value = \"dogcatcatdog\"\n<strong>\u8f93\u51fa\uff1a</strong> true\n</pre>\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong> pattern = \"abba\", value = \"dogcatcatfish\"\n<strong>\u8f93\u51fa\uff1a</strong> false\n</pre>\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong> pattern = \"aaaa\", value = \"dogcatcatdog\"\n<strong>\u8f93\u51fa\uff1a</strong> false\n</pre>\n<p><strong>\u793a\u4f8b 4\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong> pattern = \"abba\", value = \"dogdogdogdog\"\n<strong>\u8f93\u51fa\uff1a</strong> true\n<strong>\u89e3\u91ca\uff1a</strong> \"a\"=\"dogdog\",b=\"\"\uff0c\u53cd\u4e4b\u4e5f\u7b26\u5408\u89c4\u5219\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>0 <= len(pattern) <= 1000</code></li>\n<li><code>0 <= len(value) <= 1000</code></li>\n<li>\u4f60\u53ef\u4ee5\u5047\u8bbe<code>pattern</code>\u53ea\u5305\u542b\u5b57\u6bcd<code>\"a\"</code>\u548c<code>\"b\"</code>\uff0c<code>value</code>\u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/pattern-matching-lcci", "path": "/lcci/16.18.Pattern%20Matching/README_EN.md", "path_cn": "/lcci/16.18.Pattern%20Matching/README.md", "tags": ["String"], "tags_cn": ["\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 1000003, "frontend_id": "\u9762\u8bd5\u9898 16.17", "title": "Contiguous Sequence", "title_cn": "\u8fde\u7eed\u6570\u5217", "content": "<p>You are given an array of integers (both positive and negative). Find the contiguous sequence with the largest sum. Return the sum.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> [-2,1,-3,4,-1,2,1,-5,4]\r\n<strong>Output: </strong> 6\r\n<strong>Explanation: </strong> [4,-1,2,1] has the largest sum 6.\r\n</pre>\r\n\r\n<p><strong>Follow Up: </strong></p>\r\n\r\n<p>If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.</p>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff08\u6709\u6b63\u6570\u6709\u8d1f\u6570\uff09\uff0c\u627e\u51fa\u603b\u548c\u6700\u5927\u7684\u8fde\u7eed\u6570\u5217\uff0c\u5e76\u8fd4\u56de\u603b\u548c\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> [-2,1,-3,4,-1,2,1,-5,4]\n<strong>\u8f93\u51fa\uff1a</strong> 6\n<strong>\u89e3\u91ca\uff1a</strong> \u8fde\u7eed\u5b50\u6570\u7ec4 [4,-1,2,1] \u7684\u548c\u6700\u5927\uff0c\u4e3a 6\u3002\n</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong></p>\n\n<p>\u5982\u679c\u4f60\u5df2\u7ecf\u5b9e\u73b0\u590d\u6742\u5ea6\u4e3a O(<em>n</em>) \u7684\u89e3\u6cd5\uff0c\u5c1d\u8bd5\u4f7f\u7528\u66f4\u4e3a\u7cbe\u5999\u7684\u5206\u6cbb\u6cd5\u6c42\u89e3\u3002</p>\n", "url": "", "url_cn": "https://leetcode.cn/problems/contiguous-sequence-lcci", "path": "/lcci/16.17.Contiguous%20Sequence/README_EN.md", "path_cn": "/lcci/16.17.Contiguous%20Sequence/README.md", "tags": ["Array", "Divide and Conquer", "Dynamic Programming"], "tags_cn": ["\u6570\u7ec4", "\u5206\u6cbb\u7b97\u6cd5", "\u52a8\u6001\u89c4\u5212"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100356, "frontend_id": "\u9762\u8bd5\u9898 16.16", "title": "Sub Sort", "title_cn": "\u90e8\u5206\u6392\u5e8f", "content": "<p>Given an array of integers, write a method to find indices m and n such that if you sorted&nbsp;elements m through n, the entire array would be sorted. Minimize <code>n - m</code> (that is, find the smallest such sequence).</p>\r\n\r\n<p>Return <code>[m,n]</code>. If there are no such m and n (e.g. the array is already sorted), return [-1, -1].</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> [1,2,4,7,10,11,7,12,6,7,16,18,19]\r\n<strong>Output: </strong> [3,9]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= len(array) &lt;= 1000000</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u7d22\u5f15<code>m</code>\u548c<code>n</code>\uff0c\u53ea\u8981\u5c06\u7d22\u5f15\u533a\u95f4<code>[m,n]</code>\u7684\u5143\u7d20\u6392\u597d\u5e8f\uff0c\u6574\u4e2a\u6570\u7ec4\u5c31\u662f\u6709\u5e8f\u7684\u3002\u6ce8\u610f\uff1a<code>n-m</code>\u5c3d\u91cf\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u627e\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u6700\u77ed\u5e8f\u5217\u3002\u51fd\u6570\u8fd4\u56de\u503c\u4e3a<code>[m,n]</code>\uff0c\u82e5\u4e0d\u5b58\u5728\u8fd9\u6837\u7684<code>m</code>\u548c<code>n</code>\uff08\u4f8b\u5982\u6574\u4e2a\u6570\u7ec4\u662f\u6709\u5e8f\u7684\uff09\uff0c\u8bf7\u8fd4\u56de<code>[-1,-1]</code>\u3002</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong> [1,2,4,7,10,11,7,12,6,7,16,18,19]\n<strong>\u8f93\u51fa\uff1a</strong> [3,9]\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>0 <= len(array) <= 1000000</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/sub-sort-lcci", "path": "/lcci/16.16.Sub%20Sort/README_EN.md", "path_cn": "/lcci/16.16.Sub%20Sort/README.md", "tags": ["Sort", "Array"], "tags_cn": ["\u6392\u5e8f", "\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100355, "frontend_id": "\u9762\u8bd5\u9898 16.15", "title": "Master Mind", "title_cn": "\u73e0\u7391\u5999\u7b97", "content": "<p>The Game of Master Mind is played as follows:</p>\r\n\r\n<p>The computer has four slots, and each slot will contain a ball that is red (R). yellow (Y). green (G) or blue (B). For example, the computer might have RGGB (Slot #1 is red, Slots #2 and #3 are green, Slot #4 is blue).</p>\r\n\r\n<p>You, the user, are trying to guess the solution. You might, for example, guess YRGB.</p>\r\n\r\n<p>When you guess the correct color for the correct slot, you get a &quot;hit:&#39; If you guess a color that exists but is in the wrong slot, you get a &quot;pseudo-hit:&#39; Note that a slot that is a hit can never count as a pseudo-hit.</p>\r\n\r\n<p>For example, if the actual solution is RGBY and you guess GGRR, you have one hit and one pseudo-hit. Write a method that, given a guess and a solution, returns the number of hits and pseudo-hits.</p>\r\n\r\n<p>Given a sequence of colors <code>solution</code>, and a <code>guess</code>, write a method that return the number of hits and pseudo-hit <code>answer</code>, where <code>answer[0]</code> is the number of hits and <code>answer[1]</code> is the number of pseudo-hit.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> solution=&quot;RGBY&quot;,guess=&quot;GGRR&quot;\r\n<strong>Output: </strong> [1,1]\r\n<strong>Explanation: </strong> hit once, pseudo-hit once.\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>len(solution) = len(guess) = 4</code></li>\r\n\t<li>There are only <code>&quot;R&quot;</code>,<code>&quot;G&quot;</code>,<code>&quot;B&quot;</code>,<code>&quot;Y&quot;</code> in <code>solution</code>&nbsp;and&nbsp;<code>guess</code>.</li>\r\n</ul>\r\n", "content_cn": "<p>\u73e0\u7391\u5999\u7b97\u6e38\u620f\uff08the game of master mind\uff09\u7684\u73a9\u6cd5\u5982\u4e0b\u3002</p>\n<p>\u8ba1\u7b97\u673a\u67094\u4e2a\u69fd\uff0c\u6bcf\u4e2a\u69fd\u653e\u4e00\u4e2a\u7403\uff0c\u989c\u8272\u53ef\u80fd\u662f\u7ea2\u8272\uff08R\uff09\u3001\u9ec4\u8272\uff08Y\uff09\u3001\u7eff\u8272\uff08G\uff09\u6216\u84dd\u8272\uff08B\uff09\u3002\u4f8b\u5982\uff0c\u8ba1\u7b97\u673a\u53ef\u80fd\u6709RGGB 4\u79cd\uff08\u69fd1\u4e3a\u7ea2\u8272\uff0c\u69fd2\u30013\u4e3a\u7eff\u8272\uff0c\u69fd4\u4e3a\u84dd\u8272\uff09\u3002\u4f5c\u4e3a\u7528\u6237\uff0c\u4f60\u8bd5\u56fe\u731c\u51fa\u989c\u8272\u7ec4\u5408\u3002\u6253\u4e2a\u6bd4\u65b9\uff0c\u4f60\u53ef\u80fd\u4f1a\u731cYRGB\u3002\u8981\u662f\u731c\u5bf9\u67d0\u4e2a\u69fd\u7684\u989c\u8272\uff0c\u5219\u7b97\u4e00\u6b21\u201c\u731c\u4e2d\u201d\uff1b\u8981\u662f\u53ea\u731c\u5bf9\u989c\u8272\u4f46\u69fd\u4f4d\u731c\u9519\u4e86\uff0c\u5219\u7b97\u4e00\u6b21\u201c\u4f2a\u731c\u4e2d\u201d\u3002\u6ce8\u610f\uff0c\u201c\u731c\u4e2d\u201d\u4e0d\u80fd\u7b97\u5165\u201c\u4f2a\u731c\u4e2d\u201d\u3002</p>\n<p>\u7ed9\u5b9a\u4e00\u79cd\u989c\u8272\u7ec4\u5408<code>solution</code>\u548c\u4e00\u4e2a\u731c\u6d4b<code>guess</code>\uff0c\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8fd4\u56de\u731c\u4e2d\u548c\u4f2a\u731c\u4e2d\u7684\u6b21\u6570<code>answer</code>\uff0c\u5176\u4e2d<code>answer[0]</code>\u4e3a\u731c\u4e2d\u7684\u6b21\u6570\uff0c<code>answer[1]</code>\u4e3a\u4f2a\u731c\u4e2d\u7684\u6b21\u6570\u3002</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong> solution=\"RGBY\",guess=\"GGRR\"\n<strong>\u8f93\u51fa\uff1a</strong> [1,1]\n<strong>\u89e3\u91ca\uff1a</strong> \u731c\u4e2d1\u6b21\uff0c\u4f2a\u731c\u4e2d1\u6b21\u3002\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>len(solution) = len(guess) = 4</code></li>\n<li><code>solution</code>\u548c<code>guess</code>\u4ec5\u5305\u542b<code>\"R\"</code>,<code>\"G\"</code>,<code>\"B\"</code>,<code>\"Y\"</code>\u8fd94\u79cd\u5b57\u7b26</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/master-mind-lcci", "path": "/lcci/16.15.Master%20Mind/README_EN.md", "path_cn": "/lcci/16.15.Master%20Mind/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100354, "frontend_id": "\u9762\u8bd5\u9898 16.14", "title": "Best Line", "title_cn": "\u6700\u4f73\u76f4\u7ebf", "content": "<p>Given a two-dimensional graph with points on it, find a line which passes the most number of points.</p>\r\n\r\n<p>Assume all the points that passed by the line are stored in list <code>S</code>&nbsp;sorted by their number. You need to return <code>[S[0], S[1]]</code>, that is , two points that have smallest number. If there are more than one line that passes the most number of points, choose the one that has the smallest <code>S[0].</code>&nbsp;If there are more that one line that has the same <code>S[0]</code>, choose the one that has smallest <code>S[1]</code>.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> [[0,0],[1,1],[1,0],[2,0]]\r\n<strong>Output: </strong> [0,2]\r\n<strong>Explanation: </strong> The numbers of points passed by the line are [0,2,3].\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>2 &lt;= len(Points) &lt;= 300</code></li>\r\n\t<li><code>len(Points[i]) = 2</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u53ca\u5e73\u9762\u4e0a\u7684 N \u4e2a\u70b9\u5217\u8868<code>Points</code>\uff0c\u5176\u4e2d\u7b2c<code>i</code>\u4e2a\u70b9\u7684\u5750\u6807\u4e3a<code>Points[i]=[X<sub>i</sub>,Y<sub>i</sub>]</code>\u3002\u8bf7\u627e\u51fa\u4e00\u6761\u76f4\u7ebf\uff0c\u5176\u901a\u8fc7\u7684\u70b9\u7684\u6570\u76ee\u6700\u591a\u3002</p>\n<p>\u8bbe\u7a7f\u8fc7\u6700\u591a\u70b9\u7684\u76f4\u7ebf\u6240\u7a7f\u8fc7\u7684\u5168\u90e8\u70b9\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7684\u5217\u8868\u4e3a<code>S</code>\uff0c\u4f60\u4ec5\u9700\u8fd4\u56de<code>[S[0],S[1]]</code>\u4f5c\u4e3a\u7b54\u6848\uff0c\u82e5\u6709\u591a\u6761\u76f4\u7ebf\u7a7f\u8fc7\u4e86\u76f8\u540c\u6570\u91cf\u7684\u70b9\uff0c\u5219\u9009\u62e9<code>S[0]</code>\u503c\u8f83\u5c0f\u7684\u76f4\u7ebf\u8fd4\u56de\uff0c<code>S[0]</code>\u76f8\u540c\u5219\u9009\u62e9<code>S[1]</code>\u503c\u8f83\u5c0f\u7684\u76f4\u7ebf\u8fd4\u56de\u3002</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong> [[0,0],[1,1],[1,0],[2,0]]\n<strong>\u8f93\u51fa\uff1a</strong> [0,2]\n<strong>\u89e3\u91ca\uff1a</strong> \u6240\u6c42\u76f4\u7ebf\u7a7f\u8fc7\u76843\u4e2a\u70b9\u7684\u7f16\u53f7\u4e3a[0,2,3]\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>2 <= len(Points) <= 300</code></li>\n<li><code>len(Points[i]) = 2</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/best-line-lcci", "path": "/lcci/16.14.Best%20Line/README_EN.md", "path_cn": "/lcci/16.14.Best%20Line/README.md", "tags": ["Geometry", "Hash Table"], "tags_cn": ["\u51e0\u4f55", "\u54c8\u5e0c\u8868"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100353, "frontend_id": "\u9762\u8bd5\u9898 16.13", "title": "Bisect Squares", "title_cn": "\u5e73\u5206\u6b63\u65b9\u5f62", "content": "<p>Given two squares on a two-dimensional plane, find a line that would cut these two squares in half. Assume that the top and the bottom sides of the square run parallel to the x-axis.</p>\r\n\r\n<p>Each square consists of three values,&nbsp;the coordinate of bottom left corner&nbsp;<code>[X,Y] = [square[0],square[1]]</code>, and the side length&nbsp;of the square <code>square[2]</code>. The line will intersect to the two squares in four points. Return the coordinates of two intersection points <code>[X<sub>1</sub>,Y<sub>1</sub>]</code>&nbsp;and&nbsp;<code>[X<sub>2</sub>,Y<sub>2</sub>]</code>&nbsp;that the forming segment covers the other two intersection points in format of <code>{X<sub>1</sub>,Y<sub>1</sub>,X<sub>2</sub>,Y<sub>2</sub>}</code>. If <code>X<sub>1</sub> != X<sub>2</sub></code>, there should be&nbsp;<code>X<sub>1</sub> &lt; X<sub>2</sub></code>, otherwise there should be&nbsp;<code>Y<sub>1</sub> &lt;= Y<sub>2</sub></code>.</p>\r\n\r\n<p>If there are more than one line that can cut these two squares in half, return the one that has biggest slope (slope of a line parallel to the y-axis is considered as infinity).</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\nsquare1 = {-1, -1, 2}\r\nsquare2 = {0, -1, 2}\r\n<strong>Output:</strong> {-1,0,2,0}\r\n<strong>Explanation:</strong> y = 0 is the line that can cut these two squares in half.\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>square.length == 3</code></li>\r\n\t<li><code>square[2] &gt; 0</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e24\u4e2a\u6b63\u65b9\u5f62\u53ca\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\u3002\u8bf7\u627e\u51fa\u5c06\u8fd9\u4e24\u4e2a\u6b63\u65b9\u5f62\u5206\u5272\u6210\u4e24\u534a\u7684\u4e00\u6761\u76f4\u7ebf\u3002\u5047\u8bbe\u6b63\u65b9\u5f62\u9876\u8fb9\u548c\u5e95\u8fb9\u4e0e x \u8f74\u5e73\u884c\u3002</p>\n\n<p>\u6bcf\u4e2a\u6b63\u65b9\u5f62\u7684\u6570\u636e<code>square</code>\u5305\u542b3\u4e2a\u6570\u503c\uff0c\u6b63\u65b9\u5f62\u7684\u5de6\u4e0b\u9876\u70b9\u5750\u6807<code>[X,Y] = [square[0],square[1]]</code>\uff0c\u4ee5\u53ca\u6b63\u65b9\u5f62\u7684\u8fb9\u957f<code>square[2]</code>\u3002\u6240\u6c42\u76f4\u7ebf\u7a7f\u8fc7\u4e24\u4e2a\u6b63\u65b9\u5f62\u4f1a\u5f62\u62104\u4e2a\u4ea4\u70b9\uff0c\u8bf7\u8fd4\u56de4\u4e2a\u4ea4\u70b9\u5f62\u6210\u7ebf\u6bb5\u7684\u4e24\u7aef\u70b9\u5750\u6807\uff08\u4e24\u4e2a\u7aef\u70b9\u5373\u4e3a4\u4e2a\u4ea4\u70b9\u4e2d\u8ddd\u79bb\u6700\u8fdc\u76842\u4e2a\u70b9\uff0c\u8fd92\u4e2a\u70b9\u6240\u8fde\u6210\u7684\u7ebf\u6bb5\u4e00\u5b9a\u4f1a\u7a7f\u8fc7\u53e6\u59162\u4e2a\u4ea4\u70b9\uff09\u30022\u4e2a\u7aef\u70b9\u5750\u6807<code>[X<sub>1</sub>,Y<sub>1</sub>]</code>\u548c<code>[X<sub>2</sub>,Y<sub>2</sub>]</code>\u7684\u8fd4\u56de\u683c\u5f0f\u4e3a<code>{X<sub>1</sub>,Y<sub>1</sub>,X<sub>2</sub>,Y<sub>2</sub>}</code>\uff0c\u8981\u6c42\u82e5<code>X<sub>1</sub> != X<sub>2</sub></code>\uff0c\u9700\u4fdd\u8bc1<code>X<sub>1</sub> &lt; X<sub>2</sub></code>\uff0c\u5426\u5219\u9700\u4fdd\u8bc1<code>Y<sub>1</sub> &lt;= Y<sub>2</sub></code>\u3002</p>\n\n<p>\u82e5\u540c\u65f6\u6709\u591a\u6761\u76f4\u7ebf\u6ee1\u8db3\u8981\u6c42\uff0c\u5219\u9009\u62e9\u659c\u7387\u6700\u5927\u7684\u4e00\u6761\u8ba1\u7b97\u5e76\u8fd4\u56de\uff08\u4e0eY\u8f74\u5e73\u884c\u7684\u76f4\u7ebf\u89c6\u4e3a\u659c\u7387\u65e0\u7a77\u5927\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\nsquare1 = {-1, -1, 2}\nsquare2 = {0, -1, 2}\n<strong>\u8f93\u51fa\uff1a</strong> {-1,0,2,0}\n<strong>\u89e3\u91ca\uff1a</strong> \u76f4\u7ebf y = 0 \u80fd\u5c06\u4e24\u4e2a\u6b63\u65b9\u5f62\u540c\u65f6\u5206\u4e3a\u7b49\u9762\u79ef\u7684\u4e24\u90e8\u5206\uff0c\u8fd4\u56de\u7684\u4e24\u7ebf\u6bb5\u7aef\u70b9\u4e3a[-1,0]\u548c[2,0]\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>square.length == 3</code></li>\n\t<li><code>square[2] &gt; 0</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/bisect-squares-lcci", "path": "/lcci/16.13.Bisect%20Squares/README_EN.md", "path_cn": "/lcci/16.13.Bisect%20Squares/README.md", "tags": ["Geometry"], "tags_cn": ["\u51e0\u4f55"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100352, "frontend_id": "\u9762\u8bd5\u9898 16.11", "title": "Diving Board", "title_cn": "\u8df3\u6c34\u677f", "content": "<p>You are building a diving board by placing a bunch of planks of wood end-to-end. There are two types of planks, one of length <code>shorter</code> and one of length <code>longer</code>. You must use exactly <code>K</code> planks of wood. Write a method to generate all possible lengths for the diving board.</p>\r\n\r\n<p>return all lengths in non-decreasing order.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\nshorter = 1\r\nlonger = 2\r\nk = 3\r\n<strong>Output: </strong> {3,4,5,6}\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li>0 &lt; shorter &lt;= longer</li>\r\n\t<li>0 &lt;= k &lt;= 100000</li>\r\n</ul>\r\n", "content_cn": "<p>\u4f60\u6b63\u5728\u4f7f\u7528\u4e00\u5806\u6728\u677f\u5efa\u9020\u8df3\u6c34\u677f\u3002\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u6728\u677f\uff0c\u5176\u4e2d\u957f\u5ea6\u8f83\u77ed\u7684\u6728\u677f\u957f\u5ea6\u4e3a<code>shorter</code>\uff0c\u957f\u5ea6\u8f83\u957f\u7684\u6728\u677f\u957f\u5ea6\u4e3a<code>longer</code>\u3002\u4f60\u5fc5\u987b\u6b63\u597d\u4f7f\u7528<code>k</code>\u5757\u6728\u677f\u3002\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u751f\u6210\u8df3\u6c34\u677f\u6240\u6709\u53ef\u80fd\u7684\u957f\u5ea6\u3002</p>\n<p>\u8fd4\u56de\u7684\u957f\u5ea6\u9700\u8981\u4ece\u5c0f\u5230\u5927\u6392\u5217\u3002</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong>\nshorter = 1\nlonger = 2\nk = 3\n<strong>\u8f93\u51fa\uff1a</strong> {3,4,5,6}\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li>0 < shorter <= longer</li>\n<li>0 <= k <= 100000</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/diving-board-lcci", "path": "/lcci/16.11.Diving%20Board/README_EN.md", "path_cn": "/lcci/16.11.Diving%20Board/README.md", "tags": ["Recursion", "Memoization"], "tags_cn": ["\u9012\u5f52", "\u8bb0\u5fc6\u5316"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100351, "frontend_id": "\u9762\u8bd5\u9898 16.10", "title": "Living People", "title_cn": "\u751f\u5b58\u4eba\u6570", "content": "<p>Given a list of people with their birth and death years, implement a method to compute the year with the most number of people alive. You may assume that all people were born between 1900 and 2000 (inclusive). If a person was alive during any portion of that year, they should be included in that year&#39;s count. For example, Person (birth= 1908, death= 1909) is included in the counts for both 1908 and 1909.</p>\r\n\r\n<p>If there are more than one years&nbsp;that have the most number of people alive, return the smallest one.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\nbirth = {1900, 1901, 1950}\r\ndeath = {1948, 1951, 2000}\r\n<strong>Output: </strong> 1901\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt; birth.length == death.length &lt;= 10000</code></li>\r\n\t<li><code>birth[i] &lt;= death[i]</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9aN\u4e2a\u4eba\u7684\u51fa\u751f\u5e74\u4efd\u548c\u6b7b\u4ea1\u5e74\u4efd\uff0c\u7b2c<code>i</code>\u4e2a\u4eba\u7684\u51fa\u751f\u5e74\u4efd\u4e3a<code>birth[i]</code>\uff0c\u6b7b\u4ea1\u5e74\u4efd\u4e3a<code>death[i]</code>\uff0c\u5b9e\u73b0\u4e00\u4e2a\u65b9\u6cd5\u4ee5\u8ba1\u7b97\u751f\u5b58\u4eba\u6570\u6700\u591a\u7684\u5e74\u4efd\u3002</p>\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u4eba\u90fd\u51fa\u751f\u4e8e1900\u5e74\u81f32000\u5e74\uff08\u542b1900\u548c2000\uff09\u4e4b\u95f4\u3002\u5982\u679c\u4e00\u4e2a\u4eba\u5728\u67d0\u4e00\u5e74\u7684\u4efb\u610f\u65f6\u671f\u90fd\u5904\u4e8e\u751f\u5b58\u72b6\u6001\uff0c\u90a3\u4e48\u4ed6\u4eec\u5e94\u8be5\u88ab\u7eb3\u5165\u90a3\u4e00\u5e74\u7684\u7edf\u8ba1\u4e2d\u3002\u4f8b\u5982\uff0c\u751f\u4e8e1908\u5e74\u3001\u6b7b\u4e8e1909\u5e74\u7684\u4eba\u5e94\u5f53\u88ab\u5217\u51651908\u5e74\u548c1909\u5e74\u7684\u8ba1\u6570\u3002</p>\n<p>\u5982\u679c\u6709\u591a\u4e2a\u5e74\u4efd\u751f\u5b58\u4eba\u6570\u76f8\u540c\u4e14\u5747\u4e3a\u6700\u5927\u503c\uff0c\u8f93\u51fa\u5176\u4e2d\u6700\u5c0f\u7684\u5e74\u4efd\u3002</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong>\nbirth = {1900, 1901, 1950}\ndeath = {1948, 1951, 2000}\n<strong>\u8f93\u51fa\uff1a</strong> 1901\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>0 < birth.length == death.length <= 10000</code></li>\n<li><code>birth[i] <= death[i]</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/living-people-lcci", "path": "/lcci/16.10.Living%20People/README_EN.md", "path_cn": "/lcci/16.10.Living%20People/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100350, "frontend_id": "\u9762\u8bd5\u9898 16.09", "title": "Operations", "title_cn": "\u8fd0\u7b97", "content": "<p>rite methods to implement the multiply, subtract, and divide operations for integers. The results of all of these are integers. Use only the add operator.</p>\r\n\r\n<p>You should implement following methods:</p>\r\n\r\n<ul>\r\n\t<li><code>Operations()</code>&nbsp; constructor</li>\r\n\t<li><code>minus(a, b)</code>&nbsp; Subtraction, returns&nbsp;<code>a - b</code></li>\r\n\t<li><code>multiply(a, b)</code>&nbsp; Multiplication, returns&nbsp;<code>a * b</code></li>\r\n\t<li><code>divide(a, b)</code>&nbsp; Division, returns&nbsp;<code>a / b</code></li>\r\n</ul>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\nOperations operations = new Operations();\r\noperations.minus(1, 2); //returns -1\r\noperations.multiply(3, 4); //returns 12\r\noperations.divide(5, -2); //returns -2\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li>You can assume inputs are always valid, that is, e.g., denominator will not be 0 in division.</li>\r\n\t<li>The number of calls will not exceed 1000.</li>\r\n</ul>\r\n", "content_cn": "<p>\u8bf7\u5b9e\u73b0\u6574\u6570\u6570\u5b57\u7684\u4e58\u6cd5\u3001\u51cf\u6cd5\u548c\u9664\u6cd5\u8fd0\u7b97\uff0c\u8fd0\u7b97\u7ed3\u679c\u5747\u4e3a\u6574\u6570\u6570\u5b57\uff0c\u7a0b\u5e8f\u4e2d\u53ea\u5141\u8bb8\u4f7f\u7528\u52a0\u6cd5\u8fd0\u7b97\u7b26\u548c\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u5141\u8bb8\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u6b63\u8d1f\u5e38\u6570\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528\u4f4d\u8fd0\u7b97\u3002</p>\n<p>\u4f60\u7684\u5b9e\u73b0\u5e94\u8be5\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a</p>\n<ul>\n<li><code>Operations()</code> \u6784\u9020\u51fd\u6570</li>\n<li><code>minus(a, b)</code> \u51cf\u6cd5\uff0c\u8fd4\u56de<code>a - b</code></li>\n<li><code>multiply(a, b)</code> \u4e58\u6cd5\uff0c\u8fd4\u56de<code>a * b</code></li>\n<li><code>divide(a, b)</code> \u9664\u6cd5\uff0c\u8fd4\u56de<code>a / b</code></li>\n</ul>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre>Operations operations = new Operations();\noperations.minus(1, 2); //\u8fd4\u56de-1\noperations.multiply(3, 4); //\u8fd4\u56de12\noperations.divide(5, -2); //\u8fd4\u56de-2\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li>\u4f60\u53ef\u4ee5\u5047\u8bbe\u51fd\u6570\u8f93\u5165\u4e00\u5b9a\u662f\u6709\u6548\u7684\uff0c\u4f8b\u5982\u4e0d\u4f1a\u51fa\u73b0\u9664\u6cd5\u5206\u6bcd\u4e3a0\u7684\u60c5\u51b5</li>\n<li>\u5355\u4e2a\u7528\u4f8b\u7684\u51fd\u6570\u8c03\u7528\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc71000\u6b21</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/operations-lcci", "path": "/lcci/16.09.Operations/README_EN.md", "path_cn": "/lcci/16.09.Operations/README.md", "tags": ["Design"], "tags_cn": ["\u8bbe\u8ba1"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100349, "frontend_id": "\u9762\u8bd5\u9898 16.07", "title": "Maximum", "title_cn": "\u6700\u5927\u6570\u503c", "content": "<p>Write a method that finds the maximum of two numbers. You should not use if-else or any other comparison operator.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> a = 1, b = 2\r\n<strong>Output: </strong> 2\r\n</pre>\r\n", "content_cn": "<p>\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u627e\u51fa\u4e24\u4e2a\u6570\u5b57<code>a</code>\u548c<code>b</code>\u4e2d\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u3002\u4e0d\u5f97\u4f7f\u7528if-else\u6216\u5176\u4ed6\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3002</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong> a = 1, b = 2\n<strong>\u8f93\u51fa\uff1a</strong> 2\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/maximum-lcci", "path": "/lcci/16.07.Maximum/README_EN.md", "path_cn": "/lcci/16.07.Maximum/README.md", "tags": ["Bit Manipulation", "Math"], "tags_cn": ["\u4f4d\u8fd0\u7b97", "\u6570\u5b66"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100348, "frontend_id": "\u9762\u8bd5\u9898 08.08", "title": "Permutation II", "title_cn": "\u6709\u91cd\u590d\u5b57\u7b26\u4e32\u7684\u6392\u5217\u7ec4\u5408", "content": "<p>Write a method to compute all permutations of a string whose charac&shy; ters are not necessarily unique. The list of permutations should not have duplicates.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: S = &quot;qqe&quot;\r\n<strong> Output</strong>: [&quot;eqq&quot;,&quot;qeq&quot;,&quot;qqe&quot;]\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: S = &quot;ab&quot;\r\n<strong> Output</strong>: [&quot;ab&quot;, &quot;ba&quot;]\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>All characters are English letters.</li>\r\n\t<li><code>1 &lt;= S.length &lt;= 9</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u6709\u91cd\u590d\u5b57\u7b26\u4e32\u7684\u6392\u5217\u7ec4\u5408\u3002\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\uff0c\u8ba1\u7b97\u67d0\u5b57\u7b26\u4e32\u7684\u6240\u6709\u6392\u5217\u7ec4\u5408\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1aS = &quot;qqe&quot;\n<strong> \u8f93\u51fa</strong>\uff1a[&quot;eqq&quot;,&quot;qeq&quot;,&quot;qqe&quot;]\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1aS = &quot;ab&quot;\n<strong> \u8f93\u51fa</strong>\uff1a[&quot;ab&quot;, &quot;ba&quot;]\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>\u5b57\u7b26\u90fd\u662f\u82f1\u6587\u5b57\u6bcd\u3002</li>\n\t<li>\u5b57\u7b26\u4e32\u957f\u5ea6\u5728[1, 9]\u4e4b\u95f4\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/permutation-ii-lcci", "path": "/lcci/08.08.Permutation%20II/README_EN.md", "path_cn": "/lcci/08.08.Permutation%20II/README.md", "tags": ["Backtracking"], "tags_cn": ["\u56de\u6eaf\u7b97\u6cd5"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100262, "frontend_id": "\u9762\u8bd5\u9898 16.06", "title": "Smallest Difference", "title_cn": "\u6700\u5c0f\u5dee", "content": "<p>Given two arrays of integers, compute the pair of values (one value in each array) with the smallest (non-negative) difference. Return the difference.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>{1, 3, 15, 11, 2}, {23, 127, 235, 19, 8}\r\n<strong>Output: </strong> 3, the pair (11, 8)\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= a.length, b.length &lt;= 100000</code></li>\r\n\t<li><code>-2147483648 &lt;= a[i], b[i] &lt;= 2147483647</code></li>\r\n\t<li>The result is in the range [-2147483648, 2147483647]</li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\u6570\u7ec4<code>a</code>\u548c<code>b</code>\uff0c\u8ba1\u7b97\u5177\u6709\u6700\u5c0f\u5dee\u7edd\u5bf9\u503c\u7684\u4e00\u5bf9\u6570\u503c\uff08\u6bcf\u4e2a\u6570\u7ec4\u4e2d\u53d6\u4e00\u4e2a\u503c\uff09\uff0c\u5e76\u8fd4\u56de\u8be5\u5bf9\u6570\u503c\u7684\u5dee</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong>{1, 3, 15, 11, 2}, {23, 127, 235, 19, 8}\n<strong>\u8f93\u51fa\uff1a</strong> 3\uff0c\u5373\u6570\u503c\u5bf9(11, 8)\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>1 <= a.length, b.length <= 100000</code></li>\n<li><code>-2147483648 <= a[i], b[i] <= 2147483647</code></li>\n<li>\u6b63\u786e\u7ed3\u679c\u5728\u533a\u95f4[-2147483648, 2147483647]\u5185</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/smallest-difference-lcci", "path": "/lcci/16.06.Smallest%20Difference/README_EN.md", "path_cn": "/lcci/16.06.Smallest%20Difference/README.md", "tags": ["Array", "Two Pointers"], "tags_cn": ["\u6570\u7ec4", "\u53cc\u6307\u9488"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100261, "frontend_id": "\u9762\u8bd5\u9898 16.04", "title": "Tic-Tac-Toe", "title_cn": "\u4e95\u5b57\u6e38\u620f", "content": "<p>Design an algorithm to figure out if someone has won a game of tic-tac-toe.&nbsp;Input is a string array&nbsp;of size N x N, including characters &quot; &quot;, &quot;X&quot; and &quot;O&quot;, where &quot; &quot; represents a empty grid.</p>\r\n\r\n<p>The rules of tic-tac-toe are as follows:</p>\r\n\r\n<ul>\r\n\t<li>Players place characters into an empty grid(&quot; &quot;) in turn.</li>\r\n\t<li>The first player always place character &quot;O&quot;, and the second one place &quot;X&quot;.</li>\r\n\t<li>Players are only allowed to place characters in empty grid. Replacing a character is not allowed.</li>\r\n\t<li>If there is any row, column or diagonal filled with N&nbsp;same characters, the game ends. The player who place the last charater wins.</li>\r\n\t<li>When there is no empty grid, the game ends.</li>\r\n\t<li>If the game ends, players cannot place any character further.</li>\r\n</ul>\r\n\r\n<p>If there is any winner, return the character that the winner used. If there&#39;s a draw, return &quot;Draw&quot;. If the game doesn&#39;t end and there is no winner, return &quot;Pending&quot;.</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> board = [&quot;O X&quot;,&quot; XO&quot;,&quot;X O&quot;]\r\n<strong>Output: </strong> &quot;X&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> board = [&quot;OOX&quot;,&quot;XXO&quot;,&quot;OXO&quot;]\r\n<strong>Output: </strong> &quot;Draw&quot;\r\n<strong>Explanation: </strong> no player wins and no empty grid left\r\n</pre>\r\n\r\n<p><strong>Example 3: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong> board = [&quot;OOX&quot;,&quot;XXO&quot;,&quot;OX &quot;]\r\n<strong>Output: </strong> &quot;Pending&quot;\r\n<strong>Explanation: </strong> no player wins but there is still a empty grid\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= board.length == board[i].length &lt;= 100</code></li>\r\n\t<li>Input follows the rules.</li>\r\n</ul>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5224\u65ad\u73a9\u5bb6\u662f\u5426\u8d62\u4e86\u4e95\u5b57\u6e38\u620f\u3002\u8f93\u5165\u662f\u4e00\u4e2a N x N \u7684\u6570\u7ec4\u68cb\u76d8\uff0c\u7531\u5b57\u7b26&quot; &quot;\uff0c&quot;X&quot;\u548c&quot;O&quot;\u7ec4\u6210\uff0c\u5176\u4e2d\u5b57\u7b26&quot; &quot;\u4ee3\u8868\u4e00\u4e2a\u7a7a\u4f4d\u3002</p>\n\n<p>\u4ee5\u4e0b\u662f\u4e95\u5b57\u6e38\u620f\u7684\u89c4\u5219\uff1a</p>\n\n<ul>\n\t<li>\u73a9\u5bb6\u8f6e\u6d41\u5c06\u5b57\u7b26\u653e\u5165\u7a7a\u4f4d\uff08&quot; &quot;\uff09\u4e2d\u3002</li>\n\t<li>\u7b2c\u4e00\u4e2a\u73a9\u5bb6\u603b\u662f\u653e\u5b57\u7b26&quot;O&quot;\uff0c\u4e14\u7b2c\u4e8c\u4e2a\u73a9\u5bb6\u603b\u662f\u653e\u5b57\u7b26&quot;X&quot;\u3002</li>\n\t<li>&quot;X&quot;\u548c&quot;O&quot;\u53ea\u5141\u8bb8\u653e\u7f6e\u5728\u7a7a\u4f4d\u4e2d\uff0c\u4e0d\u5141\u8bb8\u5bf9\u5df2\u653e\u6709\u5b57\u7b26\u7684\u4f4d\u7f6e\u8fdb\u884c\u586b\u5145\u3002</li>\n\t<li>\u5f53\u6709N\u4e2a\u76f8\u540c\uff08\u4e14\u975e\u7a7a\uff09\u7684\u5b57\u7b26\u586b\u5145\u4efb\u4f55\u884c\u3001\u5217\u6216\u5bf9\u89d2\u7ebf\u65f6\uff0c\u6e38\u620f\u7ed3\u675f\uff0c\u5bf9\u5e94\u8be5\u5b57\u7b26\u7684\u73a9\u5bb6\u83b7\u80dc\u3002</li>\n\t<li>\u5f53\u6240\u6709\u4f4d\u7f6e\u975e\u7a7a\u65f6\uff0c\u4e5f\u7b97\u4e3a\u6e38\u620f\u7ed3\u675f\u3002</li>\n\t<li>\u5982\u679c\u6e38\u620f\u7ed3\u675f\uff0c\u73a9\u5bb6\u4e0d\u5141\u8bb8\u518d\u653e\u7f6e\u5b57\u7b26\u3002</li>\n</ul>\n\n<p>\u5982\u679c\u6e38\u620f\u5b58\u5728\u83b7\u80dc\u8005\uff0c\u5c31\u8fd4\u56de\u8be5\u6e38\u620f\u7684\u83b7\u80dc\u8005\u4f7f\u7528\u7684\u5b57\u7b26\uff08&quot;X&quot;\u6216&quot;O&quot;\uff09\uff1b\u5982\u679c\u6e38\u620f\u4ee5\u5e73\u5c40\u7ed3\u675f\uff0c\u5219\u8fd4\u56de &quot;Draw&quot;\uff1b\u5982\u679c\u4ecd\u4f1a\u6709\u884c\u52a8\uff08\u6e38\u620f\u672a\u7ed3\u675f\uff09\uff0c\u5219\u8fd4\u56de &quot;Pending&quot;\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> board = [&quot;O X&quot;,&quot; XO&quot;,&quot;X O&quot;]\n<strong>\u8f93\u51fa\uff1a</strong> &quot;X&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> board = [&quot;OOX&quot;,&quot;XXO&quot;,&quot;OXO&quot;]\n<strong>\u8f93\u51fa\uff1a</strong> &quot;Draw&quot;\n<strong>\u89e3\u91ca\uff1a</strong> \u6ca1\u6709\u73a9\u5bb6\u83b7\u80dc\u4e14\u4e0d\u5b58\u5728\u7a7a\u4f4d\n</pre>\n\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong> board = [&quot;OOX&quot;,&quot;XXO&quot;,&quot;OX &quot;]\n<strong>\u8f93\u51fa\uff1a</strong> &quot;Pending&quot;\n<strong>\u89e3\u91ca\uff1a</strong> \u6ca1\u6709\u73a9\u5bb6\u83b7\u80dc\u4e14\u4ecd\u5b58\u5728\u7a7a\u4f4d\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= board.length == board[i].length &lt;= 100</code></li>\n\t<li>\u8f93\u5165\u4e00\u5b9a\u9075\u5faa\u4e95\u5b57\u68cb\u89c4\u5219</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/tic-tac-toe-lcci", "path": "/lcci/16.04.Tic-Tac-Toe/README_EN.md", "path_cn": "/lcci/16.04.Tic-Tac-Toe/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100260, "frontend_id": "\u9762\u8bd5\u9898 16.03", "title": "Intersection", "title_cn": "\u4ea4\u70b9", "content": "<p>Given two straight line segments (represented as a start point and an end point), compute the point of intersection, if any. If there&#39;s no intersection, return an empty array.</p>\r\nThe absolute error should not exceed 10^-6. If there are more than one intersections, return the one with smallest X axis value. If there are more than one intersections that have same X axis value, return the one with smallest Y axis value.\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\nline1 = {0, 0}, {1, 0}\r\nline2 = {1, 1}, {0, -1}\r\n<strong>Output: </strong> {0.5, 0}\r\n</pre>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\nline1 = {0, 0}, {3, 3}\r\nline2 = {1, 1}, {2, 2}\r\n<strong>Output: </strong> {1, 1}\r\n</pre>\r\n\r\n<p><strong>Example 3: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\nline1 = {0, 0}, {1, 1}\r\nline2 = {1, 0}, {2, 1}\r\n<strong>Output: </strong> {}  (no intersection)\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li>The absolute value of coordinate value will not exceed 2^7.</li>\r\n\t<li>All coordinates are valid 2D coordinates.</li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e24\u6761\u7ebf\u6bb5\uff08\u8868\u793a\u4e3a\u8d77\u70b9<code>start = {X1, Y1}</code>\u548c\u7ec8\u70b9<code>end = {X2, Y2}</code>\uff09\uff0c\u5982\u679c\u5b83\u4eec\u6709\u4ea4\u70b9\uff0c\u8bf7\u8ba1\u7b97\u5176\u4ea4\u70b9\uff0c\u6ca1\u6709\u4ea4\u70b9\u5219\u8fd4\u56de\u7a7a\u503c\u3002</p>\n</p>\u8981\u6c42\u6d6e\u70b9\u578b\u8bef\u5dee\u4e0d\u8d85\u8fc7<code>10^-6</code>\u3002\u82e5\u6709\u591a\u4e2a\u4ea4\u70b9\uff08\u7ebf\u6bb5\u91cd\u53e0\uff09\u5219\u8fd4\u56deX\u503c\u6700\u5c0f\u7684\u70b9\uff0cX\u5750\u6807\u76f8\u540c\u5219\u8fd4\u56deY\u503c\u6700\u5c0f\u7684\u70b9\u3002</p>\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong>\nline1 = {0, 0}, {1, 0}\nline2 = {1, 1}, {0, -1}\n<strong>\u8f93\u51fa\uff1a</strong> {0.5, 0}\n</pre>\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong>\nline1 = {0, 0}, {3, 3}\nline2 = {1, 1}, {2, 2}\n<strong>\u8f93\u51fa\uff1a</strong> {1, 1}\n</pre>\n<p><strong>\u793a\u4f8b 3\uff1a</strong></p>\n<pre><strong>\u8f93\u5165\uff1a</strong>\nline1 = {0, 0}, {1, 1}\nline2 = {1, 0}, {2, 1}\n<strong>\u8f93\u51fa\uff1a</strong> {}\uff0c\u4e24\u6761\u7ebf\u6bb5\u6ca1\u6709\u4ea4\u70b9\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li>\u5750\u6807\u7edd\u5bf9\u503c\u4e0d\u4f1a\u8d85\u8fc72^7</li>\n<li>\u8f93\u5165\u7684\u5750\u6807\u5747\u662f\u6709\u6548\u7684\u4e8c\u7ef4\u5750\u6807</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/intersection-lcci", "path": "/lcci/16.03.Intersection/README_EN.md", "path_cn": "/lcci/16.03.Intersection/README.md", "tags": ["Geometry", "Math"], "tags_cn": ["\u51e0\u4f55", "\u6570\u5b66"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 100259, "frontend_id": "\u9762\u8bd5\u9898 16.02", "title": "Words Frequency", "title_cn": "\u5355\u8bcd\u9891\u7387", "content": "<p>Design a method to find the frequency of occurrences of any given word in a book. What if we were running this algorithm multiple times?</p>\r\n\r\n<p>You should implement following methods:</p>\r\n\r\n<ul>\r\n\t<li><code>WordsFrequency(book)</code> constructor, parameter is a array of strings, representing the book.</li>\r\n\t<li><code>get(word)</code>&nbsp;get the frequency of <code>word</code> in the book.&nbsp;</li>\r\n</ul>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\nWordsFrequency wordsFrequency = new WordsFrequency({&quot;i&quot;, &quot;have&quot;, &quot;an&quot;, &quot;apple&quot;, &quot;he&quot;, &quot;have&quot;, &quot;a&quot;, &quot;pen&quot;});\r\nwordsFrequency.get(&quot;you&quot;); //returns 0\uff0c&quot;you&quot; is not in the book\r\nwordsFrequency.get(&quot;have&quot;); //returns 2\uff0c&quot;have&quot; occurs twice in the book\r\nwordsFrequency.get(&quot;an&quot;); //returns 1\r\nwordsFrequency.get(&quot;apple&quot;); //returns 1\r\nwordsFrequency.get(&quot;pen&quot;); //returns 1\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>There are only lowercase letters in book[i].</code></li>\r\n\t<li><code>1 &lt;= book.length &lt;= 100000</code></li>\r\n\t<li><code>1 &lt;= book[i].length &lt;= 10</code></li>\r\n\t<li><code>get</code>&nbsp;function will not be called more than&nbsp;100000 times.</li>\r\n</ul>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u4e00\u4e2a\u65b9\u6cd5\uff0c\u627e\u51fa\u4efb\u610f\u6307\u5b9a\u5355\u8bcd\u5728\u4e00\u672c\u4e66\u4e2d\u7684\u51fa\u73b0\u9891\u7387\u3002</p>\n<p>\u4f60\u7684\u5b9e\u73b0\u5e94\u8be5\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a</p>\n<ul>\n<li><code>WordsFrequency(book)</code>\u6784\u9020\u51fd\u6570\uff0c\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6570\u7ec4\u6784\u6210\u7684\u4e00\u672c\u4e66</li>\n<li><code>get(word)</code>\u67e5\u8be2\u6307\u5b9a\u5355\u8bcd\u5728\u6570\u4e2d\u51fa\u73b0\u7684\u9891\u7387</li>\n</ul>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre>WordsFrequency wordsFrequency = new WordsFrequency({\"i\", \"have\", \"an\", \"apple\", \"he\", \"have\", \"a\", \"pen\"});\nwordsFrequency.get(\"you\"); //\u8fd4\u56de0\uff0c\"you\"\u6ca1\u6709\u51fa\u73b0\u8fc7\nwordsFrequency.get(\"have\"); //\u8fd4\u56de2\uff0c\"have\"\u51fa\u73b02\u6b21\nwordsFrequency.get(\"an\"); //\u8fd4\u56de1\nwordsFrequency.get(\"apple\"); //\u8fd4\u56de1\nwordsFrequency.get(\"pen\"); //\u8fd4\u56de1\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>book[i]</code>\u4e2d\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd</li>\n<li><code>1 <= book.length <= 100000</code></li>\n<li><code>1 <= book[i].length <= 10</code></li>\n<li><code>get</code>\u51fd\u6570\u7684\u8c03\u7528\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7100000</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/words-frequency-lcci", "path": "/lcci/16.02.Words%20Frequency/README_EN.md", "path_cn": "/lcci/16.02.Words%20Frequency/README.md", "tags": ["Design", "Hash Table"], "tags_cn": ["\u8bbe\u8ba1", "\u54c8\u5e0c\u8868"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100258, "frontend_id": "\u9762\u8bd5\u9898 16.01", "title": "Swap Numbers", "title_cn": "\u4ea4\u6362\u6570\u5b57", "content": "<p>Write a function to swap a number in place (that is, without temporary vari&shy; ables).</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> numbers = [1,2]\r\n<strong>Output:</strong> [2,1]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>numbers.length == 2</code></li>\r\n</ul>\r\n", "content_cn": "<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4e0d\u7528\u4e34\u65f6\u53d8\u91cf\uff0c\u76f4\u63a5\u4ea4\u6362<code>numbers = [a, b]</code>\u4e2d<code>a</code>\u4e0e<code>b</code>\u7684\u503c\u3002</p>\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n<pre><strong>\u8f93\u5165:</strong> numbers = [1,2]\n<strong>\u8f93\u51fa:</strong> [2,1]\n</pre>\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n<ul>\n<li><code>numbers.length == 2</code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/swap-numbers-lcci", "path": "/lcci/16.01.Swap%20Numbers/README_EN.md", "path_cn": "/lcci/16.01.Swap%20Numbers/README.md", "tags": ["Bit Manipulation", "Math"], "tags_cn": ["\u4f4d\u8fd0\u7b97", "\u6570\u5b66"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100242, "frontend_id": "\u9762\u8bd5\u9898 10.05", "title": "Sparse Array Search", "title_cn": "\u7a00\u758f\u6570\u7ec4\u641c\u7d22", "content": "<p>Given a sorted array of strings that is interspersed with empty strings, write a method to find the location of a given string.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: words = [&quot;at&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;ball&quot;, &quot;&quot;, &quot;&quot;, &quot;car&quot;, &quot;&quot;, &quot;&quot;,&quot;dad&quot;, &quot;&quot;, &quot;&quot;], s = &quot;ta&quot;\r\n<strong> Output</strong>: -1\r\n<strong> Explanation</strong>: Return -1 if <code>s</code> is not in <code>words</code>.\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: words = [&quot;at&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;ball&quot;, &quot;&quot;, &quot;&quot;, &quot;car&quot;, &quot;&quot;, &quot;&quot;,&quot;dad&quot;, &quot;&quot;, &quot;&quot;], s = &quot;ball&quot;\r\n<strong> Output</strong>: 4\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= words.length &lt;= 1000000</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u7a00\u758f\u6570\u7ec4\u641c\u7d22\u3002\u6709\u4e2a\u6392\u597d\u5e8f\u7684\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5176\u4e2d\u6563\u5e03\u7740\u4e00\u4e9b\u7a7a\u5b57\u7b26\u4e32\uff0c\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\uff0c\u627e\u51fa\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>: words = [&quot;at&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;ball&quot;, &quot;&quot;, &quot;&quot;, &quot;car&quot;, &quot;&quot;, &quot;&quot;,&quot;dad&quot;, &quot;&quot;, &quot;&quot;], s = &quot;ta&quot;\n<strong> \u8f93\u51fa</strong>\uff1a-1\n<strong> \u8bf4\u660e</strong>: \u4e0d\u5b58\u5728\u8fd4\u56de-1\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1awords = [&quot;at&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;ball&quot;, &quot;&quot;, &quot;&quot;, &quot;car&quot;, &quot;&quot;, &quot;&quot;,&quot;dad&quot;, &quot;&quot;, &quot;&quot;], s = &quot;ball&quot;\n<strong> \u8f93\u51fa</strong>\uff1a4\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>words\u7684\u957f\u5ea6\u5728[1, 1000000]\u4e4b\u95f4</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/sparse-array-search-lcci", "path": "/lcci/10.05.Sparse%20Array%20Search/README_EN.md", "path_cn": "/lcci/10.05.Sparse%20Array%20Search/README.md", "tags": ["Binary Search"], "tags_cn": ["\u4e8c\u5206\u67e5\u627e"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100241, "frontend_id": "\u9762\u8bd5\u9898 08.07", "title": "Permutation I", "title_cn": "\u65e0\u91cd\u590d\u5b57\u7b26\u4e32\u7684\u6392\u5217\u7ec4\u5408", "content": "<p>Write a method to compute all permutations of a string of unique characters.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: S = &quot;qwe&quot;\r\n<strong> Output</strong>: [&quot;qwe&quot;, &quot;qew&quot;, &quot;wqe&quot;, &quot;weq&quot;, &quot;ewq&quot;, &quot;eqw&quot;]\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: S = &quot;ab&quot;\r\n<strong> Output</strong>: [&quot;ab&quot;, &quot;ba&quot;]\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>All charaters are English letters.</li>\r\n\t<li><code>1 &lt;= S.length &lt;= 9</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u65e0\u91cd\u590d\u5b57\u7b26\u4e32\u7684\u6392\u5217\u7ec4\u5408\u3002\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\uff0c\u8ba1\u7b97\u67d0\u5b57\u7b26\u4e32\u7684\u6240\u6709\u6392\u5217\u7ec4\u5408\uff0c\u5b57\u7b26\u4e32\u6bcf\u4e2a\u5b57\u7b26\u5747\u4e0d\u76f8\u540c\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1aS = \"qwe\"\n<strong> \u8f93\u51fa</strong>\uff1a[\"qwe\", \"qew\", \"wqe\", \"weq\", \"ewq\", \"eqw\"]\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1aS = \"ab\"\n<strong> \u8f93\u51fa</strong>\uff1a[\"ab\", \"ba\"]\n</pre>\n\n<p> <strong>\u63d0\u793a:</strong></p>\n\n<ol>\n<li>\u5b57\u7b26\u90fd\u662f\u82f1\u6587\u5b57\u6bcd\u3002</li>\n<li>\u5b57\u7b26\u4e32\u957f\u5ea6\u5728[1, 9]\u4e4b\u95f4\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/permutation-i-lcci", "path": "/lcci/08.07.Permutation%20I/README_EN.md", "path_cn": "/lcci/08.07.Permutation%20I/README.md", "tags": ["Backtracking"], "tags_cn": ["\u56de\u6eaf\u7b97\u6cd5"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100240, "frontend_id": "\u9762\u8bd5\u9898 08.03", "title": "Magic Index", "title_cn": "\u9b54\u672f\u7d22\u5f15", "content": "<p>A magic index in an array <code>A[0...n-1]</code> is defined to be an index such that <code>A[i] = i</code>. Given a sorted array of distinct integers, write a method to find a magic index, if one exists, in array A. If not, return -1. If there are more than one magic index, return the smallest one.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: nums = [0, 2, 3, 4, 5]\r\n<strong> Output</strong>: 0\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: nums = [1, 1, 1]\r\n<strong> Output</strong>: 1\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= nums.length &lt;= 1000000</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u9b54\u672f\u7d22\u5f15\u3002 \u5728\u6570\u7ec4<code>A[0...n-1]</code>\u4e2d\uff0c\u6709\u6240\u8c13\u7684\u9b54\u672f\u7d22\u5f15\uff0c\u6ee1\u8db3\u6761\u4ef6<code>A[i] = i</code>\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4\uff0c\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\u627e\u51fa\u9b54\u672f\u7d22\u5f15\uff0c\u82e5\u6709\u7684\u8bdd\uff0c\u5728\u6570\u7ec4A\u4e2d\u627e\u51fa\u4e00\u4e2a\u9b54\u672f\u7d22\u5f15\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u8fd4\u56de-1\u3002\u82e5\u6709\u591a\u4e2a\u9b54\u672f\u7d22\u5f15\uff0c\u8fd4\u56de\u7d22\u5f15\u503c\u6700\u5c0f\u7684\u4e00\u4e2a\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1anums = [0, 2, 3, 4, 5]\n<strong> \u8f93\u51fa</strong>\uff1a0\n<strong> \u8bf4\u660e</strong>: 0\u4e0b\u6807\u7684\u5143\u7d20\u4e3a0\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1anums = [1, 1, 1]\n<strong> \u8f93\u51fa</strong>\uff1a1\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>nums\u957f\u5ea6\u5728[1, 1000000]\u4e4b\u95f4</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/magic-index-lcci", "path": "/lcci/08.03.Magic%20Index/README_EN.md", "path_cn": "/lcci/08.03.Magic%20Index/README.md", "tags": ["Array", "Binary Search"], "tags_cn": ["\u6570\u7ec4", "\u4e8c\u5206\u67e5\u627e"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100233, "frontend_id": "\u9762\u8bd5\u9898 08.12", "title": "Eight Queens", "title_cn": "\u516b\u7687\u540e", "content": "<p>Write an algorithm to print all ways of arranging n queens on an n x n&nbsp;chess board so that none of them share the same row, column, or diagonal. In this case, &quot;diagonal&quot; means all diagonals, not just the two that bisect the board.</p>\r\n\r\n<p><strong>Notes: </strong>This&nbsp;problem is a generalization of the original one in the book.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: 4\r\n<strong> Output</strong>: [[&quot;.Q..&quot;,&quot;...Q&quot;,&quot;Q...&quot;,&quot;..Q.&quot;],[&quot;..Q.&quot;,&quot;Q...&quot;,&quot;...Q&quot;,&quot;.Q..&quot;]]\r\n<strong> Explanation</strong>: 4 queens has following two solutions\r\n[\r\n&nbsp;[&quot;.Q..&quot;, &nbsp;// solution 1\r\n&nbsp; &quot;...Q&quot;,\r\n&nbsp; &quot;Q...&quot;,\r\n&nbsp; &quot;..Q.&quot;],\r\n\r\n&nbsp;[&quot;..Q.&quot;, &nbsp;// solution 2\r\n&nbsp; &quot;Q...&quot;,\r\n&nbsp; &quot;...Q&quot;,\r\n&nbsp; &quot;.Q..&quot;]\r\n]\r\n</pre>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u4e00\u79cd\u7b97\u6cd5\uff0c\u6253\u5370 N \u7687\u540e\u5728 N &times; N \u68cb\u76d8\u4e0a\u7684\u5404\u79cd\u6446\u6cd5\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7687\u540e\u90fd\u4e0d\u540c\u884c\u3001\u4e0d\u540c\u5217\uff0c\u4e5f\u4e0d\u5728\u5bf9\u89d2\u7ebf\u4e0a\u3002\u8fd9\u91cc\u7684&ldquo;\u5bf9\u89d2\u7ebf&rdquo;\u6307\u7684\u662f\u6240\u6709\u7684\u5bf9\u89d2\u7ebf\uff0c\u4e0d\u53ea\u662f\u5e73\u5206\u6574\u4e2a\u68cb\u76d8\u7684\u90a3\u4e24\u6761\u5bf9\u89d2\u7ebf\u3002</p>\n\n<p><strong>\u6ce8\u610f\uff1a</strong>\u672c\u9898\u76f8\u5bf9\u539f\u9898\u505a\u4e86\u6269\u5c55</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a4\n<strong> \u8f93\u51fa</strong>\uff1a[[&quot;.Q..&quot;,&quot;...Q&quot;,&quot;Q...&quot;,&quot;..Q.&quot;],[&quot;..Q.&quot;,&quot;Q...&quot;,&quot;...Q&quot;,&quot;.Q..&quot;]]\n<strong> \u89e3\u91ca</strong>: 4 \u7687\u540e\u95ee\u9898\u5b58\u5728\u5982\u4e0b\u4e24\u4e2a\u4e0d\u540c\u7684\u89e3\u6cd5\u3002\n[\n&nbsp;[&quot;.Q..&quot;, &nbsp;// \u89e3\u6cd5 1\n&nbsp; &quot;...Q&quot;,\n&nbsp; &quot;Q...&quot;,\n&nbsp; &quot;..Q.&quot;],\n\n&nbsp;[&quot;..Q.&quot;, &nbsp;// \u89e3\u6cd5 2\n&nbsp; &quot;Q...&quot;,\n&nbsp; &quot;...Q&quot;,\n&nbsp; &quot;.Q..&quot;]\n]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/eight-queens-lcci", "path": "/lcci/08.12.Eight%20Queens/README_EN.md", "path_cn": "/lcci/08.12.Eight%20Queens/README.md", "tags": ["Backtracking"], "tags_cn": ["\u56de\u6eaf\u7b97\u6cd5"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 100232, "frontend_id": "\u9762\u8bd5\u9898 10.03", "title": "Search Rotate Array", "title_cn": "\u641c\u7d22\u65cb\u8f6c\u6570\u7ec4", "content": "<p>Given a sorted array of n integers that has been rotated an unknown number of times, write code to find an element in the array. You may assume that the array was originally sorted in increasing order. If there are more than one target elements in the array, return the smallest index.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 5\r\n<strong> Output</strong>: 8 (the index of 5 in the array)\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 11\r\n<strong> Output</strong>: -1 (not found)\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= arr.length &lt;= 1000000</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u641c\u7d22\u65cb\u8f6c\u6570\u7ec4\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u540e\u7684\u6570\u7ec4\uff0c\u5305\u542bn\u4e2a\u6574\u6570\uff0c\u4f46\u8fd9\u4e2a\u6570\u7ec4\u5df2\u88ab\u65cb\u8f6c\u8fc7\u5f88\u591a\u6b21\u4e86\uff0c\u6b21\u6570\u4e0d\u8be6\u3002\u8bf7\u7f16\u5199\u4ee3\u7801\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\uff0c\u5047\u8bbe\u6570\u7ec4\u5143\u7d20\u539f\u5148\u662f\u6309\u5347\u5e8f\u6392\u5217\u7684\u3002\u82e5\u6709\u591a\u4e2a\u76f8\u540c\u5143\u7d20\uff0c\u8fd4\u56de\u7d22\u5f15\u503c\u6700\u5c0f\u7684\u4e00\u4e2a\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>: arr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 5\n<strong> \u8f93\u51fa</strong>: 8\uff08\u5143\u7d205\u5728\u8be5\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\uff09\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1aarr = [15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14], target = 11\n<strong> \u8f93\u51fa</strong>\uff1a-1 \uff08\u6ca1\u6709\u627e\u5230\uff09\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>arr \u957f\u5ea6\u8303\u56f4\u5728[1, 1000000]\u4e4b\u95f4</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/search-rotate-array-lcci", "path": "/lcci/10.03.Search%20Rotate%20Array/README_EN.md", "path_cn": "/lcci/10.03.Search%20Rotate%20Array/README.md", "tags": ["Array", "Binary Search"], "tags_cn": ["\u6570\u7ec4", "\u4e8c\u5206\u67e5\u627e"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100231, "frontend_id": "\u9762\u8bd5\u9898 08.11", "title": "Coin", "title_cn": "\u786c\u5e01", "content": "<p>Given an infinite number of quarters (25 cents), dimes (10 cents), nickels (5 cents), and pennies (1 cent), write code to calculate the number of ways of representing n cents.&nbsp;(The result may be large, so you should return it modulo 1000000007)</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: n = 5\r\n<strong> Output</strong>: 2\r\n<strong> Explanation</strong>: There are two ways:\r\n5=5\r\n5=1+1+1+1+1\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: n = 10\r\n<strong> Output</strong>: 4\r\n<strong> Explanation</strong>: There are four ways:\r\n10=10\r\n10=5+5\r\n10=5+1+1+1+1+1\r\n10=1+1+1+1+1+1+1+1+1+1\r\n</pre>\r\n\r\n<p><strong>Notes: </strong></p>\r\n\r\n<p>You can assume:</p>\r\n\r\n<ul>\r\n\t<li>0 &lt;= n&nbsp;&lt;= 1000000</li>\r\n</ul>\r\n", "content_cn": "<p>\u786c\u5e01\u3002\u7ed9\u5b9a\u6570\u91cf\u4e0d\u9650\u7684\u786c\u5e01\uff0c\u5e01\u503c\u4e3a25\u5206\u300110\u5206\u30015\u5206\u548c1\u5206\uff0c\u7f16\u5199\u4ee3\u7801\u8ba1\u7b97n\u5206\u6709\u51e0\u79cd\u8868\u793a\u6cd5\u3002(\u7ed3\u679c\u53ef\u80fd\u4f1a\u5f88\u5927\uff0c\u4f60\u9700\u8981\u5c06\u7ed3\u679c\u6a21\u4e0a1000000007)</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>: n = 5\n<strong> \u8f93\u51fa</strong>\uff1a2\n<strong> \u89e3\u91ca</strong>: \u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u51d1\u6210\u603b\u91d1\u989d:\n5=5\n5=1+1+1+1+1\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>: n = 10\n<strong> \u8f93\u51fa</strong>\uff1a4\n<strong> \u89e3\u91ca</strong>: \u6709\u56db\u79cd\u65b9\u5f0f\u53ef\u4ee5\u51d1\u6210\u603b\u91d1\u989d:\n10=10\n10=5+5\n10=5+1+1+1+1+1\n10=1+1+1+1+1+1+1+1+1+1\n</pre>\n\n<p> <strong>\u8bf4\u660e\uff1a</strong></p>\n\n<p>\u6ce8\u610f:</p>\n\n<p>\u4f60\u53ef\u4ee5\u5047\u8bbe\uff1a</p>\n\n<ul>\n<li>0 &lt;= n (\u603b\u91d1\u989d) &lt;= 1000000</li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/coin-lcci", "path": "/lcci/08.11.Coin/README_EN.md", "path_cn": "/lcci/08.11.Coin/README.md", "tags": ["Dynamic Programming"], "tags_cn": ["\u52a8\u6001\u89c4\u5212"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100230, "frontend_id": "\u9762\u8bd5\u9898 05.03", "title": "Reverse Bits", "title_cn": "\u7ffb\u8f6c\u6570\u4f4d", "content": "<p>You have an integer and you can flip exactly one bit from a 0 to a 1. Write code to find the length of the longest sequence of 1s you could create.</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>num</code> = 1775(11011101111<sub>2</sub>)\r\n<strong>Output:</strong> 8\r\n</pre>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> <code>num</code> = 7(0111<sub>2</sub>)\r\n<strong>Output:</strong> 4\r\n</pre>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a32\u4f4d\u6574\u6570 <code>num</code>\uff0c\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6570\u4f4d\u4ece0\u53d8\u4e3a1\u3002\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u627e\u51fa\u4f60\u80fd\u591f\u83b7\u5f97\u7684\u6700\u957f\u7684\u4e00\u4e321\u7684\u957f\u5ea6\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>num</code> = 1775(11011101111<sub>2</sub>)\n<strong>\u8f93\u51fa:</strong> 8\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>num</code> = 7(0111<sub>2</sub>)\n<strong>\u8f93\u51fa:</strong> 4\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/reverse-bits-lcci", "path": "/lcci/05.03.Reverse%20Bits/README_EN.md", "path_cn": "/lcci/05.03.Reverse%20Bits/README.md", "tags": ["Bit Manipulation"], "tags_cn": ["\u4f4d\u8fd0\u7b97"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100229, "frontend_id": "\u9762\u8bd5\u9898 04.10", "title": "Check SubTree", "title_cn": "\u68c0\u67e5\u5b50\u6811", "content": "<p>T1&nbsp;and T2 are two very large binary trees, with T1&nbsp;much bigger than T2. Create an algorithm to determine if T2 is a subtree of T1.</p>\r\n\r\n<p>A tree T2 is a subtree of T1&nbsp;if there exists a node n in T1&nbsp;such that the subtree of n is identical to T2. That is, if you cut off the tree at node n, the two trees would be identical.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: t1 = [1, 2, 3], t2 = [2]\r\n<strong> Output</strong>: true\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: t1 = [1, null, 2, 4], t2 = [3, 2]\r\n<strong> Output</strong>: false\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ol>\r\n\t<li>The node numbers of both tree are in [0, 20000].</li>\r\n</ol>\r\n", "content_cn": "<p>\u68c0\u67e5\u5b50\u6811\u3002\u4f60\u6709\u4e24\u68f5\u975e\u5e38\u5927\u7684\u4e8c\u53c9\u6811\uff1aT1\uff0c\u6709\u51e0\u4e07\u4e2a\u8282\u70b9\uff1bT2\uff0c\u6709\u51e0\u4e07\u4e2a\u8282\u70b9\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5224\u65ad T2 \u662f\u5426\u4e3a T1 \u7684\u5b50\u6811\u3002</p>\n\n<p>\u5982\u679c T1 \u6709\u8fd9\u4e48\u4e00\u4e2a\u8282\u70b9 n\uff0c\u5176\u5b50\u6811\u4e0e T2 \u4e00\u6a21\u4e00\u6837\uff0c\u5219 T2 \u4e3a T1 \u7684\u5b50\u6811\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u8282\u70b9 n \u5904\u628a\u6811\u780d\u65ad\uff0c\u5f97\u5230\u7684\u6811\u4e0e T2 \u5b8c\u5168\u76f8\u540c\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1at1 = [1, 2, 3], t2 = [2]\n<strong> \u8f93\u51fa</strong>\uff1atrue\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1at1 = [1, null, 2, 4], t2 = [3, 2]\n<strong> \u8f93\u51fa</strong>\uff1afalse\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u6811\u7684\u8282\u70b9\u6570\u76ee\u8303\u56f4\u4e3a[0, 20000]\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/check-subtree-lcci", "path": "/lcci/04.10.Check%20SubTree/README_EN.md", "path_cn": "/lcci/04.10.Check%20SubTree/README.md", "tags": ["Tree"], "tags_cn": ["\u6811"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100228, "frontend_id": "\u9762\u8bd5\u9898 03.06", "title": "Animal Shelter", "title_cn": "\u52a8\u7269\u6536\u5bb9\u6240", "content": "<p>An animal shelter, which holds only dogs and cats, operates on a strictly&quot;first in, first out&quot; basis. People must adopt either the&quot;oldest&quot; (based on arrival time) of all animals at the shelter, or they can select whether they would prefer a dog or a cat (and will receive the oldest animal of that type). They cannot select which specific animal they would like. Create the data structures to maintain this system and implement operations such as <code>enqueue</code>, <code>dequeueAny</code>, <code>dequeueDog</code>, and <code>dequeueCat</code>. You may use the built-in Linked list data structure.</p>\r\n\r\n<p><code>enqueue</code> method has a <code>animal</code> parameter, <code>animal[0]</code> represents the number of the animal, <code>animal[1]</code> represents the type of the animal, 0 for cat and 1 for dog.</p>\r\n\r\n<p><code>dequeue*</code> method returns <code>[animal number, animal type]</code>, if there&#39;s no animal that can be adopted, return <code>[-1, -1]</code>.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: \r\n[&quot;AnimalShelf&quot;, &quot;enqueue&quot;, &quot;enqueue&quot;, &quot;dequeueCat&quot;, &quot;dequeueDog&quot;, &quot;dequeueAny&quot;]\r\n[[], [[0, 0]], [[1, 0]], [], [], []]\r\n<strong> Output</strong>: \r\n[null,null,null,[0,0],[-1,-1],[1,0]]\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: \r\n[&quot;AnimalShelf&quot;, &quot;enqueue&quot;, &quot;enqueue&quot;, &quot;enqueue&quot;, &quot;dequeueDog&quot;, &quot;dequeueCat&quot;, &quot;dequeueAny&quot;]\r\n[[], [[0, 0]], [[1, 0]], [[2, 1]], [], [], []]\r\n<strong> Output</strong>: \r\n[null,null,null,null,[2,1],[0,0],[1,0]]\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The number of animals in the shelter will not exceed 20000.</li>\r\n</ol>\r\n", "content_cn": "<p>\u52a8\u7269\u6536\u5bb9\u6240\u3002\u6709\u5bb6\u52a8\u7269\u6536\u5bb9\u6240\u53ea\u6536\u5bb9\u72d7\u4e0e\u732b\uff0c\u4e14\u4e25\u683c\u9075\u5b88&ldquo;\u5148\u8fdb\u5148\u51fa&rdquo;\u7684\u539f\u5219\u3002\u5728\u6536\u517b\u8be5\u6536\u5bb9\u6240\u7684\u52a8\u7269\u65f6\uff0c\u6536\u517b\u4eba\u53ea\u80fd\u6536\u517b\u6240\u6709\u52a8\u7269\u4e2d&ldquo;\u6700\u8001&rdquo;\uff08\u7531\u5176\u8fdb\u5165\u6536\u5bb9\u6240\u7684\u65f6\u95f4\u957f\u77ed\u800c\u5b9a\uff09\u7684\u52a8\u7269\uff0c\u6216\u8005\u53ef\u4ee5\u6311\u9009\u732b\u6216\u72d7\uff08\u540c\u65f6\u5fc5\u987b\u6536\u517b\u6b64\u7c7b\u52a8\u7269\u4e2d&ldquo;\u6700\u8001&rdquo;\u7684\uff09\u3002\u6362\u8a00\u4e4b\uff0c\u6536\u517b\u4eba\u4e0d\u80fd\u81ea\u7531\u6311\u9009\u60f3\u6536\u517b\u7684\u5bf9\u8c61\u3002\u8bf7\u521b\u5efa\u9002\u7528\u4e8e\u8fd9\u4e2a\u7cfb\u7edf\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b9e\u73b0\u5404\u79cd\u64cd\u4f5c\u65b9\u6cd5\uff0c\u6bd4\u5982<code>enqueue</code>\u3001<code>dequeueAny</code>\u3001<code>dequeueDog</code>\u548c<code>dequeueCat</code>\u3002\u5141\u8bb8\u4f7f\u7528Java\u5185\u7f6e\u7684LinkedList\u6570\u636e\u7ed3\u6784\u3002</p>\n\n<p><code>enqueue</code>\u65b9\u6cd5\u6709\u4e00\u4e2a<code>animal</code>\u53c2\u6570\uff0c<code>animal[0]</code>\u4ee3\u8868\u52a8\u7269\u7f16\u53f7\uff0c<code>animal[1]</code>\u4ee3\u8868\u52a8\u7269\u79cd\u7c7b\uff0c\u5176\u4e2d 0 \u4ee3\u8868\u732b\uff0c1 \u4ee3\u8868\u72d7\u3002</p>\n\n<p><code>dequeue*</code>\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5217\u8868<code>[\u52a8\u7269\u7f16\u53f7, \u52a8\u7269\u79cd\u7c7b]</code>\uff0c\u82e5\u6ca1\u6709\u53ef\u4ee5\u6536\u517b\u7684\u52a8\u7269\uff0c\u5219\u8fd4\u56de<code>[-1,-1]</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a\n[&quot;AnimalShelf&quot;, &quot;enqueue&quot;, &quot;enqueue&quot;, &quot;dequeueCat&quot;, &quot;dequeueDog&quot;, &quot;dequeueAny&quot;]\n[[], [[0, 0]], [[1, 0]], [], [], []]\n<strong> \u8f93\u51fa</strong>\uff1a\n[null,null,null,[0,0],[-1,-1],[1,0]]\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a\n[&quot;AnimalShelf&quot;, &quot;enqueue&quot;, &quot;enqueue&quot;, &quot;enqueue&quot;, &quot;dequeueDog&quot;, &quot;dequeueCat&quot;, &quot;dequeueAny&quot;]\n[[], [[0, 0]], [[1, 0]], [[2, 1]], [], [], []]\n<strong> \u8f93\u51fa</strong>\uff1a\n[null,null,null,null,[2,1],[0,0],[1,0]]\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u6536\u7eb3\u6240\u7684\u6700\u5927\u5bb9\u91cf\u4e3a20000</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/animal-shelter-lcci", "path": "/lcci/03.06.Animal%20Shelter/README_EN.md", "path_cn": "/lcci/03.06.Animal%20Shelter/README.md", "tags": ["Design"], "tags_cn": ["\u8bbe\u8ba1"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100203, "frontend_id": "\u9762\u8bd5\u9898 05.02", "title": "Bianry Number to String", "title_cn": "\u4e8c\u8fdb\u5236\u6570\u8f6c\u5b57\u7b26\u4e32", "content": "<p>Given a real number between O and 1 (e.g., 0.72) that is passed in as a double, print the binary representation. If the number cannot be represented accurately in binary with at most 32 characters, print &quot;ERROR&quot;.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: 0.625\r\n<strong> Output</strong>: &quot;0.101&quot;\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: 0.1\r\n<strong> Output</strong>: &quot;ERROR&quot;\r\n<strong> Note</strong>: 0.1 cannot be represented accurately in binary.\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ol>\r\n\t<li>This two charaters &quot;0.&quot; should be counted into 32 characters.</li>\r\n</ol>\r\n", "content_cn": "<p>\u4e8c\u8fdb\u5236\u6570\u8f6c\u5b57\u7b26\u4e32\u3002\u7ed9\u5b9a\u4e00\u4e2a\u4ecb\u4e8e0\u548c1\u4e4b\u95f4\u7684\u5b9e\u6570\uff08\u59820.72\uff09\uff0c\u7c7b\u578b\u4e3adouble\uff0c\u6253\u5370\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u8be5\u6570\u5b57\u4e0d\u57280\u548c1\u4e4b\u95f4\uff0c<strong>\u6216\u8005</strong>\u65e0\u6cd5\u7cbe\u786e\u5730\u752832\u4f4d\u4ee5\u5185\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u5219\u6253\u5370&ldquo;ERROR&rdquo;\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a0.625\n<strong> \u8f93\u51fa</strong>\uff1a&quot;0.101&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a0.1\n<strong> \u8f93\u51fa</strong>\uff1a&quot;ERROR&quot;\n<strong> \u63d0\u793a</strong>\uff1a0.1\u65e0\u6cd5\u88ab\u4e8c\u8fdb\u5236\u51c6\u786e\u8868\u793a\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>32\u4f4d\u5305\u62ec\u8f93\u51fa\u4e2d\u7684&quot;0.&quot;\u8fd9\u4e24\u4f4d\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/bianry-number-to-string-lcci", "path": "/lcci/05.02.Bianry%20Number%20to%20String/README_EN.md", "path_cn": "/lcci/05.02.Bianry%20Number%20to%20String/README.md", "tags": ["String"], "tags_cn": ["\u5b57\u7b26\u4e32"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100202, "frontend_id": "\u9762\u8bd5\u9898 08.13", "title": "Pile Box", "title_cn": "\u5806\u7bb1\u5b50", "content": "<p>You have a stack of n boxes, with widths wi, depths di, and heights hi. The boxes cannot be rotated and can only be stacked on top of one another if each box in the stack is strictly larger than the box above it in width, height, and depth. Implement a method to compute the height of the tallest possible stack. The height of a stack is the sum of the heights of each box.</p>\r\n\r\n<p>The input use <code>[wi, di, hi]</code>&nbsp;to represents each box.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: box = [[1, 1, 1], [2, 2, 2], [3, 3, 3]]\r\n<strong> Output</strong>: 6\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: box = [[1, 1, 1], [2, 3, 4], [2, 6, 7], [3, 4, 5]]\r\n<strong> Output</strong>: 10\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>box.length &lt;= 3000</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u5806\u7bb1\u5b50\u3002\u7ed9\u4f60\u4e00\u5806n\u4e2a\u7bb1\u5b50\uff0c\u7bb1\u5b50\u5bbd wi\u3001\u6df1 di\u3001\u9ad8 hi\u3002\u7bb1\u5b50\u4e0d\u80fd\u7ffb\u8f6c\uff0c\u5c06\u7bb1\u5b50\u5806\u8d77\u6765\u65f6\uff0c\u4e0b\u9762\u7bb1\u5b50\u7684\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u548c\u6df1\u5ea6\u5fc5\u987b\u5927\u4e8e\u4e0a\u9762\u7684\u7bb1\u5b50\u3002\u5b9e\u73b0\u4e00\u79cd\u65b9\u6cd5\uff0c\u642d\u51fa\u6700\u9ad8\u7684\u4e00\u5806\u7bb1\u5b50\u3002\u7bb1\u5806\u7684\u9ad8\u5ea6\u4e3a\u6bcf\u4e2a\u7bb1\u5b50\u9ad8\u5ea6\u7684\u603b\u548c\u3002</p>\n\n<p>\u8f93\u5165\u4f7f\u7528\u6570\u7ec4<code>[wi, di, hi]</code>\u8868\u793a\u6bcf\u4e2a\u7bb1\u5b50\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1abox = [[1, 1, 1], [2, 2, 2], [3, 3, 3]]\n<strong> \u8f93\u51fa</strong>\uff1a6\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1abox = [[1, 1, 1], [2, 3, 4], [2, 6, 7], [3, 4, 5]]\n<strong> \u8f93\u51fa</strong>\uff1a10\n</pre>\n\n<p><strong>\u63d0\u793a:</strong></p>\n\n<ol>\n\t<li>\u7bb1\u5b50\u7684\u6570\u76ee\u4e0d\u5927\u4e8e3000\u4e2a\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/pile-box-lcci", "path": "/lcci/08.13.Pile%20Box/README_EN.md", "path_cn": "/lcci/08.13.Pile%20Box/README.md", "tags": ["Dynamic Programming", "Backtracking"], "tags_cn": ["\u52a8\u6001\u89c4\u5212", "\u56de\u6eaf\u7b97\u6cd5"], "difficulty": "Hard", "difficulty_cn": "\u56f0\u96be", "category": "lcci"}, {"id": 100201, "frontend_id": "\u9762\u8bd5\u9898 08.10", "title": "Color Fill", "title_cn": "\u989c\u8272\u586b\u5145", "content": "<p>Implement the &quot;paint fill&quot; function that one might see on many image editing programs. That is, given a screen (represented by a two-dimensional array of colors), a point, and a new color, fill in the surrounding area until the color changes from the original color.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input</strong>: \r\nimage = [[1,1,1],[1,1,0],[1,0,1]] \r\nsr = 1, sc = 1, newColor = 2\r\n<strong>Output</strong>: [[2,2,2],[2,2,0],[2,0,1]]\r\n<strong>Explanation</strong>: \r\nFrom the center of the image (with position (sr, sc) = (1, 1)), all pixels connected \r\nby a path of the same color as the starting pixel are colored with the new color.\r\nNote the bottom corner is not colored 2, because it is not 4-directionally connected\r\nto the starting pixel.</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ul>\r\n\t<li>The length of&nbsp;<code>image</code>&nbsp;and&nbsp;<code>image[0]</code>&nbsp;will be in the range&nbsp;<code>[1, 50]</code>.</li>\r\n\t<li>The given starting pixel will satisfy&nbsp;<code>0 &lt;= sr &lt; image.length</code>&nbsp;and&nbsp;<code>0 &lt;= sc &lt; image[0].length</code>.</li>\r\n\t<li>The value of each color in&nbsp;<code>image[i][j]</code>&nbsp;and&nbsp;<code>newColor</code>&nbsp;will be an integer in&nbsp;<code>[0, 65535]</code>.</li>\r\n</ul>\r\n", "content_cn": "<p>\u989c\u8272\u586b\u5145\u3002\u7f16\u5199\u51fd\u6570\uff0c\u5b9e\u73b0\u8bb8\u591a\u56fe\u7247\u7f16\u8f91\u8f6f\u4ef6\u90fd\u652f\u6301\u7684\u201c\u989c\u8272\u586b\u5145\u201d\u529f\u80fd\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5c4f\u5e55\uff08\u4ee5\u4e8c\u7ef4\u6570\u7ec4\u8868\u793a\uff0c\u5143\u7d20\u4e3a\u989c\u8272\u503c\uff09\u3001\u4e00\u4e2a\u70b9\u548c\u4e00\u4e2a\u65b0\u7684\u989c\u8272\u503c\uff0c\u5c06\u65b0\u989c\u8272\u503c\u586b\u5165\u8fd9\u4e2a\u70b9\u7684\u5468\u56f4\u533a\u57df\uff0c\u76f4\u5230\u539f\u6765\u7684\u989c\u8272\u503c\u5168\u90fd\u6539\u53d8\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1a\nimage = [[1,1,1],[1,1,0],[1,0,1]] \nsr = 1, sc = 1, newColor = 2\n<strong> \u8f93\u51fa</strong>\uff1a[[2,2,2],[2,2,0],[2,0,1]]\n<strong> \u89e3\u91ca</strong>: \n\u5728\u56fe\u50cf\u7684\u6b63\u4e2d\u95f4\uff0c(\u5750\u6807(sr,sc)=(1,1)),\n\u5728\u8def\u5f84\u4e0a\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u50cf\u7d20\u70b9\u7684\u989c\u8272\u90fd\u88ab\u66f4\u6539\u62102\u3002\n\u6ce8\u610f\uff0c\u53f3\u4e0b\u89d2\u7684\u50cf\u7d20\u6ca1\u6709\u66f4\u6539\u4e3a2\uff0c\n\u56e0\u4e3a\u5b83\u4e0d\u662f\u5728\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u4e0a\u4e0e\u521d\u59cb\u70b9\u76f8\u8fde\u7684\u50cf\u7d20\u70b9\u3002\n</pre>\n\n<p> <strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ol>\n<li>image \u548c\u00a0image[0]\u00a0\u7684\u957f\u5ea6\u5728\u8303\u56f4\u00a0[1, 50] \u5185\u3002</li>\n<li>\u7ed9\u51fa\u7684\u521d\u59cb\u70b9\u5c06\u6ee1\u8db3\u00a00 &lt;= sr &lt; image.length \u548c\u00a00 &lt;= sc &lt; image[0].length\u3002</li>\n<li>image[i][j] \u548c\u00a0newColor\u00a0\u8868\u793a\u7684\u989c\u8272\u503c\u5728\u8303\u56f4\u00a0[0, 65535]\u5185\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/color-fill-lcci", "path": "/lcci/08.10.Color%20Fill/README_EN.md", "path_cn": "/lcci/08.10.Color%20Fill/README.md", "tags": ["Depth-first Search"], "tags_cn": ["\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100200, "frontend_id": "\u9762\u8bd5\u9898 08.09", "title": "Bracket", "title_cn": "\u62ec\u53f7", "content": "<p>Implement an algorithm to print all valid (e.g., properly opened and closed) combinations of n pairs of parentheses.</p>\r\n\r\n<p>Note: The result set should not contain duplicated subsets.</p>\r\n\r\n<p>For example, given&nbsp;n = 3, the result should be:</p>\r\n\r\n<pre>\r\n[\r\n  &quot;((()))&quot;,\r\n  &quot;(()())&quot;,\r\n  &quot;(())()&quot;,\r\n  &quot;()(())&quot;,\r\n  &quot;()()()&quot;\r\n]\r\n</pre>\r\n", "content_cn": "<p>\u62ec\u53f7\u3002\u8bbe\u8ba1\u4e00\u79cd\u7b97\u6cd5\uff0c\u6253\u5370n\u5bf9\u62ec\u53f7\u7684\u6240\u6709\u5408\u6cd5\u7684\uff08\u4f8b\u5982\uff0c\u5f00\u95ed\u4e00\u4e00\u5bf9\u5e94\uff09\u7ec4\u5408\u3002</p>\n\n<p>\u8bf4\u660e\uff1a\u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002</p>\n\n<p>\u4f8b\u5982\uff0c\u7ed9\u51fa\u00a0n = 3\uff0c\u751f\u6210\u7ed3\u679c\u4e3a\uff1a</p>\n\n<pre>\n[\n  \"((()))\",\n  \"(()())\",\n  \"(())()\",\n  \"()(())\",\n  \"()()()\"\n]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/bracket-lcci", "path": "/lcci/08.09.Bracket/README_EN.md", "path_cn": "/lcci/08.09.Bracket/README.md", "tags": ["String", "Backtracking"], "tags_cn": ["\u5b57\u7b26\u4e32", "\u56de\u6eaf\u7b97\u6cd5"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100199, "frontend_id": "\u9762\u8bd5\u9898 08.05", "title": "Recursive Mulitply", "title_cn": "\u9012\u5f52\u4e58\u6cd5", "content": "<p>Write a recursive function to multiply two positive integers without using the * operator. You can use addition, subtraction, and bit shifting, but you should minimize the number of those operations.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: A = 1, B = 10\r\n<strong> Output</strong>: 10\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: A = 3, B = 4\r\n<strong> Output</strong>: 12\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The result will not overflow.</li>\r\n</ol>\r\n", "content_cn": "<p>\u9012\u5f52\u4e58\u6cd5\u3002 \u5199\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\uff0c\u4e0d\u4f7f\u7528 * \u8fd0\u7b97\u7b26\uff0c \u5b9e\u73b0\u4e24\u4e2a\u6b63\u6574\u6570\u7684\u76f8\u4e58\u3002\u53ef\u4ee5\u4f7f\u7528\u52a0\u53f7\u3001\u51cf\u53f7\u3001\u4f4d\u79fb\uff0c\u4f46\u8981\u541d\u556c\u4e00\u4e9b\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1aA = 1, B = 10\n<strong> \u8f93\u51fa</strong>\uff1a10\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1aA = 3, B = 4\n<strong> \u8f93\u51fa</strong>\uff1a12\n</pre>\n\n<p> <strong>\u63d0\u793a:</strong></p>\n\n<ol>\n<li>\u4fdd\u8bc1\u4e58\u6cd5\u8303\u56f4\u4e0d\u4f1a\u6ea2\u51fa</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/recursive-mulitply-lcci", "path": "/lcci/08.05.Recursive%20Mulitply/README_EN.md", "path_cn": "/lcci/08.05.Recursive%20Mulitply/README.md", "tags": ["Recursion"], "tags_cn": ["\u9012\u5f52"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100198, "frontend_id": "\u9762\u8bd5\u9898 08.04", "title": "Power Set", "title_cn": "\u5e42\u96c6", "content": "<p>Write a method to return all subsets of a set. The elements in a set are&nbsp;pairwise distinct.</p>\r\n\r\n<p>Note: The result set should not contain duplicated subsets.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>:  nums = [1,2,3]\r\n<strong> Output</strong>: \r\n[\r\n  [3],\r\n&nbsp; [1],\r\n&nbsp; [2],\r\n&nbsp; [1,2,3],\r\n&nbsp; [1,3],\r\n&nbsp; [2,3],\r\n&nbsp; [1,2],\r\n&nbsp; []\r\n]\r\n</pre>\r\n", "content_cn": "<p>\u5e42\u96c6\u3002\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\uff0c\u8fd4\u56de\u67d0\u96c6\u5408\u7684\u6240\u6709\u5b50\u96c6\u3002\u96c6\u5408\u4e2d<strong>\u4e0d\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20</strong>\u3002</p>\n\n<p>\u8bf4\u660e\uff1a\u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002</p>\n\n<p><strong>\u793a\u4f8b:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a nums = [1,2,3]\n<strong> \u8f93\u51fa</strong>\uff1a\n[\n  [3],\n&nbsp; [1],\n&nbsp; [2],\n&nbsp; [1,2,3],\n&nbsp; [1,3],\n&nbsp; [2,3],\n&nbsp; [1,2],\n&nbsp; []\n]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/power-set-lcci", "path": "/lcci/08.04.Power%20Set/README_EN.md", "path_cn": "/lcci/08.04.Power%20Set/README.md", "tags": ["Bit Manipulation", "Array", "Backtracking"], "tags_cn": ["\u4f4d\u8fd0\u7b97", "\u6570\u7ec4", "\u56de\u6eaf\u7b97\u6cd5"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100197, "frontend_id": "\u9762\u8bd5\u9898 08.01", "title": "Three Steps Problem", "title_cn": "\u4e09\u6b65\u95ee\u9898", "content": "<p>A child is running up a staircase with n steps and can hop either 1 step, 2 steps, or 3 steps at a time. Implement a method to count how many possible ways the child can run up the stairs.&nbsp;The result may be large, so return it modulo 1000000007.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: n = 3 \r\n<strong> Output</strong>: 4\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: n = 5\r\n<strong> Output</strong>: 13\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= n &lt;= 1000000</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u4e09\u6b65\u95ee\u9898\u3002\u6709\u4e2a\u5c0f\u5b69\u6b63\u5728\u4e0a\u697c\u68af\uff0c\u697c\u68af\u6709n\u9636\u53f0\u9636\uff0c\u5c0f\u5b69\u4e00\u6b21\u53ef\u4ee5\u4e0a1\u9636\u30012\u9636\u62163\u9636\u3002\u5b9e\u73b0\u4e00\u79cd\u65b9\u6cd5\uff0c\u8ba1\u7b97\u5c0f\u5b69\u6709\u591a\u5c11\u79cd\u4e0a\u697c\u68af\u7684\u65b9\u5f0f\u3002\u7ed3\u679c\u53ef\u80fd\u5f88\u5927\uff0c\u4f60\u9700\u8981\u5bf9\u7ed3\u679c\u6a211000000007\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1an = 3 \n<strong> \u8f93\u51fa</strong>\uff1a4\n<strong> \u8bf4\u660e</strong>: \u6709\u56db\u79cd\u8d70\u6cd5\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1an = 5\n<strong> \u8f93\u51fa</strong>\uff1a13\n</pre>\n\n<p> <strong>\u63d0\u793a:</strong></p>\n\n<ol>\n<li>n\u8303\u56f4\u5728[1, 1000000]\u4e4b\u95f4</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/three-steps-problem-lcci", "path": "/lcci/08.01.Three%20Steps%20Problem/README_EN.md", "path_cn": "/lcci/08.01.Three%20Steps%20Problem/README.md", "tags": ["Dynamic Programming"], "tags_cn": ["\u52a8\u6001\u89c4\u5212"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100196, "frontend_id": "\u9762\u8bd5\u9898 05.08", "title": "Draw Line", "title_cn": "\u7ed8\u5236\u76f4\u7ebf", "content": "<p>A monochrome screen is stored as a single array of int, allowing 32 consecutive pixels to be stored in one int. The screen has width <code>w</code>, where <code>w</code> is divisible by 32&nbsp;(that is, no byte will be split across rows). The height of the screen, of course, can be derived from the length of the array and the width. Implement a function that draws a horizontal line from <code>(x1, y)</code> to <code>(x2, y)</code>.</p>\r\n\r\n<p>Given the length of the array, the width of the array (in bit), start position <code>x1</code>&nbsp;(in bit) of the line, end position <code>x2</code> (in bit) of the line and the row number&nbsp;<code>y</code> of the line, return the array after drawing.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: length = 1, w = 32, x1 = 30, x2 = 31, y = 0\r\n<strong> Output</strong>: [3]\r\n<strong> Explanation</strong>: After drawing a line from (30, 0) to (31, 0), the screen becomes [0b000000000000000000000000000000011].\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: length = 3, w = 96, x1 = 0, x2 = 95, y = 0\r\n<strong> Output</strong>: [-1, -1, -1]\r\n</pre>\r\n", "content_cn": "<p>\u7ed8\u5236\u76f4\u7ebf\u3002\u6709\u4e2a\u5355\u8272\u5c4f\u5e55\u5b58\u50a8\u5728\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u4f7f\u5f9732\u4e2a\u8fde\u7eed\u50cf\u7d20\u53ef\u4ee5\u5b58\u653e\u5728\u4e00\u4e2a int \u91cc\u3002\u5c4f\u5e55\u5bbd\u5ea6\u4e3a<code>w</code>\uff0c\u4e14<code>w</code>\u53ef\u88ab32\u6574\u9664\uff08\u5373\u4e00\u4e2a int \u4e0d\u4f1a\u5206\u5e03\u5728\u4e24\u884c\u4e0a\uff09\uff0c\u5c4f\u5e55\u9ad8\u5ea6\u53ef\u7531\u6570\u7ec4\u957f\u5ea6\u53ca\u5c4f\u5e55\u5bbd\u5ea6\u63a8\u7b97\u5f97\u51fa\u3002\u8bf7\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u7ed8\u5236\u4ece\u70b9<code>(x1, y)</code>\u5230\u70b9<code>(x2, y)</code>\u7684\u6c34\u5e73\u7ebf\u3002</p>\n\n<p>\u7ed9\u51fa\u6570\u7ec4\u7684\u957f\u5ea6 <code>length</code>\uff0c\u5bbd\u5ea6 <code>w</code>\uff08\u4ee5\u6bd4\u7279\u4e3a\u5355\u4f4d\uff09\u3001\u76f4\u7ebf\u5f00\u59cb\u4f4d\u7f6e <code>x1</code>\uff08\u6bd4\u7279\u4e3a\u5355\u4f4d\uff09\u3001\u76f4\u7ebf\u7ed3\u675f\u4f4d\u7f6e <code>x2</code>\uff08\u6bd4\u7279\u4e3a\u5355\u4f4d\uff09\u3001\u76f4\u7ebf\u6240\u5728\u884c\u6570&nbsp;<code>y</code>\u3002\u8fd4\u56de\u7ed8\u5236\u8fc7\u540e\u7684\u6570\u7ec4\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1alength = 1, w = 32, x1 = 30, x2 = 31, y = 0\n<strong> \u8f93\u51fa</strong>\uff1a[3]\n<strong> \u8bf4\u660e</strong>\uff1a\u5728\u7b2c0\u884c\u7684\u7b2c30\u4f4d\u5230\u7b2c31\u4e3a\u753b\u4e00\u6761\u76f4\u7ebf\uff0c\u5c4f\u5e55\u8868\u793a\u4e3a[0b000000000000000000000000000000011]\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1alength = 3, w = 96, x1 = 0, x2 = 95, y = 0\n<strong> \u8f93\u51fa</strong>\uff1a[-1, -1, -1]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/draw-line-lcci", "path": "/lcci/05.08.Draw%20Line/README_EN.md", "path_cn": "/lcci/05.08.Draw%20Line/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100195, "frontend_id": "\u9762\u8bd5\u9898 03.03", "title": "Stack of Plates", "title_cn": "\u5806\u76d8\u5b50", "content": "<p>Imagine a (literal) stack of plates. If the stack gets too high, it might topple. Therefore, in real life, we would likely start a new stack when the previous stack exceeds some threshold. Implement a data structure <code>SetOfStacks</code> that mimics this.&nbsp;<code>SetOfStacks</code> should be composed of several stacks and should create a new stack once the previous one exceeds capacity. <code>SetOfStacks.push()</code> and <code>SetOfStacks.pop()</code> should behave identically to a single stack (that is, <code>pop()</code> should return the same values as it would if there were just a single stack). Follow Up: Implement a function <code>popAt(int index)</code> which performs a pop operation on a specific sub-stack.</p>\r\n\r\n<p>You should delete the sub-stack when it becomes empty. <code>pop</code>, <code>popAt</code> should return -1 when there&#39;s no element to pop.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: \r\n[&quot;StackOfPlates&quot;, &quot;push&quot;, &quot;push&quot;, &quot;popAt&quot;, &quot;pop&quot;, &quot;pop&quot;]\r\n[[1], [1], [2], [1], [], []]\r\n<strong> Output</strong>: \r\n[null, null, null, 2, 1, -1]\r\n<strong> Explanation</strong>: \r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: \r\n[&quot;StackOfPlates&quot;, &quot;push&quot;, &quot;push&quot;, &quot;push&quot;, &quot;popAt&quot;, &quot;popAt&quot;, &quot;popAt&quot;]\r\n[[2], [1], [2], [3], [0], [0], [0]]\r\n<strong> Output</strong>: \r\n[null, null, null, null, 2, 1, 3]\r\n</pre>\r\n", "content_cn": "<p>\u5806\u76d8\u5b50\u3002\u8bbe\u60f3\u6709\u4e00\u5806\u76d8\u5b50\uff0c\u5806\u592a\u9ad8\u53ef\u80fd\u4f1a\u5012\u4e0b\u6765\u3002\u56e0\u6b64\uff0c\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u76d8\u5b50\u5806\u5230\u4e00\u5b9a\u9ad8\u5ea6\u65f6\uff0c\u6211\u4eec\u5c31\u4f1a\u53e6\u5916\u5806\u4e00\u5806\u76d8\u5b50\u3002\u8bf7\u5b9e\u73b0\u6570\u636e\u7ed3\u6784<code>SetOfStacks</code>\uff0c\u6a21\u62df\u8fd9\u79cd\u884c\u4e3a\u3002<code>SetOfStacks</code>\u5e94\u8be5\u7531\u591a\u4e2a\u6808\u7ec4\u6210\uff0c\u5e76\u4e14\u5728\u524d\u4e00\u4e2a\u6808\u586b\u6ee1\u65f6\u65b0\u5efa\u4e00\u4e2a\u6808\u3002\u6b64\u5916\uff0c<code>SetOfStacks.push()</code>\u548c<code>SetOfStacks.pop()</code>\u5e94\u8be5\u4e0e\u666e\u901a\u6808\u7684\u64cd\u4f5c\u65b9\u6cd5\u76f8\u540c\uff08\u4e5f\u5c31\u662f\u8bf4\uff0cpop()\u8fd4\u56de\u7684\u503c\uff0c\u5e94\u8be5\u8ddf\u53ea\u6709\u4e00\u4e2a\u6808\u65f6\u7684\u60c5\u51b5\u4e00\u6837\uff09\u3002 \u8fdb\u9636\uff1a\u5b9e\u73b0\u4e00\u4e2a<code>popAt(int index)</code>\u65b9\u6cd5\uff0c\u6839\u636e\u6307\u5b9a\u7684\u5b50\u6808\uff0c\u6267\u884cpop\u64cd\u4f5c\u3002</p>\n\n<p>\u5f53\u67d0\u4e2a\u6808\u4e3a\u7a7a\u65f6\uff0c\u5e94\u5f53\u5220\u9664\u8be5\u6808\u3002\u5f53\u6808\u4e2d\u6ca1\u6709\u5143\u7d20\u6216\u4e0d\u5b58\u5728\u8be5\u6808\u65f6\uff0c<code>pop</code>\uff0c<code>popAt</code>&nbsp;\u5e94\u8fd4\u56de -1.</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a\n[&quot;StackOfPlates&quot;, &quot;push&quot;, &quot;push&quot;, &quot;popAt&quot;, &quot;pop&quot;, &quot;pop&quot;]\n[[1], [1], [2], [1], [], []]\n<strong> \u8f93\u51fa</strong>\uff1a\n[null, null, null, 2, 1, -1]\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a\n[&quot;StackOfPlates&quot;, &quot;push&quot;, &quot;push&quot;, &quot;push&quot;, &quot;popAt&quot;, &quot;popAt&quot;, &quot;popAt&quot;]\n[[2], [1], [2], [3], [0], [0], [0]]\n<strong> \u8f93\u51fa</strong>\uff1a\n[null, null, null, null, 2, 1, 3]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/stack-of-plates-lcci", "path": "/lcci/03.03.Stack%20of%20Plates/README_EN.md", "path_cn": "/lcci/03.03.Stack%20of%20Plates/README.md", "tags": ["Design"], "tags_cn": ["\u8bbe\u8ba1"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100188, "frontend_id": "\u9762\u8bd5\u9898 02.05", "title": "Sum Lists", "title_cn": "\u94fe\u8868\u6c42\u548c", "content": "<p>You have two numbers represented by a linked list, where each node contains a single digit. The digits are stored in reverse order, such that the 1&#39;s digit is at the head of the list. Write a function that adds the two numbers and returns the sum as a linked list.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>(7 -&gt; 1 -&gt; 6) + (5 -&gt; 9 -&gt; 2). That is, 617 + 295.\r\n<strong>Output: </strong>2 -&gt; 1 -&gt; 9. That is, 912.\r\n</pre>\r\n\r\n<p><strong>Follow Up:&nbsp;</strong>Suppose the digits are stored in forward order. Repeat the above problem.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>(6 -&gt; 1 -&gt; 7) + (2 -&gt; 9 -&gt; 5). That is, 617 + 295.\r\n<strong>Output: </strong>9 -&gt; 1 -&gt; 2. That is, 912.\r\n</pre>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e24\u4e2a\u7528\u94fe\u8868\u8868\u793a\u7684\u6574\u6570\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u6570\u4f4d\u3002</p>\n<p>\u8fd9\u4e9b\u6570\u4f4d\u662f\u53cd\u5411\u5b58\u653e\u7684\uff0c\u4e5f\u5c31\u662f\u4e2a\u4f4d\u6392\u5728\u94fe\u8868\u9996\u90e8\u3002</p>\n<p>\u7f16\u5199\u51fd\u6570\u5bf9\u8fd9\u4e24\u4e2a\u6574\u6570\u6c42\u548c\uff0c\u5e76\u7528\u94fe\u8868\u5f62\u5f0f\u8fd4\u56de\u7ed3\u679c\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>(7 -&gt; 1 -&gt; 6) + (5 -&gt; 9 -&gt; 2)\uff0c\u5373617 + 295\n<strong>\u8f93\u51fa\uff1a</strong>2 -&gt; 1 -&gt; 9\uff0c\u5373912\n</pre>\n\n<p><strong>\u8fdb\u9636\uff1a</strong>\u5047\u8bbe\u8fd9\u4e9b\u6570\u4f4d\u662f\u6b63\u5411\u5b58\u653e\u7684\uff0c\u8bf7\u518d\u505a\u4e00\u904d\u3002</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>(6 -&gt; 1 -&gt; 7) + (2 -&gt; 9 -&gt; 5)\uff0c\u5373617 + 295\n<strong>\u8f93\u51fa\uff1a</strong>9 -&gt; 1 -&gt; 2\uff0c\u5373912\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/sum-lists-lcci", "path": "/lcci/02.05.Sum%20Lists/README_EN.md", "path_cn": "/lcci/02.05.Sum%20Lists/README.md", "tags": ["Linked List", "Math"], "tags_cn": ["\u94fe\u8868", "\u6570\u5b66"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100187, "frontend_id": "\u9762\u8bd5\u9898 02.03", "title": "Delete Middle Node", "title_cn": "\u5220\u9664\u4e2d\u95f4\u8282\u70b9", "content": "<p>Implement an algorithm to delete a node in the middle (i.e., any node but the first and last node, not necessarily the exact middle) of a singly linked list, given only access to that node.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>the node c from the linked list a-&gt;b-&gt;c-&gt;d-&gt;e-&gt;f\r\n<strong>Output: </strong>nothing is returned, but the new linked list looks like a-&gt;b-&gt;d-&gt;e-&gt;f\r\n</pre>\r\n", "content_cn": "<p>\u5b9e\u73b0\u4e00\u79cd\u7b97\u6cd5\uff0c\u5220\u9664\u5355\u5411\u94fe\u8868\u4e2d\u95f4\u7684\u67d0\u4e2a\u8282\u70b9\uff08\u9664\u4e86\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u4e0d\u4e00\u5b9a\u662f\u4e2d\u95f4\u8282\u70b9\uff09\uff0c\u5047\u5b9a\u4f60\u53ea\u80fd\u8bbf\u95ee\u8be5\u8282\u70b9\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre>\n<strong>\u8f93\u5165\uff1a</strong>\u5355\u5411\u94fe\u8868a->b->c->d->e->f\u4e2d\u7684\u8282\u70b9c\n<strong>\u7ed3\u679c\uff1a</strong>\u4e0d\u8fd4\u56de\u4efb\u4f55\u6570\u636e\uff0c\u4f46\u8be5\u94fe\u8868\u53d8\u4e3aa->b->d->e->f\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/delete-middle-node-lcci", "path": "/lcci/02.03.Delete%20Middle%20Node/README_EN.md", "path_cn": "/lcci/02.03.Delete%20Middle%20Node/README.md", "tags": ["Linked List"], "tags_cn": ["\u94fe\u8868"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100186, "frontend_id": "\u9762\u8bd5\u9898 01.08", "title": "Zero Matrix", "title_cn": "\u96f6\u77e9\u9635", "content": "<p>Write an algorithm such that if an element in an MxN matrix is 0, its entire row and column are set to 0.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\n[\r\n  [1,1,1],\r\n  [1,0,1],\r\n  [1,1,1]\r\n]\r\n<strong>Output: </strong>\r\n[\r\n  [1,0,1],\r\n  [0,0,0],\r\n  [1,0,1]\r\n]\r\n</pre>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>\r\n[\r\n  [0,1,2,0],\r\n  [3,4,5,2],\r\n  [1,3,1,5]\r\n]\r\n<strong>Output: </strong>\r\n[\r\n  [0,0,0,0],\r\n  [0,4,5,0],\r\n  [0,3,1,0]\r\n]\r\n</pre>\r\n", "content_cn": "<p>\u7f16\u5199\u4e00\u79cd\u7b97\u6cd5\uff0c\u82e5M \u00d7 N\u77e9\u9635\u4e2d\u67d0\u4e2a\u5143\u7d20\u4e3a0\uff0c\u5219\u5c06\u5176\u6240\u5728\u7684\u884c\u4e0e\u5217\u6e05\u96f6\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\n[\n  [1,1,1],\n  [1,0,1],\n  [1,1,1]\n]\n<strong>\u8f93\u51fa\uff1a</strong>\n[\n  [1,0,1],\n  [0,0,0],\n  [1,0,1]\n]\n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>\n[\n  [0,1,2,0],\n  [3,4,5,2],\n  [1,3,1,5]\n]\n<strong>\u8f93\u51fa\uff1a</strong>\n[\n  [0,0,0,0],\n  [0,4,5,0],\n  [0,3,1,0]\n]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/zero-matrix-lcci", "path": "/lcci/01.08.Zero%20Matrix/README_EN.md", "path_cn": "/lcci/01.08.Zero%20Matrix/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100185, "frontend_id": "\u9762\u8bd5\u9898 01.07", "title": "Rotate Matrix", "title_cn": "\u65cb\u8f6c\u77e9\u9635", "content": "<p>Given an image represented by an N x N matrix, where each pixel in the image is 4 bytes, write a method to rotate the image by 90 degrees. Can you do this in place?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\nGiven <strong>matrix</strong> = \r\n[\r\n  [1,2,3],\r\n  [4,5,6],\r\n  [7,8,9]\r\n],\r\n\r\nRotate the matrix <strong>in place. </strong>It becomes:\r\n[\r\n  [7,4,1],\r\n  [8,5,2],\r\n  [9,6,3]\r\n]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\nGiven <strong>matrix</strong> =\r\n[\r\n  [ 5, 1, 9,11],\r\n  [ 2, 4, 8,10],\r\n  [13, 3, 6, 7],\r\n  [15,14,12,16]\r\n], \r\n\r\nRotate the matrix <strong>in place. </strong>It becomes:\r\n[\r\n  [15,13, 2, 5],\r\n  [14, 3, 4, 1],\r\n  [12, 6, 8, 9],\r\n  [16, 7,10,11]\r\n]\r\n</pre>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u5e45\u7531N \u00d7 N\u77e9\u9635\u8868\u793a\u7684\u56fe\u50cf\uff0c\u5176\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u5927\u5c0f\u4e3a4\u5b57\u8282\uff0c\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06\u56fe\u50cf\u65cb\u8f6c90\u5ea6\u3002</p>\n\n<p>\u4e0d\u5360\u7528\u989d\u5916\u5185\u5b58\u7a7a\u95f4\u80fd\u5426\u505a\u5230\uff1f</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre>\u7ed9\u5b9a <strong>matrix</strong> = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\n<strong>\u539f\u5730</strong>\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre>\u7ed9\u5b9a <strong>matrix</strong> =\n[\n  [ 5, 1, 9,11],\n  [ 2, 4, 8,10],\n  [13, 3, 6, 7],\n  [15,14,12,16]\n], \n\n<strong>\u539f\u5730</strong>\u65cb\u8f6c\u8f93\u5165\u77e9\u9635\uff0c\u4f7f\u5176\u53d8\u4e3a:\n[\n  [15,13, 2, 5],\n  [14, 3, 4, 1],\n  [12, 6, 8, 9],\n  [16, 7,10,11]\n]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/rotate-matrix-lcci", "path": "/lcci/01.07.Rotate%20Matrix/README_EN.md", "path_cn": "/lcci/01.07.Rotate%20Matrix/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100184, "frontend_id": "\u9762\u8bd5\u9898 01.04", "title": "Palindrome Permutation", "title_cn": "\u56de\u6587\u6392\u5217", "content": "<p>Given a string, write a function to check if it is a permutation of a palin&shy; drome. A palindrome is a word or phrase that is the same forwards and backwards. A permutation is a rearrangement of letters. The palindrome does not need to be limited to just dictionary words.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: &quot;</strong>tactcoa&quot;\r\n<strong>Output: </strong>true\uff08permutations: &quot;tacocat&quot;\u3001&quot;atcocta&quot;, etc.\uff09\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5224\u5b9a\u5176\u662f\u5426\u4e3a\u67d0\u4e2a\u56de\u6587\u4e32\u7684\u6392\u5217\u4e4b\u4e00\u3002</p>\n\n<p>\u56de\u6587\u4e32\u662f\u6307\u6b63\u53cd\u4e24\u4e2a\u65b9\u5411\u90fd\u4e00\u6837\u7684\u5355\u8bcd\u6216\u77ed\u8bed\u3002\u6392\u5217\u662f\u6307\u5b57\u6bcd\u7684\u91cd\u65b0\u6392\u5217\u3002</p>\n\n<p>\u56de\u6587\u4e32\u4e0d\u4e00\u5b9a\u662f\u5b57\u5178\u5f53\u4e2d\u7684\u5355\u8bcd\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a&quot;</strong>tactcoa&quot;\n<strong>\u8f93\u51fa\uff1a</strong>true\uff08\u6392\u5217\u6709&quot;tacocat&quot;\u3001&quot;atcocta&quot;\uff0c\u7b49\u7b49\uff09\n</pre>\n\n<p>&nbsp;</p>\n", "url": "", "url_cn": "https://leetcode.cn/problems/palindrome-permutation-lcci", "path": "/lcci/01.04.Palindrome%20Permutation/README_EN.md", "path_cn": "/lcci/01.04.Palindrome%20Permutation/README.md", "tags": ["Hash Table", "String"], "tags_cn": ["\u54c8\u5e0c\u8868", "\u5b57\u7b26\u4e32"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100183, "frontend_id": "\u9762\u8bd5\u9898 05.04", "title": "Closed Number", "title_cn": "\u4e0b\u4e00\u4e2a\u6570", "content": "<p>Given a positive integer, print the next smallest and the next largest number that have the same number of 1 bits in their binary representation.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: num = 2 (0b10)\r\n<strong> Output</strong>: [4, 1] ([0b100, 0b1])\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: num = 1\r\n<strong> Output</strong>: [2, -1]\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= num &lt;=&nbsp;2147483647</code></li>\r\n\t<li>If there is no next smallest or next largest number, output -1.</li>\r\n</ol>\r\n", "content_cn": "<p>\u4e0b\u4e00\u4e2a\u6570\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u627e\u51fa\u4e0e\u5176\u4e8c\u8fdb\u5236\u8868\u8fbe\u5f0f\u4e2d1\u7684\u4e2a\u6570\u76f8\u540c\u4e14\u5927\u5c0f\u6700\u63a5\u8fd1\u7684\u90a3\u4e24\u4e2a\u6570\uff08\u4e00\u4e2a\u7565\u5927\uff0c\u4e00\u4e2a\u7565\u5c0f\uff09\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1anum = 2\uff08\u6216\u80050b10\uff09\n<strong> \u8f93\u51fa</strong>\uff1a[4, 1] \u6216\u8005\uff08[0b100, 0b1]\uff09\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1anum = 1\n<strong> \u8f93\u51fa</strong>\uff1a[2, -1]\n</pre>\n\n<p> <strong>\u63d0\u793a:</strong></p>\n\n<ol>\n<li><code>num</code>\u7684\u8303\u56f4\u5728[1, 2147483647]\u4e4b\u95f4\uff1b</li>\n<li>\u5982\u679c\u627e\u4e0d\u5230\u524d\u4e00\u4e2a\u6216\u8005\u540e\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6b63\u6570\uff0c\u90a3\u4e48\u8f93\u51fa -1\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/closed-number-lcci", "path": "/lcci/05.04.Closed%20Number/README_EN.md", "path_cn": "/lcci/05.04.Closed%20Number/README.md", "tags": ["Bit Manipulation"], "tags_cn": ["\u4f4d\u8fd0\u7b97"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100182, "frontend_id": "\u9762\u8bd5\u9898 05.07", "title": "Exchange", "title_cn": "\u914d\u5bf9\u4ea4\u6362", "content": "<p>Write a program to swap odd and even bits in an integer with as few instructions as possible (e.g., bit 0 and bit 1 are swapped, bit 2 and bit 3 are swapped, and so on).</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: num = 2\uff080b10\uff09\r\n<strong> Output</strong> 1 (0b01)\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: num = 3\r\n<strong> Output</strong>: 3\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= num &lt;=</code>&nbsp;2^30 - 1</li>\r\n\t<li>The result integer fits into 32-bit integer.</li>\r\n</ol>\r\n", "content_cn": "<p>\u914d\u5bf9\u4ea4\u6362\u3002\u7f16\u5199\u7a0b\u5e8f\uff0c\u4ea4\u6362\u67d0\u4e2a\u6574\u6570\u7684\u5947\u6570\u4f4d\u548c\u5076\u6570\u4f4d\uff0c\u5c3d\u91cf\u4f7f\u7528\u8f83\u5c11\u7684\u6307\u4ee4\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f4d0\u4e0e\u4f4d1\u4ea4\u6362\uff0c\u4f4d2\u4e0e\u4f4d3\u4ea4\u6362\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1anum = 2\uff08\u6216\u80050b10\uff09\n<strong> \u8f93\u51fa</strong> 1 (\u6216\u8005 0b01)\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1anum = 3\n<strong> \u8f93\u51fa</strong>\uff1a3\n</pre>\n\n<p> <strong>\u63d0\u793a:</strong></p>\n\n<ol>\n<li><code>num</code>\u7684\u8303\u56f4\u5728[0, 2^30 - 1]\u4e4b\u95f4\uff0c\u4e0d\u4f1a\u53d1\u751f\u6574\u6570\u6ea2\u51fa\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/exchange-lcci", "path": "/lcci/05.07.Exchange/README_EN.md", "path_cn": "/lcci/05.07.Exchange/README.md", "tags": ["Bit Manipulation"], "tags_cn": ["\u4f4d\u8fd0\u7b97"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100181, "frontend_id": "\u9762\u8bd5\u9898 05.06", "title": "Convert Integer", "title_cn": "\u6574\u6570\u8f6c\u6362", "content": "<p>Write a function to determine the number of bits you would need to flip to convert integer A to integer B.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: A = 29 (0b11101), B = 15 (0b01111)\r\n<strong> Output</strong>: 2\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: A = 1\uff0cB = 2\r\n<strong> Output</strong>: 2\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>-2147483648 &lt;= A, B &lt;= 2147483647</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u6574\u6570\u8f6c\u6362\u3002\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u786e\u5b9a\u9700\u8981\u6539\u53d8\u51e0\u4e2a\u4f4d\u624d\u80fd\u5c06\u6574\u6570A\u8f6c\u6210\u6574\u6570B\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1aA = 29 \uff08\u6216\u80050b11101\uff09, B = 15\uff08\u6216\u80050b01111\uff09\n<strong> \u8f93\u51fa</strong>\uff1a2\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1aA = 1\uff0cB = 2\n<strong> \u8f93\u51fa</strong>\uff1a2\n</pre>\n\n<p> <strong>\u63d0\u793a:</strong></p>\n\n<ol>\n<li>A\uff0cB\u8303\u56f4\u5728[-2147483648, 2147483647]\u4e4b\u95f4</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/convert-integer-lcci", "path": "/lcci/05.06.Convert%20Integer/README_EN.md", "path_cn": "/lcci/05.06.Convert%20Integer/README.md", "tags": ["Bit Manipulation"], "tags_cn": ["\u4f4d\u8fd0\u7b97"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100180, "frontend_id": "\u9762\u8bd5\u9898 05.01", "title": "Insert Into Bits", "title_cn": "\u63d2\u5165", "content": "<p>You are given two 32-bit numbers, N and M, and two bit positions, i and j. Write a method to insert M into N such that M starts at bit j and ends at bit i. You can assume that the bits j through i have enough space to fit all of M. That is, if M = 10011, you can assume that there are at least 5 bits between j and i. You would not, for example, have j = 3 and i = 2, because M could not fully fit between bit 3 and bit 2.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: N = 10000000000, M = 10011, i = 2, j = 6\r\n<strong> Output</strong>: N = 10001001100\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>:  N = 0, M = 11111, i = 0, j = 4\r\n<strong> Output</strong>: N = 11111\r\n</pre>\r\n", "content_cn": "<p>\u63d2\u5165\u3002\u7ed9\u5b9a\u4e24\u4e2a32\u4f4d\u7684\u6574\u6570<code>N</code>\u4e0e<code>M</code>\uff0c\u4ee5\u53ca\u8868\u793a\u6bd4\u7279\u4f4d\u7f6e\u7684<code>i</code>\u4e0e<code>j</code>\u3002\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06<code>M</code>\u63d2\u5165<code>N</code>\uff0c\u4f7f\u5f97M\u4eceN\u7684\u7b2cj\u4f4d\u5f00\u59cb\uff0c\u5230\u7b2c<code>i</code>\u4f4d\u7ed3\u675f\u3002\u5047\u5b9a\u4ece<code>j</code>\u4f4d\u5230<code>i</code>\u4f4d\u8db3\u4ee5\u5bb9\u7eb3<code>M</code>\uff0c\u4e5f\u5373\u82e5M = 10 011\uff0c\u90a3\u4e48j\u548ci\u4e4b\u95f4\u81f3\u5c11\u53ef\u5bb9\u7eb35\u4e2a\u4f4d\u3002\u4f8b\u5982\uff0c\u4e0d\u53ef\u80fd\u51fa\u73b0j = 3\u548ci = 2\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u7b2c3\u4f4d\u548c\u7b2c2\u4f4d\u4e4b\u95f4\u653e\u4e0d\u4e0bM\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1aN = 10000000000, M = 10011, i = 2, j = 6\n<strong> \u8f93\u51fa</strong>\uff1aN = 10001001100\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1a N = 0, M = 11111, i = 0, j = 4\n<strong> \u8f93\u51fa</strong>\uff1aN = 11111\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/insert-into-bits-lcci", "path": "/lcci/05.01.Insert%20Into%20Bits/README_EN.md", "path_cn": "/lcci/05.01.Insert%20Into%20Bits/README.md", "tags": ["Bit Manipulation"], "tags_cn": ["\u4f4d\u8fd0\u7b97"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100179, "frontend_id": "\u9762\u8bd5\u9898 04.08", "title": "First Common Ancestor", "title_cn": "\u9996\u4e2a\u5171\u540c\u7956\u5148", "content": "<p>Design an algorithm and write code to find the first common ancestor of two nodes in a binary tree. Avoid storing additional nodes in a data structure. NOTE: This is not necessarily a binary search tree.</p>\r\n\r\n<p>For example, Given the following tree: root = [3,5,1,6,2,0,8,null,null,7,4]</p>\r\n\r\n<pre>\r\n    3\r\n   / \\\r\n  5   1\r\n / \\ / \\\r\n6  2 0  8\r\n  / \\\r\n 7   4\r\n</pre>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\r\n<strong>Input:</strong> 3\r\n<strong>Explanation:</strong> The first common ancestor of node 5 and node 1 is node 3.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong> The first common ancestor of node 5 and node 4 is node 5.</pre>\r\n\r\n<p><strong>Notes:</strong></p>\r\n\r\n<ul>\r\n\t<li>All node values are pairwise distinct.</li>\r\n\t<li>p, q are different node and both can be found in the given tree.</li>\r\n</ul>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\uff0c\u627e\u51fa\u4e8c\u53c9\u6811\u4e2d\u67d0\u4e24\u4e2a\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\u5171\u540c\u7956\u5148\u3002\u4e0d\u5f97\u5c06\u5176\u4ed6\u7684\u8282\u70b9\u5b58\u50a8\u5728\u53e6\u5916\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u3002\u6ce8\u610f\uff1a\u8fd9\u4e0d\u4e00\u5b9a\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p><p>\u4f8b\u5982\uff0c\u7ed9\u5b9a\u5982\u4e0b\u4e8c\u53c9\u6811:  root = [3,5,1,6,2,0,8,null,null,7,4]</p><pre>    3<br>   / &#92<br>  5   1<br> / &#92 / &#92<br>6  2 0  8<br>  / &#92<br> 7   4<br></pre><strong>\u793a\u4f8b 1:</strong><pre><strong>\u8f93\u5165:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1<br><strong>\u8f93\u5165:</strong> 3<br><strong>\u89e3\u91ca:</strong> \u8282\u70b9 5 \u548c\u8282\u70b9 1 \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u8282\u70b9 3\u3002</pre><strong>\u793a\u4f8b 2:</strong><pre><strong>\u8f93\u5165:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4<br><strong>\u8f93\u51fa:</strong> 5<br><strong>\u89e3\u91ca:</strong> \u8282\u70b9 5 \u548c\u8282\u70b9 4 \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u8282\u70b9 5\u3002\u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\u6700\u8fd1\u516c\u5171\u7956\u5148\u8282\u70b9\u53ef\u4ee5\u4e3a\u8282\u70b9\u672c\u8eab\u3002</pre><strong>\u8bf4\u660e:</strong><pre>\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u662f\u552f\u4e00\u7684\u3002<br>p\u3001q \u4e3a\u4e0d\u540c\u8282\u70b9\u4e14\u5747\u5b58\u5728\u4e8e\u7ed9\u5b9a\u7684\u4e8c\u53c9\u6811\u4e2d\u3002</pre>", "url": "", "url_cn": "https://leetcode.cn/problems/first-common-ancestor-lcci", "path": "/lcci/04.08.First%20Common%20Ancestor/README_EN.md", "path_cn": "/lcci/04.08.First%20Common%20Ancestor/README.md", "tags": ["Tree"], "tags_cn": ["\u6811"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100178, "frontend_id": "\u9762\u8bd5\u9898 04.06", "title": "Successor", "title_cn": "\u540e\u7ee7\u8005", "content": "<p>Write an algorithm to find the &quot;next&quot; node (i.e., in-order successor) of a given node in a binary search tree.</p>\r\n\r\n<p>Return <code>null</code> if there&#39;s no &quot;next&quot; node for the given node.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = <code>[2,1,3], p = 1\r\n\r\n  2\r\n / \\\r\n1   3\r\n</code>\r\n<strong>Output:</strong> 2</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> root = <code>[5,3,6,2,4,null,null,1], p = 6\r\n\r\n      5\r\n     / \\\r\n    3   6\r\n   / \\\r\n  2   4\r\n /   \r\n1\r\n</code>\r\n<strong>Output:</strong> null</pre>\r\n", "content_cn": "<p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u627e\u51fa\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u6307\u5b9a\u8282\u70b9\u7684&ldquo;\u4e0b\u4e00\u4e2a&rdquo;\u8282\u70b9\uff08\u4e5f\u5373\u4e2d\u5e8f\u540e\u7ee7\uff09\u3002</p>\n\n<p>\u5982\u679c\u6307\u5b9a\u8282\u70b9\u6ca1\u6709\u5bf9\u5e94\u7684&ldquo;\u4e0b\u4e00\u4e2a&rdquo;\u8282\u70b9\uff0c\u5219\u8fd4\u56de<code>null</code>\u3002</p>\n\n<p><strong>\u793a\u4f8b 1:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> root = <code>[2,1,3], p = 1\n\n  2\n / \\\n1   3\n</code>\n<strong>\u8f93\u51fa:</strong> 2</pre>\n\n<p><strong>\u793a\u4f8b 2:</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> root = <code>[5,3,6,2,4,null,null,1], p = 6\n\n      5\n     / \\\n    3   6\n   / \\\n  2   4\n /   \n1\n</code>\n<strong>\u8f93\u51fa:</strong> null</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/successor-lcci", "path": "/lcci/04.06.Successor/README_EN.md", "path_cn": "/lcci/04.06.Successor/README.md", "tags": ["Tree", "Depth-first Search"], "tags_cn": ["\u6811", "\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100177, "frontend_id": "\u9762\u8bd5\u9898 04.05", "title": "Legal Binary Search Tree", "title_cn": "\u5408\u6cd5\u4e8c\u53c9\u641c\u7d22\u6811", "content": "<p>Implement a function to check if a binary tree is a binary search tree.</p>\r\n\r\n<p><strong>Example&nbsp;1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\n    2\r\n   / \\\r\n  1   3\r\n<strong>Output:</strong> true\r\n</pre>\r\n\r\n<p><strong>Example&nbsp;2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\n    5\r\n   / \\\r\n  1   4\r\n&nbsp;    / \\\r\n&nbsp;   3   6\r\n<strong>Output:</strong> false\r\n<strong>Explanation:</strong> Input: [5,1,4,null,null,3,6].\r\n&nbsp;    the value of root node is 5, but its right child has value 4.</pre>\r\n", "content_cn": "<p>\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u68c0\u67e5\u4e00\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p><strong>\u793a\u4f8b\u00a01:</strong><pre><strong>\u8f93\u5165:</strong><br>    2<br>   / &#92<br>  1   3<br><strong>\u8f93\u51fa:</strong> true<br></pre><strong>\u793a\u4f8b\u00a02:</strong><pre><strong>\u8f93\u5165:</strong><br>    5<br>   / &#92<br>  1   4<br>\u00a0    / &#92<br>\u00a0   3   6<br><strong>\u8f93\u51fa:</strong> false<br><strong>\u89e3\u91ca:</strong> \u8f93\u5165\u4e3a: [5,1,4,null,null,3,6]\u3002<br>\u00a0    \u6839\u8282\u70b9\u7684\u503c\u4e3a 5 \uff0c\u4f46\u662f\u5176\u53f3\u5b50\u8282\u70b9\u503c\u4e3a 4 \u3002</pre>", "url": "", "url_cn": "https://leetcode.cn/problems/legal-binary-search-tree-lcci", "path": "/lcci/04.05.Legal%20Binary%20Search%20Tree/README_EN.md", "path_cn": "/lcci/04.05.Legal%20Binary%20Search%20Tree/README.md", "tags": ["Tree", "Depth-first Search"], "tags_cn": ["\u6811", "\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100176, "frontend_id": "\u9762\u8bd5\u9898 04.04", "title": "Check Balance", "title_cn": "\u68c0\u67e5\u5e73\u8861\u6027", "content": "<p>Implement a function to check if a binary tree is balanced. For the purposes of this question, a balanced tree is defined to be a tree such that the heights of the two subtrees of any node never differ by more than one.</p>\r\n\r\n<p><br />\r\n<strong>Example 1:</strong></p>\r\n\r\n<pre>\r\nGiven tree [3,9,20,null,null,15,7]\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\nreturn true.</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\nGiven [1,2,2,3,3,null,null,4,4]\r\n      1\r\n     / \\\r\n    2   2\r\n   / \\\r\n  3   3\r\n / \\\r\n4   4\r\nreturn&nbsp;false.</pre>\r\n\r\n<p>&nbsp;</p>\r\n", "content_cn": "<p>\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u68c0\u67e5\u4e8c\u53c9\u6811\u662f\u5426\u5e73\u8861\u3002\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u5e73\u8861\u6811\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\uff0c\u5176\u4e24\u68f5\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc7 1\u3002</p><br><strong>\u793a\u4f8b 1:</strong><pre>\u7ed9\u5b9a\u4e8c\u53c9\u6811 [3,9,20,null,null,15,7]<br>    3<br>   / &#92<br>  9  20<br>    /  &#92<br>   15   7<br>\u8fd4\u56de true \u3002</pre><strong>\u793a\u4f8b 2:</strong><br><pre>\u7ed9\u5b9a\u4e8c\u53c9\u6811 [1,2,2,3,3,null,null,4,4]<br>      1<br>     / &#92<br>    2   2<br>   / &#92<br>  3   3<br> / &#92<br>4   4<br>\u8fd4\u56de\u00a0false \u3002</pre>", "url": "", "url_cn": "https://leetcode.cn/problems/check-balance-lcci", "path": "/lcci/04.04.Check%20Balance/README_EN.md", "path_cn": "/lcci/04.04.Check%20Balance/README.md", "tags": ["Tree", "Depth-first Search"], "tags_cn": ["\u6811", "\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100175, "frontend_id": "\u9762\u8bd5\u9898 04.03", "title": "List of Depth", "title_cn": "\u7279\u5b9a\u6df1\u5ea6\u8282\u70b9\u94fe\u8868", "content": "<p>Given a binary tree, design an algorithm which creates a linked list of all the nodes at each depth (e.g., if you have a tree with depth D, you&#39;ll have D linked lists). Return a array containing all the linked lists.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>[1,2,3,4,5,null,7,8]\r\n\r\n        1\r\n       /  \\ \r\n      2    3\r\n     / \\    \\ \r\n    4   5    7\r\n   /\r\n  8\r\n\r\n<strong>Output: </strong>[[1],[2,3],[4,5,7],[8]]\r\n</pre>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u521b\u5efa\u542b\u6709\u67d0\u4e00\u6df1\u5ea6\u4e0a\u6240\u6709\u8282\u70b9\u7684\u94fe\u8868\uff08\u6bd4\u5982\uff0c\u82e5\u4e00\u68f5\u6811\u7684\u6df1\u5ea6\u4e3a <code>D</code>\uff0c\u5219\u4f1a\u521b\u5efa\u51fa <code>D</code> \u4e2a\u94fe\u8868\uff09\u3002\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u6709\u6df1\u5ea6\u7684\u94fe\u8868\u7684\u6570\u7ec4\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a</strong>[1,2,3,4,5,null,7,8]\n\n        1\n       /  \\ \n      2    3\n     / \\    \\ \n    4   5    7\n   /\n  8\n\n<strong>\u8f93\u51fa\uff1a</strong>[[1],[2,3],[4,5,7],[8]]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/list-of-depth-lcci", "path": "/lcci/04.03.List%20of%20Depth/README_EN.md", "path_cn": "/lcci/04.03.List%20of%20Depth/README.md", "tags": ["Tree", "Breadth-first Search"], "tags_cn": ["\u6811", "\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100174, "frontend_id": "\u9762\u8bd5\u9898 04.02", "title": "Minimum Height Tree", "title_cn": "\u6700\u5c0f\u9ad8\u5ea6\u6811", "content": "<p>Given a sorted (increasing order) array with unique integer elements, write an algo&shy;rithm to create a binary search tree with minimal height.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\nGiven sorted array: [-10,-3,0,5,9],\r\n\r\nOne possible answer is: [0,-3,9,-10,null,5]\uff0cwhich represents the following tree: \r\n\r\n          0 \r\n         / \\ \r\n       -3   9 \r\n       /   / \r\n     -10  5 \r\n</pre>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4\uff0c\u5143\u7d20\u5404\u4e0d\u76f8\u540c\u4e14\u6309\u5347\u5e8f\u6392\u5217\uff0c\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\uff0c\u521b\u5efa\u4e00\u68f5\u9ad8\u5ea6\u6700\u5c0f\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p><strong>\u793a\u4f8b:</strong><pre>\u7ed9\u5b9a\u6709\u5e8f\u6570\u7ec4: [-10,-3,0,5,9],<br><br>\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u662f\uff1a[0,-3,9,-10,null,5]\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u4e0b\u9762\u8fd9\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff1a<br><br>          0 <br>         / &#92 <br>       -3   9 <br>       /   / <br>     -10  5 <br></pre>", "url": "", "url_cn": "https://leetcode.cn/problems/minimum-height-tree-lcci", "path": "/lcci/04.02.Minimum%20Height%20Tree/README_EN.md", "path_cn": "/lcci/04.02.Minimum%20Height%20Tree/README.md", "tags": ["Tree", "Depth-first Search"], "tags_cn": ["\u6811", "\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100173, "frontend_id": "\u9762\u8bd5\u9898 03.05", "title": "Sort of Stacks", "title_cn": "\u6808\u6392\u5e8f", "content": "<p>Write a program to sort a stack such that the smallest items are on the top. You can use an additional temporary stack, but you may not copy the elements into any other data structure (such as an array). The stack supports the following operations: <code>push</code>, <code>pop</code>, <code>peek</code>, and <code>isEmpty</code>. When the stack is empty, <code>peek</code> should return -1.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: \r\n[&quot;SortedStack&quot;, &quot;push&quot;, &quot;push&quot;, &quot;peek&quot;, &quot;pop&quot;, &quot;peek&quot;]\r\n[[], [1], [2], [], [], []]\r\n<strong> Output</strong>: \r\n[null,null,null,1,null,2]\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>:  \r\n[&quot;SortedStack&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;push&quot;, &quot;pop&quot;, &quot;isEmpty&quot;]\r\n[[], [], [], [1], [], []]\r\n<strong> Output</strong>: \r\n[null,null,null,null,null,true]\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li>The total number of elements in the stack is within the range [0, 5000].</li>\r\n</ol>\r\n", "content_cn": "<p>\u6808\u6392\u5e8f\u3002 \u7f16\u5199\u7a0b\u5e8f\uff0c\u5bf9\u6808\u8fdb\u884c\u6392\u5e8f\u4f7f\u6700\u5c0f\u5143\u7d20\u4f4d\u4e8e\u6808\u9876\u3002\u6700\u591a\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a\u5176\u4ed6\u7684\u4e34\u65f6\u6808\u5b58\u653e\u6570\u636e\uff0c\u4f46\u4e0d\u5f97\u5c06\u5143\u7d20\u590d\u5236\u5230\u522b\u7684\u6570\u636e\u7ed3\u6784\uff08\u5982\u6570\u7ec4\uff09\u4e2d\u3002\u8be5\u6808\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a<code>push</code>\u3001<code>pop</code>\u3001<code>peek</code> \u548c <code>isEmpty</code>\u3002\u5f53\u6808\u4e3a\u7a7a\u65f6\uff0c<code>peek</code>&nbsp;\u8fd4\u56de -1\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a\n[&quot;SortedStack&quot;, &quot;push&quot;, &quot;push&quot;, &quot;peek&quot;, &quot;pop&quot;, &quot;peek&quot;]\n[[], [1], [2], [], [], []]\n<strong> \u8f93\u51fa</strong>\uff1a\n[null,null,null,1,null,2]\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a \n[&quot;SortedStack&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;push&quot;, &quot;pop&quot;, &quot;isEmpty&quot;]\n[[], [], [], [1], [], []]\n<strong> \u8f93\u51fa</strong>\uff1a\n[null,null,null,null,null,true]\n</pre>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u6808\u4e2d\u7684\u5143\u7d20\u6570\u76ee\u5728[0, 5000]\u8303\u56f4\u5185\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/sort-of-stacks-lcci", "path": "/lcci/03.05.Sort%20of%20Stacks/README_EN.md", "path_cn": "/lcci/03.05.Sort%20of%20Stacks/README.md", "tags": ["Design"], "tags_cn": ["\u8bbe\u8ba1"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100172, "frontend_id": "\u9762\u8bd5\u9898 03.01", "title": "Three in One", "title_cn": "\u4e09\u5408\u4e00", "content": "<p>Describe how you could use a single array to implement three stacks.</p>\r\n\r\n<p>Yout should implement&nbsp;<code>push(stackNum, value)</code>\u3001<code>pop(stackNum)</code>\u3001<code>isEmpty(stackNum)</code>\u3001<code>peek(stackNum)</code>&nbsp;methods.&nbsp;<code>stackNum<font face=\"sans-serif, Arial, Verdana, Trebuchet MS\">&nbsp;</font></code><font face=\"sans-serif, Arial, Verdana, Trebuchet MS\">is the index of the stack.&nbsp;</font><code>value</code>&nbsp;is the value that pushed to the stack.</p>\r\n\r\n<p>The constructor requires a&nbsp;<code>stackSize</code>&nbsp;parameter, which represents the size of each stack.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: \r\n[&quot;TripleInOne&quot;, &quot;push&quot;, &quot;push&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;isEmpty&quot;]\r\n[[1], [0, 1], [0, 2], [0], [0], [0], [0]]\r\n<strong> Output</strong>: \r\n[null, null, null, 1, -1, -1, true]\r\n<b>Explanation</b>: When the stack is empty, `pop, peek` return -1. When the stack is full, `push` does nothing.\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: \r\n[&quot;TripleInOne&quot;, &quot;push&quot;, &quot;push&quot;, &quot;push&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;peek&quot;]\r\n[[2], [0, 1], [0, 2], [0, 3], [0], [0], [0], [0]]\r\n<strong> Output</strong>: \r\n[null, null, null, null, 2, 1, -1, -1]\r\n</pre>\r\n", "content_cn": "<p>\u4e09\u5408\u4e00\u3002\u63cf\u8ff0\u5982\u4f55\u53ea\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u4e09\u4e2a\u6808\u3002</p>\n\n<p>\u4f60\u5e94\u8be5\u5b9e\u73b0<code>push(stackNum, value)</code>\u3001<code>pop(stackNum)</code>\u3001<code>isEmpty(stackNum)</code>\u3001<code>peek(stackNum)</code>\u65b9\u6cd5\u3002<code>stackNum</code>\u8868\u793a\u6808\u4e0b\u6807\uff0c<code>value</code>\u8868\u793a\u538b\u5165\u7684\u503c\u3002</p>\n\n<p>\u6784\u9020\u51fd\u6570\u4f1a\u4f20\u5165\u4e00\u4e2a<code>stackSize</code>\u53c2\u6570\uff0c\u4ee3\u8868\u6bcf\u4e2a\u6808\u7684\u5927\u5c0f\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a\n[&quot;TripleInOne&quot;, &quot;push&quot;, &quot;push&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;isEmpty&quot;]\n[[1], [0, 1], [0, 2], [0], [0], [0], [0]]\n<strong> \u8f93\u51fa</strong>\uff1a\n[null, null, null, 1, -1, -1, true]\n<strong>\u8bf4\u660e</strong>\uff1a\u5f53\u6808\u4e3a\u7a7a\u65f6`pop, peek`\u8fd4\u56de-1\uff0c\u5f53\u6808\u6ee1\u65f6`push`\u4e0d\u538b\u5165\u5143\u7d20\u3002\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a\n[&quot;TripleInOne&quot;, &quot;push&quot;, &quot;push&quot;, &quot;push&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;pop&quot;, &quot;peek&quot;]\n[[2], [0, 1], [0, 2], [0, 3], [0], [0], [0], [0]]\n<strong> \u8f93\u51fa</strong>\uff1a\n[null, null, null, null, 2, 1, -1, -1]\n</pre>\n", "url": "", "url_cn": "https://leetcode.cn/problems/three-in-one-lcci", "path": "/lcci/03.01.Three%20in%20One/README_EN.md", "path_cn": "/lcci/03.01.Three%20in%20One/README.md", "tags": ["Design"], "tags_cn": ["\u8bbe\u8ba1"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100171, "frontend_id": "\u9762\u8bd5\u9898 04.01", "title": "Route Between Nodes", "title_cn": "\u8282\u70b9\u95f4\u901a\u8def", "content": "<p>Given a directed graph, design an algorithm to find out whether there is a route between two nodes.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: n = 3, graph = [[0, 1], [0, 2], [1, 2], [1, 2]], start = 0, target = 2\r\n<strong> Output</strong>: true\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: n = 5, graph = [[0, 1], [0, 2], [0, 4], [0, 4], [0, 1], [1, 3], [1, 4], [1, 3], [2, 3], [3, 4]], start = 0, target = 4\r\n<strong> Output</strong> true\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= n &lt;= 100000</code></li>\r\n\t<li>All node numbers are within the range [0, n].</li>\r\n\t<li>There might be self cycles and duplicated edges.</li>\r\n</ol>\r\n", "content_cn": "<p>\u8282\u70b9\u95f4\u901a\u8def\u3002\u7ed9\u5b9a\u6709\u5411\u56fe\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u627e\u51fa\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u4e00\u6761\u8def\u5f84\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1an = 3, graph = [[0, 1], [0, 2], [1, 2], [1, 2]], start = 0, target = 2\n<strong> \u8f93\u51fa</strong>\uff1atrue\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1an = 5, graph = [[0, 1], [0, 2], [0, 4], [0, 4], [0, 1], [1, 3], [1, 4], [1, 3], [2, 3], [3, 4]], start = 0, target = 4\n<strong> \u8f93\u51fa</strong> true\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u8282\u70b9\u6570\u91cfn\u5728[0, 1e5]\u8303\u56f4\u5185\u3002</li>\n\t<li>\u8282\u70b9\u7f16\u53f7\u5927\u4e8e\u7b49\u4e8e 0 \u5c0f\u4e8e n\u3002</li>\n\t<li>\u56fe\u4e2d\u53ef\u80fd\u5b58\u5728\u81ea\u73af\u548c\u5e73\u884c\u8fb9\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/route-between-nodes-lcci", "path": "/lcci/04.01.Route%20Between%20Nodes/README_EN.md", "path_cn": "/lcci/04.01.Route%20Between%20Nodes/README.md", "tags": ["Graph"], "tags_cn": ["\u56fe"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100170, "frontend_id": "\u9762\u8bd5\u9898 03.04", "title": "Implement Queue using Stacks", "title_cn": "\u5316\u6808\u4e3a\u961f", "content": "<p>Implement a MyQueue class which implements a queue using two stacks.</p>\r\n&nbsp;\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\nMyQueue queue = new MyQueue();\r\n\r\nqueue.push(1);\r\nqueue.push(2);\r\nqueue.peek();  // return 1\r\nqueue.pop();   // return 1\r\nqueue.empty(); // return false</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Notes:</b></p>\r\n\r\n<ul>\r\n\t<li>You must use&nbsp;<i>only</i>&nbsp;standard operations of a stack -- which means only&nbsp;<code>push to top</code>,&nbsp;<code>peek/pop from top</code>,&nbsp;<code>size</code>, and&nbsp;<code>is empty</code>&nbsp;operations are valid.</li>\r\n\t<li>Depending on your language, stack may not be supported natively. You may simulate a stack by using a list or deque (double-ended queue), as long as you use only standard operations of a stack.</li>\r\n\t<li>You may assume that all operations are valid (for example, no pop or peek operations will be called on an empty queue).</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n", "content_cn": "<p>\u5b9e\u73b0\u4e00\u4e2aMyQueue\u7c7b\uff0c\u8be5\u7c7b\u7528\u4e24\u4e2a\u6808\u6765\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u3002</p><br><p><strong>\u793a\u4f8b\uff1a</strong><pre>MyQueue queue = new MyQueue();<br><br>queue.push(1);<br>queue.push(2);<br>queue.peek();  // \u8fd4\u56de 1<br>queue.pop();   // \u8fd4\u56de 1<br>queue.empty(); // \u8fd4\u56de false</pre></p><br><p><strong>\u8bf4\u660e\uff1a</strong><br><ul><li>\u4f60\u53ea\u80fd\u4f7f\u7528\u6807\u51c6\u7684\u6808\u64cd\u4f5c -- \u4e5f\u5c31\u662f\u53ea\u6709 <code>push to top</code>, <code>peek/pop from top</code>, <code>size</code> \u548c <code>is empty</code> \u64cd\u4f5c\u662f\u5408\u6cd5\u7684\u3002</li><li>\u4f60\u6240\u4f7f\u7528\u7684\u8bed\u8a00\u4e5f\u8bb8\u4e0d\u652f\u6301\u6808\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 list \u6216\u8005 deque\uff08\u53cc\u7aef\u961f\u5217\uff09\u6765\u6a21\u62df\u4e00\u4e2a\u6808\uff0c\u53ea\u8981\u662f\u6807\u51c6\u7684\u6808\u64cd\u4f5c\u5373\u53ef\u3002</li><li>\u5047\u8bbe\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u6709\u6548\u7684 \uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u7a7a\u7684\u961f\u5217\u4e0d\u4f1a\u8c03\u7528 pop \u6216\u8005 peek \u64cd\u4f5c\uff09\u3002</li></ul></p>", "url": "", "url_cn": "https://leetcode.cn/problems/implement-queue-using-stacks-lcci", "path": "/lcci/03.04.Implement%20Queue%20using%20Stacks/README_EN.md", "path_cn": "/lcci/03.04.Implement%20Queue%20using%20Stacks/README.md", "tags": ["Stack"], "tags_cn": ["\u6808"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100169, "frontend_id": "\u9762\u8bd5\u9898 03.02", "title": "Min Stack", "title_cn": "\u6808\u7684\u6700\u5c0f\u503c", "content": "<p>How would you design a stack which, in addition to push and pop, has a function min which returns the minimum element? Push, pop and min should all operate in 0(1) time.</p>\r\n\r\n<p><strong>Example: </strong></p>\r\n\r\n<pre>\r\nMinStack minStack = new MinStack();\r\nminStack.push(-2);\r\nminStack.push(0);\r\nminStack.push(-3);\r\nminStack.getMin();   --&gt; return -3.\r\nminStack.pop();\r\nminStack.top();      --&gt; return 0.\r\nminStack.getMin();   --&gt; return -2.</pre>\r\n", "content_cn": "<p>\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u6808\uff0c\u9664\u4e86\u5e38\u89c4\u6808\u652f\u6301\u7684pop\u4e0epush\u51fd\u6570\u4ee5\u5916\uff0c\u8fd8\u652f\u6301min\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u6808\u5143\u7d20\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u6267\u884cpush\u3001pop\u548cmin\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u4e3aO(1)\u3002</p><br><p><strong>\u793a\u4f8b\uff1a</strong><pre>MinStack minStack = new MinStack();<br>minStack.push(-2);<br>minStack.push(0);<br>minStack.push(-3);<br>minStack.getMin();   --> \u8fd4\u56de -3.<br>minStack.pop();<br>minStack.top();      --> \u8fd4\u56de 0.<br>minStack.getMin();   --> \u8fd4\u56de -2.</pre></p>", "url": "", "url_cn": "https://leetcode.cn/problems/min-stack-lcci", "path": "/lcci/03.02.Min%20Stack/README_EN.md", "path_cn": "/lcci/03.02.Min%20Stack/README.md", "tags": ["Stack"], "tags_cn": ["\u6808"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100168, "frontend_id": "\u9762\u8bd5\u9898 02.08", "title": "Linked List Cycle", "title_cn": "\u73af\u8def\u68c0\u6d4b", "content": "<p>Given a circular linked list, implement an algorithm that returns the node at the beginning of the loop.</p>\r\n\r\n<p>Circular linked list: A (corrupt) linked list in which a node&#39;s next pointer points to an earlier node, so as to make a loop in the linked list.</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>head = [3,2,0,-4], pos = 1\r\n<strong>Output: </strong>tail connects to node index 1</pre>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>head = [1,2], pos = 0\r\n<strong>Output: </strong>tail connects to node index 0</pre>\r\n\r\n<p><strong>Example 3: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>head = [1], pos = -1\r\n<strong>Output: </strong>no cycle</pre>\r\n\r\n<p><strong>Follow Up: </strong><br />\r\nCan you solve it without using additional space?</p>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e00\u4e2a\u6709\u73af\u94fe\u8868\uff0c\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u8fd4\u56de\u73af\u8def\u7684\u5f00\u5934\u8282\u70b9\u3002<br>\u6709\u73af\u94fe\u8868\u7684\u5b9a\u4e49\uff1a\u5728\u94fe\u8868\u4e2d\u67d0\u4e2a\u8282\u70b9\u7684next\u5143\u7d20\u6307\u5411\u5728\u5b83\u524d\u9762\u51fa\u73b0\u8fc7\u7684\u8282\u70b9\uff0c\u5219\u8868\u660e\u8be5\u94fe\u8868\u5b58\u5728\u73af\u8def\u3002</p><br><p><strong>\u793a\u4f8b 1\uff1a</strong><pre><strong>\u8f93\u5165\uff1a</strong>head = [3,2,0,-4], pos = 1<br><strong>\u8f93\u51fa\uff1a</strong>tail connects to node index 1<br><strong>\u89e3\u91ca\uff1a</strong>\u94fe\u8868\u4e2d\u6709\u4e00\u4e2a\u73af\uff0c\u5176\u5c3e\u90e8\u8fde\u63a5\u5230\u7b2c\u4e8c\u4e2a\u8282\u70b9\u3002</pre></p><br><p><strong>\u793a\u4f8b 2\uff1a</strong><pre><strong>\u8f93\u5165\uff1a</strong>head = [1,2], pos = 0<br><strong>\u8f93\u51fa\uff1a</strong>tail connects to node index 0<br><strong>\u89e3\u91ca\uff1a</strong>\u94fe\u8868\u4e2d\u6709\u4e00\u4e2a\u73af\uff0c\u5176\u5c3e\u90e8\u8fde\u63a5\u5230\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002</pre></p><br><p><strong>\u793a\u4f8b 3\uff1a</strong><pre><strong>\u8f93\u5165\uff1a</strong>head = [1], pos = -1<br><strong>\u8f93\u51fa\uff1a</strong>no cycle<br><strong>\u89e3\u91ca\uff1a</strong>\u94fe\u8868\u4e2d\u6ca1\u6709\u73af\u3002</pre></p><br><p><strong>\u8fdb\u9636\uff1a</strong><br>\u4f60\u662f\u5426\u53ef\u4ee5\u4e0d\u7528\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u6b64\u9898\uff1f</p>", "url": "", "url_cn": "https://leetcode.cn/problems/linked-list-cycle-lcci", "path": "/lcci/02.08.Linked%20List%20Cycle/README_EN.md", "path_cn": "/lcci/02.08.Linked%20List%20Cycle/README.md", "tags": ["Linked List"], "tags_cn": ["\u94fe\u8868"], "difficulty": "Medium", "difficulty_cn": "\u4e2d\u7b49", "category": "lcci"}, {"id": 100167, "frontend_id": "\u9762\u8bd5\u9898 02.07", "title": "Intersection of Two Linked Lists", "title_cn": "\u94fe\u8868\u76f8\u4ea4", "content": "<p>Given two (singly) linked lists, determine if the two lists intersect. Return the inter&shy; secting node. Note that the intersection is defined based on reference, not value. That is, if the kth node of the first linked list is the exact same node (by reference) as the jth node of the second linked list, then they are intersecting.</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3\r\n<strong>Output: </strong>Reference of the node with value = 8\r\n<strong>Input Explanation:</strong> The intersected node&#39;s value is 8 (note that this must not be 0 if the two lists intersect). From the head of A, it reads as [4,1,8,4,5]. From the head of B, it reads as [5,0,1,8,4,5]. There are 2 nodes before the intersected node in A; There are 3 nodes before the intersected node in B.</pre>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>intersectVal = 2, listA = [0,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\r\n<strong>Output: </strong>Reference of the node with value = 2\r\n<strong>Input Explanation:</strong>&nbsp;The intersected node&#39;s value is 2 (note that this must not be 0 if the two lists intersect). From the head of A, it reads as [0,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes before the intersected node in A; There are 1 node before the intersected node in B.</pre>\r\n\r\n<p><strong>Example 3: </strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\r\n<strong>Output: </strong>null\r\n<strong>Input Explanation:</strong> From the head of A, it reads as [2,6,4]. From the head of B, it reads as [1,5]. Since the two lists do not intersect, intersectVal must be 0, while skipA and skipB can be arbitrary values.\r\n<strong>Explanation:</strong> The two lists do not intersect, so return null.</pre>\r\n\r\n<p><b>Notes:</b></p>\r\n\r\n<ul>\r\n\t<li>If the two linked lists have no intersection at all, return&nbsp;<code>null</code>.</li>\r\n\t<li>The linked lists must retain their original structure after the function returns.</li>\r\n\t<li>You may assume there are no cycles anywhere in the entire linked structure.</li>\r\n\t<li>Your code should preferably run in O(n) time and use only O(1) memory.</li>\r\n</ul>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e24\u4e2a\uff08\u5355\u5411\uff09\u94fe\u8868\uff0c\u5224\u5b9a\u5b83\u4eec\u662f\u5426\u76f8\u4ea4\u5e76\u8fd4\u56de\u4ea4\u70b9\u3002\u8bf7\u6ce8\u610f\u76f8\u4ea4\u7684\u5b9a\u4e49\u57fa\u4e8e\u8282\u70b9\u7684\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e\u8282\u70b9\u7684\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u94fe\u8868\u7684\u7b2ck\u4e2a\u8282\u70b9\u4e0e\u53e6\u4e00\u4e2a\u94fe\u8868\u7684\u7b2cj\u4e2a\u8282\u70b9\u662f\u540c\u4e00\u8282\u70b9\uff08\u5f15\u7528\u5b8c\u5168\u76f8\u540c\uff09\uff0c\u5219\u8fd9\u4e24\u4e2a\u94fe\u8868\u76f8\u4ea4\u3002</p><br><p><strong>\u793a\u4f8b 1\uff1a</strong><pre><strong>\u8f93\u5165\uff1a</strong>intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3<br><strong>\u8f93\u51fa\uff1a</strong>Reference of the node with value = 8<br><strong>\u8f93\u5165\u89e3\u91ca\uff1a</strong>\u76f8\u4ea4\u8282\u70b9\u7684\u503c\u4e3a 8 \uff08\u6ce8\u610f\uff0c\u5982\u679c\u4e24\u4e2a\u5217\u8868\u76f8\u4ea4\u5219\u4e0d\u80fd\u4e3a 0\uff09\u3002\u4ece\u5404\u81ea\u7684\u8868\u5934\u5f00\u59cb\u7b97\u8d77\uff0c\u94fe\u8868 A \u4e3a [4,1,8,4,5]\uff0c\u94fe\u8868 B \u4e3a [5,0,1,8,4,5]\u3002\u5728 A \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 2 \u4e2a\u8282\u70b9\uff1b\u5728 B \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 3 \u4e2a\u8282\u70b9\u3002</pre></p><br><p><strong>\u793a\u4f8b 2\uff1a</strong><pre><strong>\u8f93\u5165\uff1a</strong>intersectVal = 2, listA = [0,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1<br><strong>\u8f93\u51fa\uff1a</strong>Reference of the node with value = 2<br><strong>\u8f93\u5165\u89e3\u91ca\uff1a</strong>\u76f8\u4ea4\u8282\u70b9\u7684\u503c\u4e3a 2 \uff08\u6ce8\u610f\uff0c\u5982\u679c\u4e24\u4e2a\u5217\u8868\u76f8\u4ea4\u5219\u4e0d\u80fd\u4e3a 0\uff09\u3002\u4ece\u5404\u81ea\u7684\u8868\u5934\u5f00\u59cb\u7b97\u8d77\uff0c\u94fe\u8868 A \u4e3a [0,9,1,2,4]\uff0c\u94fe\u8868 B \u4e3a [3,2,4]\u3002\u5728 A \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 3 \u4e2a\u8282\u70b9\uff1b\u5728 B \u4e2d\uff0c\u76f8\u4ea4\u8282\u70b9\u524d\u6709 1 \u4e2a\u8282\u70b9\u3002</pre></p><br><p><strong>\u793a\u4f8b 3\uff1a</strong><pre><strong>\u8f93\u5165\uff1a</strong>intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2<br><strong>\u8f93\u51fa\uff1a</strong>null<br><strong>\u8f93\u5165\u89e3\u91ca\uff1a</strong>\u4ece\u5404\u81ea\u7684\u8868\u5934\u5f00\u59cb\u7b97\u8d77\uff0c\u94fe\u8868 A \u4e3a [2,6,4]\uff0c\u94fe\u8868 B \u4e3a [1,5]\u3002\u7531\u4e8e\u8fd9\u4e24\u4e2a\u94fe\u8868\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5 intersectVal \u5fc5\u987b\u4e3a 0\uff0c\u800c skipA \u548c skipB \u53ef\u4ee5\u662f\u4efb\u610f\u503c\u3002<br><strong>\u89e3\u91ca\uff1a</strong>\u8fd9\u4e24\u4e2a\u94fe\u8868\u4e0d\u76f8\u4ea4\uff0c\u56e0\u6b64\u8fd4\u56de null\u3002</pre></p><br><p><strong>\u6ce8\u610f\uff1a</strong></p><ul><li>\u5982\u679c\u4e24\u4e2a\u94fe\u8868\u6ca1\u6709\u4ea4\u70b9\uff0c\u8fd4\u56de <code>null</code> \u3002</li><li>\u5728\u8fd4\u56de\u7ed3\u679c\u540e\uff0c\u4e24\u4e2a\u94fe\u8868\u4ecd\u987b\u4fdd\u6301\u539f\u6709\u7684\u7ed3\u6784\u3002</li><li>\u53ef\u5047\u5b9a\u6574\u4e2a\u94fe\u8868\u7ed3\u6784\u4e2d\u6ca1\u6709\u5faa\u73af\u3002</li><li>\u7a0b\u5e8f\u5c3d\u91cf\u6ee1\u8db3 O(<em>n</em>) \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e14\u4ec5\u7528 O(<em>1</em>) \u5185\u5b58\u3002</li></ul>", "url": "", "url_cn": "https://leetcode.cn/problems/intersection-of-two-linked-lists-lcci", "path": "/lcci/02.07.Intersection%20of%20Two%20Linked%20Lists/README_EN.md", "path_cn": "/lcci/02.07.Intersection%20of%20Two%20Linked%20Lists/README.md", "tags": ["Linked List"], "tags_cn": ["\u94fe\u8868"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100164, "frontend_id": "\u9762\u8bd5\u9898 02.06", "title": "Palindrome Linked List", "title_cn": "\u56de\u6587\u94fe\u8868", "content": "<p>Implement a function to check if a linked list is a palindrome.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1: </strong></p>\r\n\r\n<pre>\r\n<strong>Input:  </strong>1-&gt;2\r\n<strong>Output: </strong> false \r\n</pre>\r\n\r\n<p><strong>Example 2: </strong></p>\r\n\r\n<pre>\r\n<strong>Input:  </strong>1-&gt;2-&gt;2-&gt;1\r\n<strong>Output: </strong> true \r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Follow up:</b><br />\r\nCould you do it in O(n) time and O(1) space?</p>\r\n", "content_cn": "<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u68c0\u67e5\u8f93\u5165\u7684\u94fe\u8868\u662f\u5426\u662f\u56de\u6587\u7684\u3002</p>\n\n<p>&nbsp;</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>1-&gt;2\n<strong>\u8f93\u51fa\uff1a</strong> false \n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165\uff1a </strong>1-&gt;2-&gt;2-&gt;1\n<strong>\u8f93\u51fa\uff1a</strong> true \n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>\u8fdb\u9636\uff1a</strong><br>\n\u4f60\u80fd\u5426\u7528 O(n) \u65f6\u95f4\u590d\u6742\u5ea6\u548c O(1) \u7a7a\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u6b64\u9898\uff1f</p>\n", "url": "", "url_cn": "https://leetcode.cn/problems/palindrome-linked-list-lcci", "path": "/lcci/02.06.Palindrome%20Linked%20List/README_EN.md", "path_cn": "/lcci/02.06.Palindrome%20Linked%20List/README.md", "tags": ["Linked List"], "tags_cn": ["\u94fe\u8868"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100163, "frontend_id": "\u9762\u8bd5\u9898 02.01", "title": "Remove Duplicate Node", "title_cn": "\u79fb\u9664\u91cd\u590d\u8282\u70b9", "content": "<p>Write code to remove duplicates from an unsorted linked list.</p>\r\n\r\n<p><strong>Example1:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: [1, 2, 3, 3, 2, 1]\r\n<strong> Output</strong>: [1, 2, 3]\r\n</pre>\r\n\r\n<p><strong>Example2:</strong></p>\r\n\r\n<pre>\r\n<strong> Input</strong>: [1, 1, 1, 1, 2]\r\n<strong> Output</strong>: [1, 2]\r\n</pre>\r\n\r\n<p><strong>Note: </strong></p>\r\n\r\n<ol>\r\n\t<li>The length of the list is within the range[0, 20000].</li>\r\n\t<li>The values of the list elements are within the range [0, 20000].</li>\r\n</ol>\r\n\r\n<p><strong>Follow Up: </strong></p>\r\n\r\n<p>How would you solve this problem if a temporary buffer is not allowed?</p>\r\n", "content_cn": "<p>\u7f16\u5199\u4ee3\u7801\uff0c\u79fb\u9664\u672a\u6392\u5e8f\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u8282\u70b9\u3002\u4fdd\u7559\u6700\u5f00\u59cb\u51fa\u73b0\u7684\u8282\u70b9\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1a[1, 2, 3, 3, 2, 1]\n<strong> \u8f93\u51fa</strong>\uff1a[1, 2, 3]\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1a[1, 1, 1, 1, 2]\n<strong> \u8f93\u51fa</strong>\uff1a[1, 2]\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n<li>\u94fe\u8868\u957f\u5ea6\u5728[0, 20000]\u8303\u56f4\u5185\u3002</li>\n<li>\u94fe\u8868\u5143\u7d20\u5728[0, 20000]\u8303\u56f4\u5185\u3002</li>\n</ol>\n\n<p> <strong>\u8fdb\u9636\uff1a</strong></p>\n\n<p>\u5982\u679c\u4e0d\u5f97\u4f7f\u7528\u4e34\u65f6\u7f13\u51b2\u533a\uff0c\u8be5\u600e\u4e48\u89e3\u51b3\uff1f</p>\n", "url": "", "url_cn": "https://leetcode.cn/problems/remove-duplicate-node-lcci", "path": "/lcci/02.01.Remove%20Duplicate%20Node/README_EN.md", "path_cn": "/lcci/02.01.Remove%20Duplicate%20Node/README.md", "tags": ["Linked List"], "tags_cn": ["\u94fe\u8868"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100162, "frontend_id": "\u9762\u8bd5\u9898 01.09", "title": "String Rotation", "title_cn": "\u5b57\u7b26\u4e32\u8f6e\u8f6c", "content": "<p>Given two strings, <code>s1</code>&nbsp;and <code>s2</code>, write code to check if <code>s2</code> is a rotation of <code>s1</code> (e.g.,&quot;waterbottle&quot; is a rotation of&quot;erbottlewat&quot;).&nbsp;Can you use&nbsp;only one call to the method that&nbsp;checks if one word is a substring of another?</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>s1 = &quot;waterbottle&quot;, s2 = &quot;erbottlewat&quot;\r\n<strong>Output: </strong>True\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>s1 = &quot;aa&quot;, &quot;aba&quot;\r\n<strong>Output: </strong>False\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code><font face=\"monospace\">0 &lt;= s1.length, s1.length &lt;=&nbsp;</font>100000</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u5b57\u7b26\u4e32\u8f6e\u8f6c\u3002\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32<code>s1</code>\u548c<code>s2</code>\uff0c\u8bf7\u7f16\u5199\u4ee3\u7801\u68c0\u67e5<code>s2</code>\u662f\u5426\u4e3a<code>s1</code>\u65cb\u8f6c\u800c\u6210\uff08\u6bd4\u5982\uff0c<code>waterbottle</code>\u662f<code>erbottlewat</code>\u65cb\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\uff09\u3002</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1as1 = &quot;waterbottle&quot;, s2 = &quot;erbottlewat&quot;\n<strong> \u8f93\u51fa</strong>\uff1aTrue\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1as1 = &quot;aa&quot;, &quot;aba&quot;\n<strong> \u8f93\u51fa</strong>\uff1aFalse\n</pre>\n\n<ol>\n</ol>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u5b57\u7b26\u4e32\u957f\u5ea6\u5728[0, 100000]\u8303\u56f4\u5185\u3002</li>\n</ol>\n\n<p><strong>\u8bf4\u660e:</strong></p>\n\n<ol>\n\t<li>\u4f60\u80fd\u53ea\u8c03\u7528\u4e00\u6b21\u68c0\u67e5\u5b50\u4e32\u7684\u65b9\u6cd5\u5417\uff1f</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/string-rotation-lcci", "path": "/lcci/01.09.String%20Rotation/README_EN.md", "path_cn": "/lcci/01.09.String%20Rotation/README.md", "tags": ["String"], "tags_cn": ["\u5b57\u7b26\u4e32"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100161, "frontend_id": "\u9762\u8bd5\u9898 01.06", "title": "Compress String", "title_cn": "\u5b57\u7b26\u4e32\u538b\u7f29", "content": "<p>Implement a method to perform basic string compression using the counts of repeated characters. For example, the string aabcccccaaa would become a2blc5a3. If the &quot;compressed&quot; string would not become smaller than the original string, your method should return the original string. You can assume the string has only uppercase and lowercase letters (a - z).</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;aabcccccaaa&quot;\r\n<strong>Output: </strong>&quot;a2b1c5a3&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;abbccd&quot;\r\n<strong>Output: </strong>&quot;abbccd&quot;\r\n<strong>Explanation: </strong>\r\nThe compressed string is &quot;a1b2c2d1&quot;, which is longer than the original string.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= S.length &lt;= 50000</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u5b57\u7b26\u4e32\u538b\u7f29\u3002\u5229\u7528\u5b57\u7b26\u91cd\u590d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\uff0c\u5b9e\u73b0\u57fa\u672c\u7684\u5b57\u7b26\u4e32\u538b\u7f29\u529f\u80fd\u3002\u6bd4\u5982\uff0c\u5b57\u7b26\u4e32<code>aabcccccaaa</code>\u4f1a\u53d8\u4e3a<code>a2b1c5a3</code>\u3002\u82e5\u201c\u538b\u7f29\u201d\u540e\u7684\u5b57\u7b26\u4e32\u6ca1\u6709\u53d8\u77ed\uff0c\u5219\u8fd4\u56de\u539f\u5148\u7684\u5b57\u7b26\u4e32\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff08a\u81f3z\uff09\u3002</p>\n\n<p> <strong>\u793a\u4f8b1:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1a\"aabcccccaaa\"\n<strong> \u8f93\u51fa</strong>\uff1a\"a2b1c5a3\"\n</pre>\n\n<p> <strong>\u793a\u4f8b2:</strong></p>\n\n<pre>\n<strong> \u8f93\u5165</strong>\uff1a\"abbccd\"\n<strong> \u8f93\u51fa</strong>\uff1a\"abbccd\"\n<strong> \u89e3\u91ca</strong>\uff1a\"abbccd\"\u538b\u7f29\u540e\u4e3a\"a1b2c2d1\"\uff0c\u6bd4\u539f\u5b57\u7b26\u4e32\u957f\u5ea6\u66f4\u957f\u3002\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n<li>\u5b57\u7b26\u4e32\u957f\u5ea6\u5728[0, 50000]\u8303\u56f4\u5185\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/compress-string-lcci", "path": "/lcci/01.06.Compress%20String/README_EN.md", "path_cn": "/lcci/01.06.Compress%20String/README.md", "tags": ["String"], "tags_cn": ["\u5b57\u7b26\u4e32"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100160, "frontend_id": "\u9762\u8bd5\u9898 01.03", "title": "String to URL", "title_cn": "URL\u5316", "content": "<p>Write a method to replace all spaces in a string with &#39;%20&#39;. You may assume that the string has sufficient space at the end to hold the additional characters,and that you are given the &quot;true&quot; length of the string. (Note: If implementing in Java,please use a character array so that you can perform this operation in place.)</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;Mr John Smith &quot;, 13\r\n<strong>Output: </strong>&quot;Mr%20John%20Smith&quot;\r\n<strong>Explanation: </strong>\r\nThe missing numbers are [5,6,8,...], hence the third missing number is 8.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>&quot;               &quot;, 5\r\n<strong>Output: </strong>&quot;%20%20%20%20%20&quot;\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= S.length &lt;= 500000</code></li>\r\n</ol>\r\n", "content_cn": "<p>URL\u5316\u3002\u7f16\u5199\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c\u5168\u90e8\u66ff\u6362\u4e3a<code>%20</code>\u3002\u5047\u5b9a\u8be5\u5b57\u7b26\u4e32\u5c3e\u90e8\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653e\u65b0\u589e\u5b57\u7b26\uff0c\u5e76\u4e14\u77e5\u9053\u5b57\u7b26\u4e32\u7684&ldquo;\u771f\u5b9e&rdquo;\u957f\u5ea6\u3002\uff08\u6ce8\uff1a\u7528<code>Java</code>\u5b9e\u73b0\u7684\u8bdd\uff0c\u8bf7\u4f7f\u7528\u5b57\u7b26\u6570\u7ec4\u5b9e\u73b0\uff0c\u4ee5\u4fbf\u76f4\u63a5\u5728\u6570\u7ec4\u4e0a\u64cd\u4f5c\u3002\uff09</p>\n\n<p><strong>\u793a\u4f8b1:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a&quot;Mr John Smith    &quot;, 13\n<strong> \u8f93\u51fa</strong>\uff1a&quot;Mr%20John%20Smith&quot;\n</pre>\n\n<p><strong>\u793a\u4f8b2:</strong></p>\n\n<pre><strong> \u8f93\u5165</strong>\uff1a&quot;               &quot;, 5\n<strong> \u8f93\u51fa</strong>\uff1a&quot;%20%20%20%20%20&quot;\n</pre>\n\n<p><strong>\u63d0\u793a\uff1a</strong></p>\n\n<ol>\n\t<li>\u5b57\u7b26\u4e32\u957f\u5ea6\u5728[0, 500000]\u8303\u56f4\u5185\u3002</li>\n</ol>\n", "url": "", "url_cn": "https://leetcode.cn/problems/string-to-url-lcci", "path": "/lcci/01.03.String%20to%20URL/README_EN.md", "path_cn": "/lcci/01.03.String%20to%20URL/README.md", "tags": ["String"], "tags_cn": ["\u5b57\u7b26\u4e32"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100159, "frontend_id": "\u9762\u8bd5\u9898 01.02", "title": "Check Permutation", "title_cn": "\u5224\u5b9a\u662f\u5426\u4e92\u4e3a\u5b57\u7b26\u91cd\u6392", "content": "<p>Given two strings,write a method to decide if one is a permutation of the other.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>s1</code> = &quot;abc&quot;, <code>s2</code> = &quot;bca&quot;\r\n<strong>Output: </strong>true\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>s1</code> = &quot;abc&quot;, <code>s2</code> = &quot;bad&quot;\r\n<strong>Output: </strong>false\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>0 &lt;= len(s1) &lt;= 100 </code></li>\r\n\t<li><code>0 &lt;= len(s2) &lt;= 100</code></li>\r\n</ol>\r\n", "content_cn": "<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 <code>s1</code> \u548c <code>s2</code>\uff0c\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u786e\u5b9a\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u91cd\u65b0\u6392\u5217\u540e\uff0c\u80fd\u5426\u53d8\u6210\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>s1</code> = &quot;abc&quot;, <code>s2</code> = &quot;bca&quot;\n<strong>\u8f93\u51fa:</strong> true \n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>s1</code> = &quot;abc&quot;, <code>s2</code> = &quot;bad&quot;\n<strong>\u8f93\u51fa:</strong> false\n</pre>\n\n<p><strong>\u8bf4\u660e\uff1a</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= len(s1) &lt;= 100 </code></li>\n\t<li><code>0 &lt;= len(s2) &lt;= 100 </code></li>\n</ul>\n", "url": "", "url_cn": "https://leetcode.cn/problems/check-permutation-lcci", "path": "/lcci/01.02.Check%20Permutation/README_EN.md", "path_cn": "/lcci/01.02.Check%20Permutation/README.md", "tags": ["Array", "String"], "tags_cn": ["\u6570\u7ec4", "\u5b57\u7b26\u4e32"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}, {"id": 100158, "frontend_id": "\u9762\u8bd5\u9898 01.01", "title": "Is Unique", "title_cn": "\u5224\u5b9a\u5b57\u7b26\u662f\u5426\u552f\u4e00", "content": "<p>Implement an algorithm to determine if a string has all unique characters. What if you cannot use additional data structures?</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>s</code> = &quot;leetcode&quot;\r\n<strong>Output: </strong>false\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><code>s</code> = &quot;abc&quot;\r\n<strong>Output: </strong>true\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= len(s) &lt;= 100 </code></li>\r\n</ul>\r\n", "content_cn": "<p>\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\uff0c\u786e\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \u7684\u6240\u6709\u5b57\u7b26\u662f\u5426\u5168\u90fd\u4e0d\u540c\u3002</p>\n\n<p><strong>\u793a\u4f8b 1\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>s</code> = &quot;leetcode&quot;\n<strong>\u8f93\u51fa:</strong> false \n</pre>\n\n<p><strong>\u793a\u4f8b 2\uff1a</strong></p>\n\n<pre><strong>\u8f93\u5165:</strong> <code>s</code> = &quot;abc&quot;\n<strong>\u8f93\u51fa:</strong> true\n</pre>\n\n<p><strong>\u9650\u5236\uff1a</strong></p>\n<ul>\n\t<li><code>0 <= len(s) <= 100 </code></li>\n\t<li>\u5982\u679c\u4f60\u4e0d\u4f7f\u7528\u989d\u5916\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f1a\u5f88\u52a0\u5206\u3002</li>\n</ul>\n    ", "url": "", "url_cn": "https://leetcode.cn/problems/is-unique-lcci", "path": "/lcci/01.01.Is%20Unique/README_EN.md", "path_cn": "/lcci/01.01.Is%20Unique/README.md", "tags": ["Array"], "tags_cn": ["\u6570\u7ec4"], "difficulty": "Easy", "difficulty_cn": "\u7b80\u5355", "category": "lcci"}]